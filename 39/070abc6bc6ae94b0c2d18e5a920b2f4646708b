Return-Path: <caml-list-owner@inria.fr>
Received-SPF: Pass (mailfrom) identity=mailfrom; client-ip=192.134.164.83; helo=mail2-relais-roc.national.inria.fr; envelope-from=caml-list-owner@inria.fr; receiver=<UNKNOWN> 
Authentication-Results: plum; dmarc=fail (p=none dis=none) header.from=polytechnique.org
Authentication-Results: plum.tunbury.org;
	dkim=pass (1024-bit key; unprotected) header.d=inria.fr header.i=@inria.fr header.a=rsa-sha256 header.s=dc header.b=PIhTtvnX;
	dkim=fail reason="signature verification failed" (1024-bit key; secure) header.d=polytechnique.org header.i=@polytechnique.org header.a=rsa-sha256 header.s=svoboda header.b=Ng1u4EhJ;
	dkim-atps=neutral
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by plum.tunbury.org (Postfix) with ESMTPS id B4CF4B80123
	for <caml-list@tunbury.org>; Tue, 23 Jul 2024 14:31:06 +0100 (BST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
  d=inria.fr; s=dc;
  h=from:to:date:message-id:mime-version:subject:reply-to:
   sender:list-id:list-help:list-subscribe:list-unsubscribe:
   list-post:list-owner:list-archive;
  bh=J7mCVvJGY+bHOZBJM4eLX4Xt68aVQ8Qdj8umphRGFXQ=;
  b=PIhTtvnX5bODY3Y8UkAkBoviKP6dPJuhyoYEKlbk2WMlMhhayeBl7gtf
   r9zWDFB1AXLf8dmHV2SsshgqoMgGe5q4cx7eYH1KZIJzekB4HOPn9CBqL
   /CY1S+z35zh9nuHDOT3mvkylb+YcClqIqXgmopgmqZtp4IzTlaD7wgL/T
   U=;
Received-SPF: Pass (mail2-relais-roc.national.inria.fr: domain of
  caml-list-owner@inria.fr designates 128.93.162.160 as
  permitted sender) identity=mailfrom;
  client-ip=128.93.162.160;
  receiver=mail2-relais-roc.national.inria.fr;
  envelope-from="caml-list-owner@inria.fr";
  x-sender="caml-list-owner@inria.fr"; x-conformance=spf_only;
  x-record-type="v=spf1"; x-record-text="v=spf1
  include:mailout.safebrands.com a:basic-mail.safebrands.com
  a:basic-mail01.safebrands.com a:basic-mail02.safebrands.com
  ip4:128.93.142.0/24 ip4:192.134.164.0/24 ip4:128.93.162.160
  ip4:89.107.174.7 mx ~all"
Received-SPF: None (mail2-relais-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@sympa.inria.fr) identity=helo;
  client-ip=128.93.162.160;
  receiver=mail2-relais-roc.national.inria.fr;
  envelope-from="caml-list-owner@inria.fr";
  x-sender="postmaster@sympa.inria.fr"; x-conformance=spf_only
Authentication-Results: mail2-relais-roc.national.inria.fr; spf=Pass smtp.mailfrom=caml-list-owner@inria.fr; spf=None smtp.helo=postmaster@sympa.inria.fr; dkim=hardfail (signature did not verify [final]) header.i=@polytechnique.org
X-IronPort-AV: E=Sophos;i="6.09,230,1716242400"; 
   d="scan'208,217";a="176668786"
Received: from prod-listesu18.inria.fr (HELO sympa.inria.fr) ([128.93.162.160])
  by mail2-relais-roc.national.inria.fr with ESMTP; 23 Jul 2024 15:31:06 +0200
Received: by sympa.inria.fr (Postfix, from userid 20132)
	id 7D12FE0D1B; Tue, 23 Jul 2024 15:31:05 +0200 (CEST)
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id 4652BE0131
	for <caml-list@sympa.inria.fr>; Tue, 23 Jul 2024 15:31:01 +0200 (CEST)
IronPort-SDR: 669fb092_MhCXOuDLqF6dt7H+JaC862IF+T4MIvYHK/Re39lRtS20Sn4
 A/xyaa4m8s4jT6qSTeyKbld58H+nvZ3gxAI9ReQ==
X-IPAS-Result: =?us-ascii?q?A0FIAQAesJ9mlyIeaIFahBlbKBkBYlozBwhIhFaDT44dg?=
 =?us-ascii?q?RaQMYp0gWqBEQMYFiMUAQMBDS4BBQ0BAgQBAQMBAgGEOUYCFokgAh8GAQQ0E?=
 =?us-ascii?q?wECBAEBAQEDAgMBAQEBAQEIAQEFAQEBAgEBAgQGAQIQAQEBAQEBAQE3BUmFd?=
 =?us-ascii?q?Q2CSi4jPzBjAgYDBgEBAQEBAQEBAScBAQEBAQEBAQEBAQEBAQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQEBAQEBAQEBAQEBAQEBAQEBAgwBBxIaTxwJChMBATgYIwMJCwEGAwIED?=
 =?us-ascii?q?QE1FwESGgGCDVgBgmQDBQwGkgmbPHqBMoEBggwBAQaBCD4DCwICAwEOCSUB2?=
 =?us-ascii?q?gSBYwmBMBiIIRoBJ0hpAoQvhEICJw+BVUSBFTWCPQdvgX5BCxcBAQEBGEQ7J?=
 =?us-ascii?q?QEBTQkJgxyCaYUYgnIBhUZXChmCWCJBgRM6LgFagR1FX4IiD4EoBXECBgoMc?=
 =?us-ascii?q?ChWDEsPV3I/EkIOE4JzfSQCC4EbEIMMR4hfgUlLMyETAVUTFws+HQIWAxsUB?=
 =?us-ascii?q?DAPCQsmKQY5AhIMBgYGWTIJBCMDCAQDQgMgcREDBBoECwd3gTyBaQQTRAOBN?=
 =?us-ascii?q?4cOgk+DMYIYhBuFMIFrDGGHdoFxgT6BYEqCfkuFUB1AAwttPTUUG6ohBDgCg?=
 =?us-ascii?q?w8mDjgHTBUCJgUBEwgOAiACLggODh0HAxkdCQUFBARFAQkCCx4RA4x+hW8sn?=
 =?us-ascii?q?S2UVTQHhBeBXQYMiH+BJI4lh0uEBYFWiyqGfJI7IphKIIlTgSUJX4EsTJUWL?=
 =?us-ascii?q?AcMhUCBfiM8bx4MBzMaMEOCMwEBATEJCjwcD44tFoEMAQSCR4E+gSaBdTuCb?=
 =?us-ascii?q?cM9MkE1AgEBBzACBwEKAQEDCYViAQGDPmlhAQE?=
IronPort-PHdr: A9a23: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
 z1+AnxLpcf2f4mHwToJj/z63ufK0BCKf8Z7WCE=
IronPort-Data: A9a23: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
 wQ=
IronPort-HdrOrdr: A9a23:zcy7aam8WHrunBgvVRQ8Gc9Mdz/pDfLc3DAbv31ZSRFFG/Fw9/
 rEoB1p73HJYVEqKQkdcLG7Scy9qBznmKKdjbNxAV7AZmXbUQmTRr2KPbGD/9SIIUSXygc379
 YDT0ERMqySMbE3t6nHyTj9KMw4yN2LtIijmOfZyB5WPHhXQpAl1B1hAgKXVnVrSBVLQbo1fa
 DsgfZvln6aY20easn+PHUfQOTZzue78K7OUFo9HhYi5U20gSm17aOSKWn/4isj
X-Talos-CUID: 9a23:uEROFW3csd9EDXGwE24+5rxfSswvf03XznnpHmCEBFxoTaasR3KewfYx
X-Talos-MUID: 9a23:7TWn8AvDMnUfT7+gqM2nqixhBoRs546VKW8sr6oZndeZKwhQNGLI
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-AV: E=Sophos;i="6.09,230,1716242400"; 
   d="scan'208,217";a="92782984"
X-MGA-submission: =?us-ascii?q?MDGCgT7itNkG5gHyaRJlawh+093DK4PT206iOe?=
 =?us-ascii?q?eJjremsFDTZYov8jkA6T+bK/74UmvGjxNtsP1asCDN2Sq/C6thhnkgz5?=
 =?us-ascii?q?iHiSHHHTVTKLIaJLtNx/Euv+yIkixsbxwfRowDJ5zFuqESU6GgYZbRyl?=
 =?us-ascii?q?sbznmDHwGTYPCLOB6Rc6VfxA=3D=3D?=
Received: from mx1.polytechnique.org ([129.104.30.34])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 23 Jul 2024 15:30:59 +0200
Received: from mac-03220211.irisa.fr (mac-03220211.irisa.fr [131.254.21.249])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ssl.polytechnique.org (Postfix) with ESMTPSA id 65C125647D0;
	Tue, 23 Jul 2024 15:30:57 +0200 (CEST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=polytechnique.org;
	s=svoboda; t=1721741457;
	bh=DdEZV4fTzoK7ct6bE/gkYH1kIudAQCME2R9Sgr+vN7I=;
	h=From:To:Subject:Date:Message-ID;
	b=Ng1u4EhJjLYEQf0GPYqgUSz4wtNdvc8iQ4jWhT6DaTL3sD3WD5YUFzemtP/jvH5jt
	 zsSK4XF92k+IuO5sDgr4/Lo7g07SfG6rQroJmss1EM++ePcQ1N46UZ3Vg/SEkWYarZ
	 eRSMIUahBIPuLTGNfXOVLd0vZLViGFlqyTyv40CU=
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, caml-list@inria.fr
Date: Tue, 23 Jul 2024 15:30:57 +0200
Message-ID: <m2ed7k44mm.fsf@mac-03220211.irisa.fr>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="=-=-="
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Tue Jul 23 15:30:57 2024 +0200 (CEST))
X-Spam-Flag: Unsure, tests=bogofilter, spamicity=0.499995, queueID=AE59B5647E2
X-Org-Mail: alan.schmitt.1995@polytechnique.org
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News
Reply-To: Alan Schmitt <alan.schmitt@polytechnique.org>
X-Loop: caml-list@inria.fr
X-Sequence: 19162
Errors-To: caml-list-owner@inria.fr
Precedence: list
Precedence: bulk
Sender: caml-list-request@inria.fr
X-no-archive: yes
List-Id: <caml-list.inria.fr>
List-Help: <mailto:sympa_inria@inria.fr?subject=help>
List-Subscribe: <mailto:sympa_inria@inria.fr?subject=subscribe%20caml-list>
List-Unsubscribe: <mailto:sympa_inria@inria.fr?subject=unsubscribe%20caml-list>
List-Post: <mailto:caml-list@inria.fr>
List-Owner: <mailto:caml-list-request@inria.fr>
List-Archive: <https://sympa.inria.fr/sympa/arc/caml-list>
Archived-At: <https://sympa.inria.fr/sympa/arcsearch_id/caml-list/2024-07/m2ed7k44mm.fsf%40mac-03220211.irisa.fr>

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: base64

SGVsbG8NCg0KSGVyZSBpcyB0aGUgbGF0ZXN0IE9DYW1sIFdlZWtseSBOZXdzLCBmb3IgdGhlIHdl
ZWsgb2YgSnVseSAxNiB0byAyMywNCjIwMjQuDQoNClRhYmxlIG9mIENvbnRlbnRzDQrilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIANCg0KQSBUb3VyIG9m
IHRoZSBMaXZpbmcgTGlicmFyeSDigJMgQSBTYWZlciBGRkkNCmZpcnN0IHJlbGVhc2Ugb2YgcnBt
ZmlsZQ0KRHVuZSBkZXYgbWVldGluZw0KRmlnaHRpbmcgTXV0YXRpb24gd2l0aCBNdXRhdGlvbiBp
biBMaXZpbmcNCkEgc21hbGwgZXh0ZW5zaW9uIG9mIEJpZ2FycmF5LkdlbmFycmF5IGFkZGluZyBp
dGVyYXRpb24sIG1hcHBpbmcgYW5kIGZvbGRpbmcNCmN1ZGFqaXQ6IEJpbmRpbmdzIHRvIHRoZSBg
Y3VkYScgYW5kIGBudnJ0YycgbGlicmFyaWVzDQpScG1maWxlIDAuMi4wIC0gY2hhbmdlbG9nDQpF
eHBsb3JpbmcgdGhlIERvY3VzYXVydXMrT2RvYyBjb21ibw0KTW9wc2EgMS4wIOKAkyBNb2R1bGFy
IE9wZW4gUGxhdGZvcm0gZm9yIFN0YXRpYyBBbmFseXNpcw0KT0NhbWwgNSBwZXJmb3JtYW5jZQ0K
T3RoZXIgT0NhbWwgTmV3cw0KT2xkIENXTg0KDQoNCkEgVG91ciBvZiB0aGUgTGl2aW5nIExpYnJh
cnkg4oCTIEEgU2FmZXIgRkZJDQrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZANCg0KICBBcmNoaXZlOg0KICA8aHR0cHM6
Ly9kaXNjdXNzLm9jYW1sLm9yZy90L2Jsb2ctYS10b3VyLW9mLXRoZS1saXZpbmctbGlicmFyeS1h
LXNhZmVyLWZmaS8xNDk4MS8xPg0KDQoNCk1hdHQgV2Fsa2VyIGFubm91bmNlZA0K4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoN
CiAgSSd2ZSB3cml0dGVuIGEgbmV3IGJsb2cgcG9zdCBvbiB0aGUgYGxpdmluZycgbGlicmFyeSBJ
IGFubm91bmNlZCBhIGZldw0KICBkYXlzIGFnby4gIFBsZWFzZSBnaXZlIGl0IGEgcmVhZCBpZiB5
b3UncmUgaW50ZXJlc3RlZCBpbiBzYWZlIHVzZSBvZg0KICBDdHlwZXMsIG9yIG90aGVyd2lzZSBu
ZWVkIGxpZmV0aW1lIG1hbmFnZW1lbnQgaW4gT0NhbWwuDQoNCiAgV291bGQgbG92ZSB0byBoZWFy
IHlvdXIgdmlld3MgaW4gdGhpcyB0aHJlYWQhDQoNCiAgPGh0dHBzOi8vZml6eml4bmVyZC5jb20v
YmxvZy8yMDI0LTA3LTE3LXRvdXJpbmctdGhlLWxpdmluZy1saWJyYXJ5Lz4NCg0KDQpmaXJzdCBy
ZWxlYXNlIG9mIHJwbWZpbGUNCuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkA0KDQogIEFyY2hpdmU6DQogIDxodHRw
czovL2Rpc2N1c3Mub2NhbWwub3JnL3QvYW5uLWZpcnN0LXJlbGVhc2Utb2YtcnBtZmlsZS8xNDk4
NS8xPg0KDQoNCk1pa2hhaWwgYW5ub3VuY2VkDQrilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIANCg0KICBJJ20gaGFwcHkgdG8gYW5ub3VuY2UgdGhlIGZp
cnN0IHJlbGVhc2Ugb2YgW3JwbWZpbGVdLCBhIHNtYWxsIGxpYnJhcnkNCiAgZm9yIHJlYWRpbmcg
bWV0YSBpbmZvcm1hdGlvbiBmcm9tIFJQTSBwYWNrYWdlcyAodmVyc2lvbiAzLjApLiBJdCB1c2Vz
DQogIHRoZSBBbmdzdHJvbSBjb21iaW5hdG9yIHBhcnNlciBsaWJyYXJ5LCB3aGljaCBhbGxvd3Mg
aXQgdG8gcGVyZm9ybQ0KICBzdHJlYW1pbmcgcGFyc2luZyB1c2luZyBMd3Qgb3IgQXN5bmMuDQoN
CiAgSG93IHRvIGdldCBhIHBhY2thZ2Ugc3VtbWFyeToNCiAg4pSM4pSA4pSA4pSA4pSADQogIOKU
giBtb2R1bGUgUnBtX3JlYWRlciA9IFJwbWZpbGUuUmVhZGVyIChScG1maWxlLlNlbGVjdG9yLkFs
bCkNCiAg4pSCIA0KICDilIIgbGV0IG1ldGFkYXRhID0gUnBtX3JlYWRlci5vZl9maWxlX2V4biAi
aGVsbG8tMi4xMi4xLTEuNy54ODZfNjQucnBtIg0KICDilIIgDQogIOKUgiBScG1maWxlLnN1bW1h
cnkgbWV0YWRhdGENCiAg4pSCICgqIC0gOiBzdHJpbmcgPSAiQSBGcmllbmRseSBHcmVldGluZyBQ
cm9ncmFtIiAqKQ0KICDilJTilIDilIDilIDilIANCg0KICBUaGUgZGVmYXVsdCByZWFkZXIgbW9k
dWxlIGNhbiByZWFkIGZyb20gYSBzdHJpbmcgb3IgZmlsZSwgYnV0IGhhcyBwb29yDQogIHBlcmZv
cm1hbmNlLiBJdCBuZWVkcyBhIHNlbGVjdG9yIG1vZHVsZSB0byBzZWxlY3QgdGhlIHRhZ3MgdG8N
CiAgcGFyc2UuIFRoZSBleGFtcGxlIHVzZXMgYFNlbGVjdG9yLkFsbCcgdG8gcGFyc2UgYWxsIHRh
Z3MuDQoNCiAgSSBhbSBkZXZlbG9waW5nIHRoaXMgbGlicmFyeSBmb3IgbXkgcGV0IHByb2plY3Qg
dG8gY3JlYXRlIGENCiAgc2VsZi1ob3N0ZWQgUlBNIHJlcG9zaXRvcnkgbWFuYWdlbWVudCBzb2x1
dGlvbi4NCg0KICBUaGFuayB5b3UgZm9yIHlvdXIgYXR0ZW50aW9uIQ0KDQoNCltycG1maWxlXSA8
aHR0cHM6Ly9naXRodWIuY29tL2R4M21vZC9ycG1maWxlPg0KDQoNCkR1bmUgZGV2IG1lZXRpbmcN
CuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkA0KDQogIEFy
Y2hpdmU6IDxodHRwczovL2Rpc2N1c3Mub2NhbWwub3JnL3QvYW5uLWR1bmUtZGV2LW1lZXRpbmcv
MTQ5OTQvMT4NCg0KDQptYWlzdGUgYW5ub3VuY2VkDQrilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIANCg0KICBXZSBhcmUgb3JnYW5pemluZyBhIG5ldyBwdWJs
aWMgRHVuZSBkZXYgbWVldGluZyBvbiAqV2VkbmVzZGF5LCBKdWx5LA0KICAyNHRoIGF0IDEwYW0g
Q0VUKi4gSXQgd2lsbCBiZSBvbmUgaG91ciBsb25nLg0KDQogIFdoZXRoZXIgeW91IGFyZSBhIG1h
aW50YWluZXIsIGEgcmVndWxhciBjb250cmlidXRvciwgYSBuZXcgam9pbmVyIG9yDQogIGp1c3Qg
Y3VyaW91cywgZmVlbCBmcmVlIHRvIGpvaW4hIFRoZSBnb2FsIG9mIHRoZXNlIG1lZXRpbmdzIGlz
IHRvDQogIHByb3ZpZGUgYSBwbGFjZSB0byBkaXNjdXNzIHRoZSBvbmdvaW5nIHdvcmsgdG9nZXRo
ZXIgOnNtaWxlOiBCZWxvdywNCiAgeW91IGNhbiBmaW5kIHRoZSBhZ2VuZGEgZm9yIHRoaXMgbWVl
dGluZzoNCg0KDQo6c2Nyb2xsOiBBZ2VuZGENCuKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKV
jOKVjOKVjOKVjOKVjOKVjA0KDQogIOKAoiBRdWljayBwcmVzZW50YXRpb24gYWJvdXQgdGhlIGF0
dGVuZGVlcy4NCiAg4oCiIFByZXNlbnRhdGlvbiBhYm91dCB0aGUgb25nb2luZyB3b3JrIGluIER1
bmUuDQogIOKAoiBRdWVzdGlvbnMgYW5kIEFuc3dlcnMuDQogIOKAoiBJbmZvcm1hdGlvbiBkaXNj
dXNzaW9ucw0KDQoNCjpjaGFpbnM6IExpbmtzDQrilYzilYzilYzilYzilYzilYzilYzilYzilYzi
lYzilYzilYzilYzilYwNCg0KICDigKIgTWVldGluZyBsaW5rOiBbem9vbV0NCiAg4oCiIENhbGVu
ZGFyIGV2ZW50OiBbZ29vZ2xlIGNhbGVuZGFyXQ0KICDigKIgV2lraSB3aXRoIGluZm9ybWF0aW9u
IGFuZCBwcmV2aW91cyBub3RlczogW0dpdEh1YiBXaWtpXQ0KDQoNClt6b29tXQ0KPGh0dHBzOi8v
dXMwNndlYi56b29tLnVzL2ovODUwOTY4Nzc3NzY/cHdkPWNXTmhVMWRIUTFaTlNqWnVPVVpDUTBo
MmJ5OVVkejA5Pg0KDQpbZ29vZ2xlIGNhbGVuZGFyXQ0KPGh0dHBzOi8vY2FsZW5kYXIuZ29vZ2xl
LmNvbS9jYWxlbmRhci9lbWJlZD9zcmM9Y181Y2Q2OThkZjY3ODRlMzg1YjFjZGNkYzFkYmNhMThj
MDYxZmFhOTY5NTlhMDQ3ODE1NjZkMzA0ZGM5ZWM3MzE5JTQwZ3JvdXAuY2FsZW5kYXIuZ29vZ2xl
LmNvbT4NCg0KW0dpdEh1YiBXaWtpXSA8aHR0cHM6Ly9naXRodWIuY29tL29jYW1sL2R1bmUvd2lr
aSNkZXYtbWVldGluZ3M+DQoNCg0KRmlnaHRpbmcgTXV0YXRpb24gd2l0aCBNdXRhdGlvbiBpbiBM
aXZpbmcNCuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkA0KDQogIEFyY2hpdmU6DQogIDxodHRwczovL2Rpc2N1c3Mub2NhbWwu
b3JnL3QvYmxvZy1maWdodGluZy1tdXRhdGlvbi13aXRoLW11dGF0aW9uLWluLWxpdmluZy8xNTAw
My8xPg0KDQoNCk1hdHQgV2Fsa2VyIGFubm91bmNlZA0K4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoNCiAgTmV3IGJsb2cgcG9z
dCBhYm91dCBmaXhpbmcgdGhlIG1pc3Rha2VzIGluIHRoZSBgbGl2aW5nJyBsaWJyYXJ5Lg0KICBQ
bGVhc2UgdGFrZSBhIGxvb2sgaWYgeW91J3JlIGludGVyZXN0ZWQgaW4gaW50ZXJmYWNpbmcgb2Nh
bWwgd2l0aA0KICBleHRlcm5hbCByZXNvdXJjZXMuDQoNCiAgPGh0dHBzOi8vZml6eml4bmVyZC5j
b20vYmxvZy8yMDI0LTA3LTIxLWZpeGluZy1saXZpbmcvPg0KDQogIEluIHBhcnRpY3VsYXIsIEkg
dGhpbmsgdGhlIGxpYnJhcnkgY29tZXMgZ29vZCB3aXRoIGl0cyBndWFyYW50ZWVzIG5vdw0KICB0
aGF0DQogIDEuIGlmIGV2ZXJ5IGZ1bmN0aW9uIGlzIHByb3Blcmx5IGRlcGVuZGVudCwgYW5kDQog
IDIuIHlvdSBvbmx5IGB1bnNhZmVfZnJlZScgdmFsdWVzIHRoYXQgYXJlIGRpc2pvaW50IGZyb20g
dGhlaXINCiAgICAgZGVwZW5kZW5jaWVzLCB0aGVuDQogIHlvdSB3aWxsIG9idGFpbiBhIHNvdW5k
IHByb2dyYW0gd2hlbiB1c2luZyB0aGUgQ3R5cGVzIGZmaSwgaW4gdGVybXMgb2YNCiAgdGhlcmUg
YmVpbmcgbm8gdXNlLWFmdGVyLWZyZWUgZXJyb3JzLg0KDQogIFBsZWFzZSBsZXQgbWUga25vdyBp
ZiB5b3UgZGlzYWdyZWUhDQoNCg0KQSBzbWFsbCBleHRlbnNpb24gb2YgQmlnYXJyYXkuR2VuYXJy
YXkgYWRkaW5nIGl0ZXJhdGlvbiwgbWFwcGluZyBhbmQgZm9sZGluZw0K4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQDQoNCiAgQXJjaGl2ZToN
CiAgPGh0dHBzOi8vZGlzY3Vzcy5vY2FtbC5vcmcvdC9hbm4tYS1zbWFsbC1leHRlbnNpb24tb2Yt
YmlnYXJyYXktZ2VuYXJyYXktYWRkaW5nLWl0ZXJhdGlvbi1tYXBwaW5nLWFuZC1mb2xkaW5nLzE1
MDA1LzE+DQoNCg0KTkFsZWMgYW5ub3VuY2VkDQrilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIANCg0KICBJIG5lZWRlZCBhIGZldyBmdW5jdGlvbnMgd2hpY2ggd2Vy
ZSBtaXNzaW5nIGluIHRoZSBbT0NhbWwgbGlicmFyeSA6DQogIEJpZ2FycmF5LkdlbmFycmF5XSwg
YW5kIGRlY2lkZWQgdG8gd3JpdGUgdGhlbSBmb3IgbXkgb3duIHB1cnBvc2UgOg0KICDigKIgSXRl
cmF0aW9uIG9uIGdlbmFycmF5cw0KICDigKIgbWFwcGluZyBvbiBnZW5hcnJheXMNCiAg4oCiIGZv
bGRpbmcgb24gZ2VuYXJyYXlzDQoNCiAgVG9kYXkgSSBiZWxpZXZlIHRoaXMgY2FuIGJlIHVzZWZ1
bGwgZm9yIG90aGVycywgYW5kIG1heSBzdWZmZXIgYSBjb2RlDQogIGluc3BlY3Rpb24gYXMgSSBh
bSBub3QgdGhhdCBleHBlcmllbmNlZCBpbiBPQ2FtbC4gSSBhbSByZWFkeSB0byBoYXZlDQogIHRo
aXMgcGllY2Ugb2YgY29kZSBldm9sdmUgaWYgaXQgaXMgdXNlZnVsbCBzbyBldmVuIChhbmQgbWF5
YmUgZmlyc3QpIGENCiAgZmVlZGJhY2sgb24gdGhlIHVzZWZ1bGxuZXNzIG9mIHN1Y2ggY29kZSBp
cyB3ZWxjb21lLg0KDQogIFRoZSBvbmx5IGFsdGVybmF0aXZlIEkgd2FzIGdpdmVuIHdhcyB0aGUg
ZmFtb3VzIE93bCBsaWJyYXJ5LCB3aGljaCB3YXMNCiAgd2F5IHRvIGhlYXZ5IGZvciBteSBuZWVk
cywgYW5kIG5vdCBlYXNpbHkgdXNhYmxlIChpZiBub3QNCiAgdW5kZXJzdGFuZGFibGUpLiBUaGlz
IGV4dGVuc2lvbiBpcyB2ZXJ5IHNpbXBsZSwgaXQgaXMgaXRzDQogIHN0cmVuZ2h0LiBVbHRpbWF0
ZWx5LCBpdCBjb3VsZCBiZSBtZXJnZWQgaW4gdGhlIHN0YW5kYXJkIGxpYnJhcnkg4oCmDQogIG1h
eWJlIGFmdGVyIHNvbWUgd29yayBpbmRlZWQgOiB5b3UgdGVsbCBtZS4NCg0KICBUaGVyZSBpcyBh
IGNsZWFuIGRvY3VtZW50YXRpb24gSSBndWVzcywgaG9wZSB0aGlzIGNhbiBoZWxwIDoNCiAgW0dl
bkFycmF5SXRlcl0NCg0KICBMb29raW5nIGZvcndhcmQgdG8gaGVhcmluZyBmcm9tIHlvdSBhbGwu
DQoNCg0KW09DYW1sIGxpYnJhcnkgOiBCaWdhcnJheS5HZW5hcnJheV0NCjxodHRwczovL29jYW1s
Lm9yZy9tYW51YWwvNS4yL2FwaS9CaWdhcnJheS5HZW5hcnJheS5odG1sPg0KDQpbR2VuQXJyYXlJ
dGVyXSA8aHR0cHM6Ly9naXRodWIuY29tL0hleWppMi9HZW5BcnJheUl0ZXI+DQoNCg0KY3VkYWpp
dDogQmluZGluZ3MgdG8gdGhlIGBjdWRhJyBhbmQgYG52cnRjJyBsaWJyYXJpZXMNCuKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkA0KDQogIEFyY2hpdmU6DQogIDxo
dHRwczovL2Rpc2N1c3Mub2NhbWwub3JnL3QvYW5uLWN1ZGFqaXQtYmluZGluZ3MtdG8tdGhlLWN1
ZGEtYW5kLW52cnRjLWxpYnJhcmllcy8xNTAxMC8xPg0KDQoNCkx1a2FzeiBTdGFmaW5pYWsgYW5u
b3VuY2VkDQrilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIDilIDilIANCg0KICBIaSEgSSdtIGhhcHB5IHRvIHNoYXJl
IGN1ZGFqaXQgMC40LjA6IG1hbnVhbGx5LXNlbGVjdGVkIGJpbmRpbmdzIGZvcg0KICBOdmlkaWEg
R1BVIHByb2dyYW1taW5nLiBjdWRhaml0IHNob3VsZCBzb29uIHByb3BhZ2F0ZSB0byB0aGUgb3Bh
bQ0KICByZXBvc2l0b3J5LiAgW0JpbmRpbmdzIHRvIHRoZSBgY3VkYScgYW5kIGBudnJ0YycgbGli
cmFyaWVzIHdpdGggYQ0KICB1bmlmaWVkIGludGVyZmFjZV0gW0FQSSBkb2N1bWVudGF0aW9uXSBD
dXJyZW50bHkgc3VwcG9ydGVkOg0KDQogIOKAoiBDb21waWxpbmcgYSBrZXJuZWwgd2l0aCBjb252
ZXJzaW9uIHRvIFBUWCwgbGF1bmNoaW5nIGEga2VybmVsLg0KICDigKIgU3luY2hyb25vdXMgYW5k
IGFzeW5jaHJvbm91cyBtZW1vcnkgY29weWluZy4NCiAg4oCiIENvbnRleHRzIGFuZCBzdHJlYW1z
Lg0KICDigKIgKEdQVSkgZGV2aWNlIGF0dHJpYnV0ZXMuDQoNCiAgQ3VycmVudGx5IG5vdCBzdXBw
b3J0ZWQ6DQoNCiAg4oCiIEV2ZW50cy4NCiAg4oCiIENVREEgZ3JhcGggZmVhdHVyZXMuDQogIOKA
oiBDb29wZXJhdGl2ZSBrZXJuZWwgbGF1bmNoLg0KDQogIExldCBtZSBrbm93IHlvdXIgbmVlZHMg
c28gSSBjYW4gcHJpb3JpdGl6ZS4gUFJzIGFyZSBhbHNvIHdlbGNvbWUhDQoNCg0KW0JpbmRpbmdz
IHRvIHRoZSBgY3VkYScgYW5kIGBudnJ0YycgbGlicmFyaWVzIHdpdGggYSB1bmlmaWVkIGludGVy
ZmFjZV0NCjxodHRwczovL2dpdGh1Yi5jb20vbHVrc3RhZmkvb2NhbWwtY3VkYWppdD4NCg0KW0FQ
SSBkb2N1bWVudGF0aW9uXQ0KPGh0dHBzOi8vbHVrc3RhZmkuZ2l0aHViLmlvL29jYW1sLWN1ZGFq
aXQvY3VkYWppdC9DdWRhaml0L2luZGV4Lmh0bWw+DQoNCg0KUnBtZmlsZSAwLjIuMCAtIGNoYW5n
ZWxvZw0K4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQDQoNCiAgQXJjaGl2ZToNCiAgPGh0dHBzOi8vZGlzY3Vz
cy5vY2FtbC5vcmcvdC9hbm4tZmlyc3QtcmVsZWFzZS1vZi1ycG1maWxlLzE0OTg1Pg0KDQoNCk1p
a2hhaWwgYW5ub3VuY2VkDQrilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIANCg0KICBIZWxsbyBhZ2FpbiwgZXZlcnlvbmUuIDp3YXZlOiBUb2RheSBJIHdh
bnQgdG8gdGVsbCB5b3UgYWJvdXQgd2hhdCBoYXMNCiAgY2hhbmdlZCBpbiBhIG5ldyB2ZXJzaW9u
IG9mIG15IFtycG1maWxlXSBsaWJyYXJ5IChbcHJldmlvdXMgdG9waWNdKQ0KICBmb3IgcmVhZGlu
ZyBtZXRhLWluZm9ybWF0aW9uIGZyb20gUlBNIHBhY2thZ2VzLlNob3VsZCBJIHBvc3QgdGhpcyBp
bg0KICB0aGUgZm9ydW0/IEknbSBzb3JyeS4NCg0KDQpbcnBtZmlsZV0gPGh0dHBzOi8vZ2l0aHVi
LmNvbS9keDNtb2QvcnBtZmlsZT4NCg0KW3ByZXZpb3VzIHRvcGljXQ0KPGh0dHBzOi8vZGlzY3Vz
cy5vY2FtbC5vcmcvdC9hbm4tZmlyc3QtcmVsZWFzZS1vZi1ycG1maWxlLzE0OTg1Pg0KDQpDaGFu
Z2VzDQrilYzilYzilYzilYzilYzilYzilYwNCg0KICDigKIgRml4ZWQgaW5jb3JyZWN0IHN0cmlu
ZyBwYXJzaW5nLiBJIGp1c3QgZm9yZ290IHRvIG1ha2UgYGFkdmFuY2UnDQogICAgYWZ0ZXIgYHRh
a2VfdGlsbCcgKFtjb21taXRdKTsNCiAg4oCiIGBhbmdzdHJvbS11bml4JyBpcyB1c2VkIGJ5IGRl
ZmF1bHQgdG8gcmVhZCBmaWxlcyBpbiB0aGUgYFJlYWRlcicNCiAgICBtb2R1bGUgZnVuY3Rpb25z
LiBQcmV2aW91c2x5LCBhIFJQTSBwYWNrYWdlIHdhcyByZWFkIGVudGlyZWx5IGludG8NCiAgICBt
ZW1vcnk7DQogIOKAoiBPcHRpbWl6ZWQgcGFydGlhbCBwYXJzaW5nIG9mIFtoZWFkZXIgc2VjdGlv
bnNdLiBSZWR1Y2VkIHVubmVjZXNzYXJ5DQogICAgbWVtb3J5IGFsbG9jYXRpb25zIChbY29tbWl0
XSk7DQogIOKAoiBEZWNvZGluZyBpbnRlZ2VycyAoaW50OC9pbnQxNi9pbnQzMi9pbnQ2NCkgdG8g
Km5hdGl2ZSBpbnQqIGluIGFjY2Vzcw0KICAgIGZ1bmN0aW9uc1teMV0gKGxpa2UgYFJwbWZpbGUu
cGF5bG9hZF9zaXplJykuIFlvdSBjYW4gYWxzbyB1c2UgYGdldCcNCiAgICB0byBnZXQgInJhdyIg
dmFsdWVzOw0KICDigKIgSW1wcm92ZWQgY29tcGF0aWJpbGl0eSB3aXRoIDQuMCB2ZXJzaW9uIG9m
IFJQTSBmb3JtYXQgYnkgdXNpbmcNCiAgICAqbmF0aXZlIGludCo7DQogIOKAoiBBZGRlZCBhIG1v
ZHVsZSBgU2VsZWN0b3IuQmFzZScgdG8gc2VsZWN0IG9ubHkgYmFzaWMgcGFja2FnZSBpbmZvDQog
ICAgKFtjb21taXRdKTsNCiAg4oCiIFNvbWUgbmV3IGFjY2VzcyBmdW5jdGlvbnMgYW5kIG91dHB1
dCBmaWVsZHMgb2YgdGhlIENMSSB1dGlsaXR5Lg0KDQoNCltjb21taXRdDQo8aHR0cHM6Ly9naXRo
dWIuY29tL2R4M21vZC9ycG1maWxlL2NvbW1pdC8zYjAxYTM0MzZhMTVkNDk3ZWEyZTRiOTQ2MTEx
MDg1NTUxODlmZjNiPg0KDQpbaGVhZGVyIHNlY3Rpb25zXQ0KPGh0dHBzOi8vcmVmc3BlY3MubGlu
dXhiYXNlLm9yZy9MU0JfMy4xLjEvTFNCLUNvcmUtZ2VuZXJpYy9MU0ItQ29yZS1nZW5lcmljL3Br
Z2Zvcm1hdC5odG1sI0FFTjI2NTgxPg0KDQpbY29tbWl0XQ0KPGh0dHBzOi8vZ2l0aHViLmNvbS9k
eDNtb2QvcnBtZmlsZS9jb21taXQvMjEyMTE5MGY1OWZjODBjZmVkZWE5MDQzYWQxM2I0NDBhYTYw
ZjBkMD4NCg0KW2NvbW1pdF0NCjxodHRwczovL2dpdGh1Yi5jb20vZHgzbW9kL3JwbWZpbGUvY29t
bWl0L2M0YmFmMmZjYzcyOTY1OTM2YmYyZGVhMTNhYmQxYTA5NjgyNmI2N2Q+DQoNCg0KcnBtZmls
ZSB2cyBycG0gLXFpDQrilYzilYzilYzilYzilYzilYzilYzilYzilYzilYzilYzilYzilYzilYzi
lYzilYzilYzilYwNCg0KICBOb3QgYSByZWFsICJiZW5jaG1hcmsiIGZvciBwYXJzaW5nIDEuNSBH
QiBwYWNrYWdlcy4NCg0KICDilIzilIDilIDilIDilIANCiAg4pSCICQgdGltZSBycG0gLXFpIHJl
cG8vKi5ycG0NCiAg4pSCIEV4ZWN1dGVkIGluICAyMjYuODIgbWlsbGlzICAgIGZpc2ggICAgICAg
ICAgIGV4dGVybmFsDQogIOKUgiAgICB1c3IgdGltZSAgMjEyLjc0IG1pbGxpcyAgICAxLjA2IG1p
bGxpcyAgMjExLjY4IG1pbGxpcw0KICDilIIgICAgc3lzIHRpbWUgICAxMy4yMyBtaWxsaXMgICAg
MC4wMCBtaWxsaXMgICAxMy4yMyBtaWxsaXMNCiAg4pSCIA0KICDilIIgJCB0aW1lIHJwbWZpbGUg
cmVwby8qLnJwbQ0KICDilIIgRXhlY3V0ZWQgaW4gIDE1My45NyBtaWxsaXMgICAgZmlzaCAgICAg
ICAgICAgZXh0ZXJuYWwNCiAg4pSCICAgIHVzciB0aW1lICAxMTYuNzQgbWlsbGlzICAgIDAuMDAg
bWlsbGlzICAxMTYuNzQgbWlsbGlzDQogIOKUgiAgICBzeXMgdGltZSAgIDMwLjY1IG1pbGxpcyAg
ICAxLjQ3IG1pbGxpcyAgIDI5LjE4IG1pbGxpcw0KICDilJTilIDilIDilIDilIANCg0KICBScG1m
aWxlIGRvZXNuJ3QgdmVyaWZ5IHNpZ25hdHVyZXMsIHdoaWNoIGlzIHdoeSBpdCBpcyAiZmFzdGVy
Ii4NCg0KDQpXaGF0J3MgbmV4dD8NCuKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKV
jA0KDQogIFRoaXMgaXMgZW5vdWdoIGZvciBteSB0YXNrcywgc28gdGhlcmUgcHJvYmFibHkgd29u
J3QgYmUgYSBuZXh0IHJlbGVhc2UNCiAgOmNvbGRfZmFjZToNCg0KICBUby1EbzogZnVuY3Rpb25h
bGl0eSB0byB3b3JrIHdpdGggc2lnbmF0dXJlcywgcmVhZCBwYXlsb2FkLCBpbXBsZW1lbnQNCiAg
d3JpdGVyIG1vZHVsZSBmb3IgY3JlYXRlIHBhY2thZ2VzLg0KDQogIFRoYW5rIHlvdSBmb3IgeW91
ciBhdHRlbnRpb24hDQoNCiAgUC5TLiBJIGFsc28gd2FudCB0byBhcG9sb2dpemUgZm9yIG15IHRl
cnJpYmxlIEVuZ2xpc2guDQoNCiAgW14xXTogVGhlIGFjY2VzcyBmdW5jdGlvbiBnZXRzIGFuZCBk
ZWNvZGVzIHZhbHVlcyBmcm9tIGEgYG1ldGFkYXRhJw0KICByZWNvcmQuDQoNCg0KRXhwbG9yaW5n
IHRoZSBEb2N1c2F1cnVzK09kb2MgY29tYm8NCuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkA0KDQogIEFyY2hpdmU6DQogIDxodHRwczovL2Rpc2N1c3Mub2Nh
bWwub3JnL3QvZXhwbG9yaW5nLXRoZS1kb2N1c2F1cnVzLW9kb2MtY29tYm8vMTUwMTIvMT4NCg0K
DQpNYXRoaWV1IEJhcmJpbiBhbm5vdW5jZWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIFRvIE9DYW1s
ICYgRG9jdXNhdXJ1cyBlbnRodXNpYXN0cyBvdXQgdGhlcmUgOmNhbWVsOisgOnNhdXJvcG9kOg0K
DQogIFNvbWUgdGltZSBhZ28sIEkgc2hhcmVkIG15IGV4cGVyaWVuY2UgdXNpbmcgRG9jdXNhdXJ1
cyB0byBkb2N1bWVudCBhbg0KICBPQ2FtbCBwcm9qZWN0LCBoaWdobGlnaHRpbmcgdGhlIGludGVn
cmF0aW9uIGJldHdlZW4gRG9jdXNhdXJ1cywNCiAgb2NhbWwtbWR4LCBhbmQgdGhlIGR1bmUgd29y
a2Zsb3cgKHByZXZpb3VzIHBvc3QgW2hlcmVdKS4NCg0KICBUb2RheSBJIHdhbnRlZCB0byBzaGFy
ZSB0aGF0IEkndmUgcmVzdW1lZCB0aGlzIGV4cGxvcmF0aW9uIGluDQogIGRvY3VtZW50YXRpb24g
dG9vbHMgdG8gdHJ5IGFuZCBpbnRlZ3JhdGUgb2RvYy1nZW5lcmF0ZWQgcGFnZXMgaW50bw0KICBE
b2N1c2F1cnVzLCB3aXRoIHRoZSBhaW0gb2YgY3JlYXRpbmcgYSBzb21ld2hhdCBtaW5pbWFsDQog
IHRlbXBsYXRlL2V4YW1wbGUgZm9yIHRoaXMuDQoNCiAgSSd2ZSBwdWJsaXNoZWQgbXkgZXhwZXJp
bWVudCBoZXJlOg0KICBbaHR0cHM6Ly9tYmFyYmluLmdpdGh1Yi5pby9kb2MtZXhwZXJpbWVudC1k
b2N1c2F1cnVzL10uDQoNCiAgSW50ZWdyYXRpbmcgb2RvYyBwb3NlZCBjaGFsbGVuZ2VzIC0gSSd2
ZSB3cml0dGVuIGFib3V0IHRoZSAocHJhZ21hdGljKQ0KICBhcHByb2FjaCBJIHRvb2sgW2hlcmVd
LiBJJ20gbGlua2luZyB0aGlzIFtvZG9jIGlzc3VlXSB0b28sIGZvcg0KICByZWZlcmVuY2UgYWJv
dXQgZXhwbG9yaW5nIG1vcmUgbmF0aXZlIHNvbHV0aW9ucyBmb3IgdGhpcyBpbnRlcm9wLg0KDQog
IEhhdmUgeW91IHRvbyB0cmllZCB0aGlzICJtYWdpYyBjb21ibyIgb2YgRG9jdXNhdXJ1cywgT2Rv
YywgYW5kIE9DYW1sDQogIHRvb2xzPyBBbmQgaWYgc28sIGhvdyBkaWQgeW91IGFwcHJvYWNoIGl0
PyBEbyB5b3UgaGF2ZSBpbnNpZ2h0cyBvcg0KICBzdWdnZXN0aW9ucz8gSWYgdGhpcyBzcGFya3Mg
eW91ciBjdXJpb3NpdHksIHBsZWFzZSBkb24ndCBoZXNpdGF0ZSB0bw0KICBlbmdhZ2Ugd2l0aCB0
aGUgcmVwb3NpdG9yeS4NCg0KDQpbaGVyZV0NCjxodHRwczovL2Rpc2N1c3Mub2NhbWwub3JnL3Qv
dXNpbmctZG9jdXNhdXJ1cy10by1kb2N1bWVudC1hbi1vY2FtbC1wcm9qZWN0LzEzMzU5Pg0KDQpb
aHR0cHM6Ly9tYmFyYmluLmdpdGh1Yi5pby9kb2MtZXhwZXJpbWVudC1kb2N1c2F1cnVzL10NCjxo
dHRwczovL21iYXJiaW4uZ2l0aHViLmlvL2RvYy1leHBlcmltZW50LWRvY3VzYXVydXMvPg0KDQpb
aGVyZV0gPGh0dHBzOi8vbWJhcmJpbi5naXRodWIuaW8vZG9jLWV4cGVyaW1lbnQtZG9jdXNhdXJ1
cy9kb2NzL29kb2MvPg0KDQpbb2RvYyBpc3N1ZV0gPGh0dHBzOi8vZ2l0aHViLmNvbS9vY2FtbC9v
ZG9jL2lzc3Vlcy8xMjE+DQoNCg0KTW9wc2EgMS4wIOKAkyBNb2R1bGFyIE9wZW4gUGxhdGZvcm0g
Zm9yIFN0YXRpYyBBbmFseXNpcw0K4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQDQoNCiAgQXJjaGl2ZToNCiAgPGh0dHBzOi8vZGlzY3Vzcy5vY2FtbC5vcmcvdC9h
bm4tbW9wc2EtMS0wLW1vZHVsYXItb3Blbi1wbGF0Zm9ybS1mb3Itc3RhdGljLWFuYWx5c2lzLzE1
MDEzLzE+DQoNCg0KUmFwaGHDq2wgTW9uYXQgYW5ub3VuY2VkDQrilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIANCg0KICBP
biBiZWhhbGYgb2YgYWxsIGl0cyBkZXZlbG9wZXJzLCBJIGFtIGdsYWQgdG8gYW5ub3VuY2UgdGhl
IHJlbGVhc2Ugb2YNCiAgW01vcHNhIDEuMF0hIFlvdSBjYW4ganVzdCBgb3BhbSBpbnN0YWxsIG1v
cHNhJy4NCg0KICBNb3BzYSBzdGFuZHMgZm9yIE1vZHVsYXIgYW5kIE9wZW4gUGxhdGZvcm0gZm9y
IFN0YXRpYyBBbmFseXNpcy4gSXQNCiAgYWltcyBhdCBlYXNpbmcgdGhlIGRldmVsb3BtZW50IGFu
ZCB1c2Ugb2Ygc3RhdGljIGFuYWx5emVycy4gTW9yZQ0KICBzcGVjaWZpY2FsbHksIE1vcHNhIGlz
IGEgZ2VuZXJpYyBmcmFtZXdvcmsgZm9yIGJ1aWxkaW5nIHNvdW5kIHN0YXRpYw0KICBhbmFseXpl
ciBiYXNlZCBvbiB0aGUgdGhlb3J5IG9mIGFic3RyYWN0IGludGVycHJldGF0aW9uLiBNb3BzYSBp
cw0KICBpbmRlcGVuZGVudCBvZiBsYW5ndWFnZSBhbmQgYWJzdHJhY3Rpb24gY2hvaWNlcy4gRGV2
ZWxvcGVycyBhcmUgZnJlZQ0KICB0byBhZGQgYXJiaXRyYXJ5IGFic3RyYWN0aW9ucyAobnVtZXJp
YywgcG9pbnRlciwgbWVtb3J5LCBldGMuKSBhbmQNCiAgc3ludGF4IGl0ZXJhdG9ycyBmb3IgbmV3
IGxhbmd1YWdlcy4gTW9wc2EgZW5jb3VyYWdlcyB0aGUgZGV2ZWxvcG1lbnQNCiAgb2YgaW5kZXBl
bmRlbnQgYWJzdHJhY3Rpb25zIHdoaWNoIGNhbiBjb29wZXJhdGUgb3IgYmUgY29tYmluZWQgdG8N
CiAgaW1wcm92ZSBwcmVjaXNpb24uDQoNCiAgTW9wc2EgY3VycmVudGx5IHN1cHBvcnQgdGhlIGFu
YWx5c2lzIG9mIFB5dGhvbiwgQyBhbmQgUHl0aG9uK0MNCiAgcHJvZ3JhbXMuIEl0IHJlcG9ydHMg
cnVuLXRpbWUgZXJyb3JzIG9uIEMgcHJvZ3JhbXMgYW5kIHVuY2F1Z2h0DQogIGV4Y2VwdGlvbnMg
b24gUHl0aG9uIHByb2dyYW1zLiBPdXIgYmVuY2htYXJrcyBwcm92aWRlIGFuIGlsbHVzdHJhdGl2
ZQ0KICBvdmVydmlldyBvZiB3aGF0IE1vcHNhIGNhbiBjdXJyZW50bHkgYW5hbHl6ZS4gQWxsIGFu
YWx5c2VzIGN1cnJlbnRseQ0KICBwcm92aWRlZCBhcmUgZmxvdyBhbmQgY29udGV4dC1zZW5zaXRp
dmUgKGkuZSwgY29udHJvbC1mbG93IG9wZXJhdG9ycw0KICBhcmUgdGFrZW4gaW50byBhY2NvdW50
IGJ5IHRoZSBhbmFseXNpcywgYW5kIGZ1bmN0aW9ucyBhcmUgYW5hbHl6ZWQgYnkNCiAgdmlydHVh
bCBpbmxpbmluZykuIFRoZSBDIGFuYWx5c2lzIGlzIGFjdGl2ZWx5IGRldmVsb3BlZCBhbmQNCiAg
bWFpbnRhaW5lZC4gVGhlIFB5dGhvbiBhbmQgUHl0aG9uK0MgYW5hbHlzZXMgd29yayBvbiByZWFs
LXdvcmxkDQogIGV4YW1wbGVzLCBidXQgYXJlIG5vdCBhY3RpdmVseSBkZXZlbG9wZWQuDQoNCiAg
UGxlYXNlIG5vdGUgdGhhdCBNb3BzYSBpcyBhbiBhY2FkZW1pYyB0b29sIHVuZGVyIGRldmVsb3Bt
ZW50LiBGZWVsDQogIGZyZWUgdG8gc3VibWl0IFtpc3N1ZXNdIGlmIHlvdSBlbmNvdW50ZXIgYW55
IGJ1ZyENCg0KICBBZGRpdGlvbmFsIHJlc291cmNlczoNCiAg4oCiIFt1c2VyIG1hbnVhbF0NCiAg
4oCiIFtkZW1vIG9mIG91ciBhYnN0cmFjdCBkZWJ1Z2dlcl0NCiAg4oCiIFthY2FkZW1pYyBvdmVy
dmlldyBvZiBNb3BzYV0sIGFuZCBbaW4gYSBQaEQgdGhlc2lzXQ0KICDigKIgW2NvcmV1dGlscyBi
ZW5jaG1hcmtzIG9uIHdoaWNoIE1vcHNhIGNhbiBydW5dDQoNCg0KW01vcHNhIDEuMF0gPGh0dHBz
Oi8vZ2l0bGFiLmNvbS9tb3BzYS9tb3BzYS1hbmFseXplci8+DQoNCltpc3N1ZXNdDQo8aHR0cHM6
Ly9naXRsYWIuY29tL21vcHNhL21vcHNhLWFuYWx5emVyLy0vaXNzdWVzLz9zb3J0PWNyZWF0ZWRf
ZGF0ZSZzdGF0ZT1vcGVuZWQmZmlyc3RfcGFnZV9zaXplPTUwPg0KDQpbdXNlciBtYW51YWxdIDxo
dHRwczovL21vcHNhLmdpdGxhYi5pby9tb3BzYS1hbmFseXplci91c2VyLW1hbnVhbC8+DQoNCltk
ZW1vIG9mIG91ciBhYnN0cmFjdCBkZWJ1Z2dlcl0NCjxodHRwczovL3Jtb25hdC5mci90YWxrLzI0
MDYwNl9jc3YvI2ludGVyYWN0aXZlLWVuZ2luZS1kZW1vPg0KDQpbYWNhZGVtaWMgb3ZlcnZpZXcg
b2YgTW9wc2FdDQo8aHR0cHM6Ly9oYWwuc29yYm9ubmUtdW5pdmVyc2l0ZS5mci9oYWwtMDI4OTA1
MDB2MS9kb2N1bWVudD4NCg0KW2luIGEgUGhEIHRoZXNpc10NCjxodHRwczovL3Jtb25hdC5mci9k
YXRhL3B1YnMvMjAyMS90aGVzaXNfbW9uYXQucGRmI3BhZ2U9NjE+DQoNCltjb3JldXRpbHMgYmVu
Y2htYXJrcyBvbiB3aGljaCBNb3BzYSBjYW4gcnVuXQ0KPGh0dHBzOi8vZ2l0bGFiLmNvbS9tb3Bz
YS9iZW5jaG1hcmtzL2NvcmV1dGlscy1iZW5jaG1hcmtzPg0KDQoNCk9DYW1sIDUgcGVyZm9ybWFu
Y2UNCuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkA0KDQogIEFyY2hpdmU6IDxodHRwczovL2Rpc2N1c3Mub2NhbWwub3JnL3Qvb2NhbWwtNS1w
ZXJmb3JtYW5jZS8xNTAxNC8xPg0KDQoNClRob21hcyBMZW9uYXJkIGFubm91bmNlZA0K4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSADQoNCiAgSSd2ZSBiZWVuIHRyeWluZyBvdXQgc29tZSB0b29scyB0byBpbnZlc3Rp
Z2F0ZSBwZXJmb3JtYW5jZSBwcm9ibGVtcyBpbg0KICBteSBPQ2FtbCBwcm9ncmFtcyBhbmQgSSd2
ZSB3cml0dGVuIHVwIG15IGV4cGVyaWVuY2VzIGhlcmUgaW4gY2FzZQ0KICBvdGhlciBwZW9wbGUg
ZmluZCBpdCB1c2VmdWw6DQoNCiAg4oCiIDxodHRwczovL3Jvc2NpZHVzLmNvbS9ibG9nL2Jsb2cv
MjAyNC8wNy8yMi9wZXJmb3JtYW5jZS8+DQogIOKAoiA8aHR0cHM6Ly9yb3NjaWR1cy5jb20vYmxv
Zy9ibG9nLzIwMjQvMDcvMjIvcGVyZm9ybWFuY2UtMi8+DQoNCiAgVGhlIGZpcnN0IHBvc3QgZXhh
bWluZXMgYSBjYXNlIG9mIHNsb3cgSU8gaW4gYSBjb25jdXJyZW50IEVpbyBwcm9ncmFtLA0KICBh
bmQgdGhlIHNlY29uZCBsb29rcyBhdCBwb29yIEdDIHBlcmZvcm1hbmNlIGluIGEgbXVsdGljb3Jl
IGFwcC4NCg0KICBJbiBwYXJ0aWN1bGFyLCBpdCBzZWVtcyB0aGF0IG1pbm9yIEdDIHBlcmZvcm1h
bmNlIGlzIHZlcnkgc2Vuc2l0aXZlIHRvDQogIG90aGVyIHdvcmsgcnVubmluZyBvbiB0aGUgbWFj
aGluZSwgc2luY2UgYW55IGRvbWFpbiBiZWluZyBsYXRlIHdpbGwNCiAgdHJpZ2dlciB0aGUgb3Ro
ZXJzIHRvIHNsZWVwLCBlLmcuDQoNCiAgPGh0dHBzOi8vZ2xvYmFsLmRpc2NvdXJzZS1jZG4uY29t
L2J1c2luZXNzNy91cGxvYWRzL29jYW1sL29yaWdpbmFsLzJYL2UvZTgyMTg5NWI5MzRmOTUxOWY4
NGQwZTUyZjI4MDU3YmIzMDI3NDA5Mi5wbmc+DQoNCiAgSSdkIGJlIGludGVyZXN0ZWQgdG8ga25v
dyBpZiBvdGhlcnMgY2FuIHNoZWQgbW9yZSBsaWdodCBvbiB0aGlzLCBvcg0KICBoYXZlIG90aGVy
IHByb2ZpbGluZyB0b29scyB0aGV5J3ZlIGZvdW5kIHVzZWZ1bC4NCg0KDQpPdGhlciBPQ2FtbCBO
ZXdzDQrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZANCg0K
RnJvbSB0aGUgb2NhbWwub3JnIGJsb2cNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIEhlcmUgYXJlIGxpbmtz
IGZyb20gbWFueSBPQ2FtbCBibG9ncyBhZ2dyZWdhdGVkIGF0IFt0aGUgb2NhbWwub3JnDQogIGJs
b2ddLg0KDQogIOKAoiBbT0NhbWwgNSBwZXJmb3JtYW5jZSBwYXJ0IDJdDQogIOKAoiBbT0NhbWwg
NSBwZXJmb3JtYW5jZSBwcm9ibGVtc10NCiAg4oCiIFtPQ2FtbCBDb21waWxlciBNYW51YWwgSFRN
TCBHZW5lcmF0aW9uXQ0KDQoNClt0aGUgb2NhbWwub3JnIGJsb2ddIDxodHRwczovL29jYW1sLm9y
Zy9ibG9nLz4NCg0KW09DYW1sIDUgcGVyZm9ybWFuY2UgcGFydCAyXQ0KPGh0dHBzOi8vcm9zY2lk
dXMuY29tL2Jsb2cvYmxvZy8yMDI0LzA3LzIyL3BlcmZvcm1hbmNlLTIvPg0KDQpbT0NhbWwgNSBw
ZXJmb3JtYW5jZSBwcm9ibGVtc10NCjxodHRwczovL3Jvc2NpZHVzLmNvbS9ibG9nL2Jsb2cvMjAy
NC8wNy8yMi9wZXJmb3JtYW5jZS8+DQoNCltPQ2FtbCBDb21waWxlciBNYW51YWwgSFRNTCBHZW5l
cmF0aW9uXQ0KPGh0dHBzOi8vdGFyaWRlcy5jb20vYmxvZy8yMDI0LTA3LTE3LW9jYW1sLWNvbXBp
bGVyLW1hbnVhbC1odG1sLWdlbmVyYXRpb24+DQoNCg0KT2xkIENXTg0K4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQDQoNCiAgSWYgeW91IGhhcHBlbiB0byBtaXNzIGEgQ1dOLCB5b3UgY2FuIFtzZW5kIG1l
IGEgbWVzc2FnZV0gYW5kIEknbGwgbWFpbA0KICBpdCB0byB5b3UsIG9yIGdvIHRha2UgYSBsb29r
IGF0IFt0aGUgYXJjaGl2ZV0gb3IgdGhlIFtSU1MgZmVlZCBvZiB0aGUNCiAgYXJjaGl2ZXNdLg0K
DQogIElmIHlvdSBhbHNvIHdpc2ggdG8gcmVjZWl2ZSBpdCBldmVyeSB3ZWVrIGJ5IG1haWwsIHlv
dSBtYXkgc3Vic2NyaWJlDQogIHRvIHRoZSBbY2FtbC1saXN0XS4NCg0KICBbQWxhbiBTY2htaXR0
XQ0KDQoNCltzZW5kIG1lIGEgbWVzc2FnZV0gPG1haWx0bzphbGFuLnNjaG1pdHRAcG9seXRlY2hu
aXF1ZS5vcmc+DQoNClt0aGUgYXJjaGl2ZV0gPGh0dHBzOi8vYWxhbi5wZXRpdGVwb21tZS5uZXQv
Y3duLz4NCg0KW1JTUyBmZWVkIG9mIHRoZSBhcmNoaXZlc10gPGh0dHBzOi8vYWxhbi5wZXRpdGVw
b21tZS5uZXQvY3duL2N3bi5yc3M+DQoNCltjYW1sLWxpc3RdIDxodHRwczovL3N5bXBhLmlucmlh
LmZyL3N5bXBhL2luZm8vY2FtbC1saXN0Pg0KDQpbQWxhbiBTY2htaXR0XSA8aHR0cHM6Ly9hbGFu
LnBldGl0ZXBvbW1lLm5ldC8+DQoNCg==
--=-=-=
Content-Type: text/html; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2024-07-23 Tue 15:29 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html;charset=3Dutf-8" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
 />
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org Mode" />
<style>
  #content { max-width: 60em; margin: auto; }
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #e6e6e6;
    border-radius: 3px;
    background-color: #f2f2f2;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
  }
  pre.src:before {
    display: none;
    position: absolute;
    top: -8px;
    right: 12px;
    padding: 3px;
    color: #555;
    background-color: #f2f2f299;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-authinfo::before { content: 'Authinfo'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { }
</style>
<style type=3D"text/css">#table-of-contents h2 { display: none } .title { d=
isplay: none } .authorname { text-align: right }</style>
<style type=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
</head>
<body>
<div id=3D"content" class=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p>
<a href=3D"https://alan.petitepomme.net/cwn/2024.07.16.html">Previous Week<=
/a> <a href=3D"https://alan.petitepomme.net/cwn/index.html">Up</a> <a href=
=3D"https://alan.petitepomme.net/cwn/2024.07.30.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of July 16 to 23, 2024.
</p>

<div id=3D"table-of-contents" role=3D"doc-toc">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents" role=3D"doc-toc">
<ul>
<li><a href=3D"#1">A Tour of the Living Library &#x2013; A Safer FFI</a></l=
i>
<li><a href=3D"#2">first release of rpmfile</a></li>
<li><a href=3D"#3">Dune dev meeting</a></li>
<li><a href=3D"#4">Fighting Mutation with Mutation in Living</a></li>
<li><a href=3D"#5">A small extension of Bigarray.Genarray adding iteration,=
 mapping and folding</a></li>
<li><a href=3D"#6">cudajit: Bindings to the <code>cuda</code> and <code>nvr=
tc</code> libraries</a></li>
<li><a href=3D"#7">Rpmfile 0.2.0 - changelog</a></li>
<li><a href=3D"#8">Exploring the Docusaurus+Odoc combo</a></li>
<li><a href=3D"#9">Mopsa 1.0 &#x2013; Modular Open Platform for Static Anal=
ysis</a></li>
<li><a href=3D"#10">OCaml 5 performance</a></li>
<li><a href=3D"#11">Other OCaml News</a></li>
<li><a href=3D"#org2a2c6c9">Old CWN</a></li>
</ul>
</div>
</div>


<div id=3D"outline-container-1" class=3D"outline-2">
<h2 id=3D"1">A Tour of the Living Library &#x2013; A Safer FFI</h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/blog-a-tour-of-the-living-l=
ibrary-a-safer-ffi/14981/1">https://discuss.ocaml.org/t/blog-a-tour-of-the-=
living-library-a-safer-ffi/14981/1</a>
</p>
</div>

<div id=3D"outline-container-org85a1e88" class=3D"outline-3">
<h3 id=3D"org85a1e88">Matt Walker announced</h3>
<div class=3D"outline-text-3" id=3D"text-org85a1e88">
<p>
I've written a new blog post on the <code>living</code> library I announced=
 a few days ago.  Please give it a read if you're interested in safe use of=
 Ctypes, or otherwise need lifetime management in OCaml.
</p>

<p>
Would love to hear your views in this thread!
</p>

<p>
<a href=3D"https://fizzixnerd.com/blog/2024-07-17-touring-the-living-librar=
y/">https://fizzixnerd.com/blog/2024-07-17-touring-the-living-library/</a>
</p>
</div>
</div>
</div>




<div id=3D"outline-container-2" class=3D"outline-2">
<h2 id=3D"2">first release of rpmfile</h2>
<div class=3D"outline-text-2" id=3D"text-2">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-first-release-of-rpmfil=
e/14985/1">https://discuss.ocaml.org/t/ann-first-release-of-rpmfile/14985/1=
</a>
</p>
</div>

<div id=3D"outline-container-org9d49a86" class=3D"outline-3">
<h3 id=3D"org9d49a86">Mikhail announced</h3>
<div class=3D"outline-text-3" id=3D"text-org9d49a86">
<p>
I'm happy to announce the first release of <a href=3D"https://github.com/dx=
3mod/rpmfile">rpmfile</a>, a small library for reading meta information fro=
m RPM packages (version 3.0). It uses the Angstrom combinator parser librar=
y, which allows it to perform streaming parsing using Lwt or Async.
</p>

<p>
How to get a package summary:
</p>
<div class=3D"org-src-container">
<pre class=3D"src src-ocaml"><span style=3D"color: #000000; font-weight: bo=
ld;">module</span> <span style=3D"color: #444fcf;">Rpm_reader</span> =3D <s=
pan style=3D"color: #444fcf;">Rpmfile.Reader (Rpmfile.Selector.All)</span>

<span style=3D"color: #000000; font-weight: bold;">let</span> <span style=
=3D"color: #007a9f;">metadata</span> =3D <span style=3D"color: #444fcf;">Rp=
m_reader.</span>of_file_exn <span style=3D"color: #ca3400;">"hello-2.12.1-1=
.7.x86_64.rpm"</span>

<span style=3D"color: #444fcf;">Rpmfile.</span>summary metadata
<span style=3D"color: #8f6f4a; font-style: italic;">(* </span><span style=
=3D"color: #8f6f4a; font-style: italic;">- : string =3D "A Friendly Greetin=
g Program"</span><span style=3D"color: #8f6f4a; font-style: italic;"> *)</s=
pan>
</pre>
</div>

<p>
The default reader module can read from a string or file, but has poor perf=
ormance. It needs a selector module to select the tags to parse. The exampl=
e uses <code>Selector.All</code> to parse all tags.=20
</p>

<p>
I am developing this library for my pet project to create a self-hosted RPM=
 repository management solution.=20
</p>

<p>
Thank you for your attention!
</p>
</div>
</div>
</div>




<div id=3D"outline-container-3" class=3D"outline-2">
<h2 id=3D"3">Dune dev meeting</h2>
<div class=3D"outline-text-2" id=3D"text-3">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-dune-dev-meeting/14994/=
1">https://discuss.ocaml.org/t/ann-dune-dev-meeting/14994/1</a>
</p>
</div>

<div id=3D"outline-container-org0875e3b" class=3D"outline-3">
<h3 id=3D"org0875e3b">maiste announced</h3>
<div class=3D"outline-text-3" id=3D"text-org0875e3b">
<p>
We are organizing a new public Dune dev meeting on <b>Wednesday, July, 24th=
 at 10am CET</b>. It will be one hour long.
</p>

<p>
Whether you are a maintainer, a regular contributor, a new joiner or just c=
urious, feel free to join! The goal of these meetings is to provide a place=
 to discuss the ongoing work together :smile:
Below, you can find the agenda for this meeting:
</p>
</div>

<div id=3D"outline-container-orgaf1a2cc" class=3D"outline-4">
<h4 id=3D"orgaf1a2cc">:scroll: Agenda</h4>
<div class=3D"outline-text-4" id=3D"text-orgaf1a2cc">
<ul class=3D"org-ul">
<li>Quick presentation about the attendees.</li>
<li>Presentation about the ongoing work in Dune.</li>
<li>Questions and Answers.</li>
<li>Information discussions</li>
</ul>
</div>
</div>

<div id=3D"outline-container-org44f9681" class=3D"outline-4">
<h4 id=3D"org44f9681">:chains: Links</h4>
<div class=3D"outline-text-4" id=3D"text-org44f9681">
<ul class=3D"org-ul">
<li>Meeting link: <a href=3D"https://us06web.zoom.us/j/85096877776?pwd=3DcW=
NhU1dHQ1ZNSjZuOUZCQ0h2by9Udz09">zoom</a></li>
<li>Calendar event: <a href=3D"https://calendar.google.com/calendar/embed?s=
rc=3Dc_5cd698df6784e385b1cdcdc1dbca18c061faa96959a04781566d304dc9ec7319%40g=
roup.calendar.google.com">google calendar</a></li>
<li>Wiki with information and previous notes: <a href=3D"https://github.com=
/ocaml/dune/wiki#dev-meetings">GitHub Wiki</a></li>
</ul>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-4" class=3D"outline-2">
<h2 id=3D"4">Fighting Mutation with Mutation in Living</h2>
<div class=3D"outline-text-2" id=3D"text-4">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/blog-fighting-mutation-with=
-mutation-in-living/15003/1">https://discuss.ocaml.org/t/blog-fighting-muta=
tion-with-mutation-in-living/15003/1</a>
</p>
</div>

<div id=3D"outline-container-orgc3040fd" class=3D"outline-3">
<h3 id=3D"orgc3040fd">Matt Walker announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgc3040fd">
<p>
New blog post about fixing the mistakes in the <code>living</code> library.=
  Please take a look if you're interested in interfacing ocaml with externa=
l resources.
</p>

<p>
<a href=3D"https://fizzixnerd.com/blog/2024-07-21-fixing-living/">https://f=
izzixnerd.com/blog/2024-07-21-fixing-living/</a>
</p>

<p>
In particular, I think the library comes good with its guarantees now that
</p>
<ol class=3D"org-ol">
<li>if every function is properly dependent, and</li>
<li>you only <code>unsafe_free</code> values that are disjoint from their d=
ependencies, then</li>
</ol>
<p>
you will obtain a sound program when using the Ctypes ffi, in terms of ther=
e being no use-after-free errors.
</p>

<p>
Please let me know if you disagree!
</p>
</div>
</div>
</div>




<div id=3D"outline-container-5" class=3D"outline-2">
<h2 id=3D"5">A small extension of Bigarray.Genarray adding iteration, mappi=
ng and folding</h2>
<div class=3D"outline-text-2" id=3D"text-5">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-a-small-extension-of-bi=
garray-genarray-adding-iteration-mapping-and-folding/15005/1">https://discu=
ss.ocaml.org/t/ann-a-small-extension-of-bigarray-genarray-adding-iteration-=
mapping-and-folding/15005/1</a>
</p>
</div>

<div id=3D"outline-container-org20bbb56" class=3D"outline-3">
<h3 id=3D"org20bbb56">NAlec announced</h3>
<div class=3D"outline-text-3" id=3D"text-org20bbb56">
<p>
I needed a few functions which were missing in the <a href=3D"https://ocaml=
.org/manual/5.2/api/Bigarray.Genarray.html">OCaml library : Bigarray.Genarr=
ay</a>, and decided to write them for my own purpose :=20
</p>
<ul class=3D"org-ul">
<li>Iteration on genarrays</li>
<li>mapping on genarrays</li>
<li>folding on genarrays</li>
</ul>

<p>
Today I believe this can be usefull for others, and may suffer a code inspe=
ction as I am not that experienced in OCaml. I am ready to have this piece =
of code evolve if it is usefull so even (and maybe first) a feedback on the=
 usefullness of such code is welcome.
</p>

<p>
The only alternative I was given was the famous Owl library, which was way =
to heavy for my needs, and not easily usable (if not understandable). This =
extension is very simple, it is its strenght. Ultimately, it could be merge=
d in the standard library &#x2026; maybe after some work indeed : you tell =
me.=20
</p>

<p>
There is a clean documentation I guess, hope this can help : <a href=3D"htt=
ps://github.com/Heyji2/GenArrayIter">GenArrayIter</a>
</p>

<p>
Looking forward to hearing from you all.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-6" class=3D"outline-2">
<h2 id=3D"6">cudajit: Bindings to the <code>cuda</code> and <code>nvrtc</co=
de> libraries</h2>
<div class=3D"outline-text-2" id=3D"text-6">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-cudajit-bindings-to-the=
-cuda-and-nvrtc-libraries/15010/1">https://discuss.ocaml.org/t/ann-cudajit-=
bindings-to-the-cuda-and-nvrtc-libraries/15010/1</a>
</p>
</div>

<div id=3D"outline-container-orgc8c008e" class=3D"outline-3">
<h3 id=3D"orgc8c008e">Lukasz Stafiniak announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgc8c008e">
<p>
Hi! I'm happy to share cudajit 0.4.0: manually-selected bindings for Nvidia=
 GPU programming. cudajit should soon propagate to the opam repository.
<a href=3D"https://github.com/lukstafi/ocaml-cudajit">Bindings to the <code=
>cuda</code> and <code>nvrtc</code> libraries with a unified interface</a>
<a href=3D"https://lukstafi.github.io/ocaml-cudajit/cudajit/Cudajit/index.h=
tml">API documentation</a>
Currently supported:
</p>

<ul class=3D"org-ul">
<li>Compiling a kernel with conversion to PTX, launching a kernel.</li>
<li>Synchronous and asynchronous memory copying.</li>
<li>Contexts and streams.</li>
<li>(GPU) device attributes.</li>
</ul>

<p>
Currently not supported:
</p>

<ul class=3D"org-ul">
<li>Events.</li>
<li>CUDA graph features.</li>
<li>Cooperative kernel launch.</li>
</ul>

<p>
Let me know your needs so I can prioritize. PRs are also welcome!
</p>
</div>
</div>
</div>




<div id=3D"outline-container-7" class=3D"outline-2">
<h2 id=3D"7">Rpmfile 0.2.0 - changelog</h2>
<div class=3D"outline-text-2" id=3D"text-7">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-first-release-of-rpmfil=
e/14985">https://discuss.ocaml.org/t/ann-first-release-of-rpmfile/14985</a>
</p>
</div>

<div id=3D"outline-container-org977e9ac" class=3D"outline-3">
<h3 id=3D"org977e9ac">Mikhail announced</h3>
<div class=3D"outline-text-3" id=3D"text-org977e9ac">
<p>
Hello again, everyone. :wave: Today I want to tell you about what has chang=
ed in a new version of my <a href=3D"https://github.com/dx3mod/rpmfile">rpm=
file</a> library (<a href=3D"https://discuss.ocaml.org/t/ann-first-release-=
of-rpmfile/14985">previous topic</a>) for reading meta-information from RPM=
 packages.Should I post this in the forum? I'm sorry.
</p>
</div>

<div id=3D"outline-container-org1e8eb8d" class=3D"outline-4">
<h4 id=3D"org1e8eb8d">Changes</h4>
<div class=3D"outline-text-4" id=3D"text-org1e8eb8d">
<ul class=3D"org-ul">
<li>Fixed incorrect string parsing. I just forgot to make <code>advance</co=
de> after <code>take_till</code> (<a href=3D"https://github.com/dx3mod/rpmf=
ile/commit/3b01a3436a15d497ea2e4b94611108555189ff3b">commit</a>);</li>
<li><code>angstrom-unix</code> is used by default to read files in the <cod=
e>Reader</code> module functions. Previously, a RPM package was read entire=
ly into memory;</li>
<li>Optimized partial parsing of <a href=3D"https://refspecs.linuxbase.org/=
LSB_3.1.1/LSB-Core-generic/LSB-Core-generic/pkgformat.html#AEN26581">header=
 sections</a>. Reduced unnecessary memory allocations (<a href=3D"https://g=
ithub.com/dx3mod/rpmfile/commit/2121190f59fc80cfedea9043ad13b440aa60f0d0">c=
ommit</a>);</li>
<li>Decoding integers (int8/int16/int32/int64) to <b>native int</b> in acce=
ss functions[^1] (like <code>Rpmfile.payload_size</code>). You can also use=
 <code>get</code> to get "raw" values;</li>
<li>Improved compatibility with 4.0 version of RPM format by using <b>nativ=
e int</b>;</li>
<li>Added a module <code>Selector.Base</code> to select only basic package =
info (<a href=3D"https://github.com/dx3mod/rpmfile/commit/c4baf2fcc72965936=
bf2dea13abd1a096826b67d">commit</a>);</li>
<li>Some new access functions and output fields of the CLI utility.</li>
</ul>
</div>
</div>

<div id=3D"outline-container-org200b420" class=3D"outline-4">
<h4 id=3D"org200b420">rpmfile vs rpm -qi</h4>
<div class=3D"outline-text-4" id=3D"text-org200b420">
<p>
Not a real "benchmark" for parsing 1.5 GB packages.
</p>

<pre class=3D"example" id=3D"org0e85b72">
$ time rpm -qi repo/*.rpm
Executed in  226.82 millis    fish           external
   usr time  212.74 millis    1.06 millis  211.68 millis
   sys time   13.23 millis    0.00 millis   13.23 millis

$ time rpmfile repo/*.rpm
Executed in  153.97 millis    fish           external
   usr time  116.74 millis    0.00 millis  116.74 millis
   sys time   30.65 millis    1.47 millis   29.18 millis
</pre>

<p>
Rpmfile doesn't verify signatures, which is why it is "faster".
</p>
</div>
</div>

<div id=3D"outline-container-org35913e6" class=3D"outline-4">
<h4 id=3D"org35913e6">What's next?</h4>
<div class=3D"outline-text-4" id=3D"text-org35913e6">
<p>
This is enough for my tasks, so there probably won't be a next release :col=
d_face:
</p>

<p>
To-Do: functionality to work with signatures, read payload, implement write=
r module for create packages.
</p>

<p>
Thank you for your attention!
</p>

<p>
P.S. I also want to apologize for my terrible English.=20
</p>

<p>
[^1]: The access function gets and decodes values from a <code>metadata</co=
de> record.
</p>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-8" class=3D"outline-2">
<h2 id=3D"8">Exploring the Docusaurus+Odoc combo</h2>
<div class=3D"outline-text-2" id=3D"text-8">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/exploring-the-docusaurus-od=
oc-combo/15012/1">https://discuss.ocaml.org/t/exploring-the-docusaurus-odoc=
-combo/15012/1</a>
</p>
</div>

<div id=3D"outline-container-org3201c6a" class=3D"outline-3">
<h3 id=3D"org3201c6a">Mathieu Barbin announced</h3>
<div class=3D"outline-text-3" id=3D"text-org3201c6a">
<p>
To OCaml &amp; Docusaurus enthusiasts out there :camel:+ :sauropod:
</p>

<p>
Some time ago, I shared my experience using Docusaurus to document an OCaml=
 project, highlighting the integration between Docusaurus, ocaml-mdx, and t=
he dune workflow (previous post <a href=3D"https://discuss.ocaml.org/t/usin=
g-docusaurus-to-document-an-ocaml-project/13359">here</a>).
</p>

<p>
Today I wanted to share that I've resumed this exploration in documentation=
 tools to try and integrate odoc-generated pages into Docusaurus, with the =
aim of creating a somewhat minimal template/example for this.
</p>

<p>
I've published my experiment here: <a href=3D"https://mbarbin.github.io/doc=
-experiment-docusaurus/">https://mbarbin.github.io/doc-experiment-docusauru=
s/</a>.
</p>

<p>
Integrating odoc posed challenges - I've written about the (pragmatic) appr=
oach I took <a href=3D"https://mbarbin.github.io/doc-experiment-docusaurus/=
docs/odoc/">here</a>. I'm linking this <a href=3D"https://github.com/ocaml/=
odoc/issues/121">odoc issue</a> too, for reference about exploring more nat=
ive solutions for this interop.
</p>

<p>
Have you too tried this "magic combo" of Docusaurus, Odoc, and OCaml tools?=
 And if so, how did you approach it? Do you have insights or suggestions? I=
f this sparks your curiosity, please don't hesitate to engage with the repo=
sitory.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-9" class=3D"outline-2">
<h2 id=3D"9">Mopsa 1.0 &#x2013; Modular Open Platform for Static Analysis</=
h2>
<div class=3D"outline-text-2" id=3D"text-9">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-mopsa-1-0-modular-open-=
platform-for-static-analysis/15013/1">https://discuss.ocaml.org/t/ann-mopsa=
-1-0-modular-open-platform-for-static-analysis/15013/1</a>
</p>
</div>

<div id=3D"outline-container-orge0d4db8" class=3D"outline-3">
<h3 id=3D"orge0d4db8">Rapha=C3=ABl Monat announced</h3>
<div class=3D"outline-text-3" id=3D"text-orge0d4db8">
<p>
On behalf of all its developers, I am glad to announce the release of <a hr=
ef=3D"https://gitlab.com/mopsa/mopsa-analyzer/">Mopsa 1.0</a>! You can just=
 <code>opam install mopsa</code>.
</p>

<p>
Mopsa stands for Modular and Open Platform for Static Analysis. It aims at =
easing the development and use of static analyzers. More specifically, Mops=
a is a generic framework for building sound static analyzer based on the th=
eory of abstract interpretation. Mopsa is independent of language and abstr=
action choices. Developers are free to add arbitrary abstractions (numeric,=
 pointer, memory, etc.) and syntax iterators for new languages. Mopsa encou=
rages the development of independent abstractions which can cooperate or be=
 combined to improve precision.
</p>

<p>
Mopsa currently support the analysis of Python, C and Python+C programs. It=
 reports run-time errors on C programs and uncaught exceptions on Python pr=
ograms. Our benchmarks provide an illustrative overview of what Mopsa can c=
urrently analyze. All analyses currently provided are flow and context-sens=
itive (i.e, control-flow operators are taken into account by the analysis, =
and functions are analyzed by virtual inlining). The C analysis is actively=
 developed and maintained. The Python and Python+C analyses work on real-wo=
rld examples, but are not actively developed.
</p>

<p>
Please note that Mopsa is an academic tool under development. Feel free to =
submit <a href=3D"https://gitlab.com/mopsa/mopsa-analyzer/-/issues/?sort=3D=
created_date&amp;state=3Dopened&amp;first_page_size=3D50">issues</a> if you=
 encounter any bug!
</p>

<p>
Additional resources:=20
</p>
<ul class=3D"org-ul">
<li><a href=3D"https://mopsa.gitlab.io/mopsa-analyzer/user-manual/">user ma=
nual</a></li>
<li><a href=3D"https://rmonat.fr/talk/240606_csv/#interactive-engine-demo">=
demo of our abstract debugger</a></li>
<li><a href=3D"https://hal.sorbonne-universite.fr/hal-02890500v1/document">=
academic overview of Mopsa</a>, and <a href=3D"https://rmonat.fr/data/pubs/=
2021/thesis_monat.pdf#page=3D61">in a PhD thesis</a></li>
<li><a href=3D"https://gitlab.com/mopsa/benchmarks/coreutils-benchmarks">co=
reutils benchmarks on which Mopsa can run</a></li>
</ul>
</div>
</div>
</div>




<div id=3D"outline-container-10" class=3D"outline-2">
<h2 id=3D"10">OCaml 5 performance</h2>
<div class=3D"outline-text-2" id=3D"text-10">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ocaml-5-performance/15014/1=
">https://discuss.ocaml.org/t/ocaml-5-performance/15014/1</a>
</p>
</div>

<div id=3D"outline-container-org9c682f0" class=3D"outline-3">
<h3 id=3D"org9c682f0">Thomas Leonard announced</h3>
<div class=3D"outline-text-3" id=3D"text-org9c682f0">
<p>
I've been trying out some tools to investigate performance problems in my O=
Caml programs and I've written up my experiences here in case other people =
find it useful:
</p>

<ul class=3D"org-ul">
<li><a href=3D"https://roscidus.com/blog/blog/2024/07/22/performance/">http=
s://roscidus.com/blog/blog/2024/07/22/performance/</a></li>
<li><a href=3D"https://roscidus.com/blog/blog/2024/07/22/performance-2/">ht=
tps://roscidus.com/blog/blog/2024/07/22/performance-2/</a></li>
</ul>

<p>
The first post examines a case of slow IO in a concurrent Eio program, and =
the second looks at poor GC performance in a multicore app.
</p>

<p>
In particular, it seems that minor GC performance is very sensitive to othe=
r work running on the machine, since any domain being late will trigger the=
 others to sleep, e.g.
</p>


<div id=3D"orga41496d" class=3D"figure">
<p><img src=3D"https://global.discourse-cdn.com/business7/uploads/ocaml/ori=
ginal/2X/e/e821895b934f9519f84d0e52f28057bb30274092.png" alt=3D"e821895b934=
f9519f84d0e52f28057bb30274092.png" />
</p>
</div>

<p>
I'd be interested to know if others can shed more light on this, or have ot=
her profiling tools they've found useful.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-11" class=3D"outline-2">
<h2 id=3D"11">Other OCaml News</h2>
<div class=3D"outline-text-2" id=3D"text-11">
</div>
<div id=3D"outline-container-org031213d" class=3D"outline-3">
<h3 id=3D"org031213d">From the ocaml.org blog</h3>
<div class=3D"outline-text-3" id=3D"text-org031213d">
<p>
Here are links from many OCaml blogs aggregated at <a href=3D"https://ocaml=
.org/blog/">the ocaml.org blog</a>.
</p>

<ul class=3D"org-ul">
<li><a href=3D"https://roscidus.com/blog/blog/2024/07/22/performance-2/">OC=
aml 5 performance part 2</a></li>
<li><a href=3D"https://roscidus.com/blog/blog/2024/07/22/performance/">OCam=
l 5 performance problems</a></li>
<li><a href=3D"https://tarides.com/blog/2024-07-17-ocaml-compiler-manual-ht=
ml-generation">OCaml Compiler Manual HTML Generation</a></li>
</ul>
</div>
</div>
</div>




<div id=3D"outline-container-org2a2c6c9" class=3D"outline-2">
<h2 id=3D"org2a2c6c9">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-org2a2c6c9">
<p>
If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@polytec=
hnique.org">send me a message</a> and I'll mail it to you, or go take a loo=
k at <a href=3D"https://alan.petitepomme.net/cwn/">the archive</a> or the <=
a href=3D"https://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archive=
s</a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe to the=
 <a href=3D"https://sympa.inria.fr/sympa/info/caml-list">caml-list</a>.
</p>

<div class=3D"authorname" id=3D"orgccc15c0">
<p>
<a href=3D"https://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--=-=-=--

