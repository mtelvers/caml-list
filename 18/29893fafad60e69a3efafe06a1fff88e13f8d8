Received: from Hermes.metastack.local (172.16.0.8) by Hermes.metastack.local
 (172.16.0.8) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.32 via Mailbox
 Transport; Tue, 17 Oct 2023 08:47:35 +0100
Received: from Hermes.metastack.local (172.16.0.8) by Hermes.metastack.local
 (172.16.0.8) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.32; Tue, 17 Oct
 2023 08:47:35 +0100
Received: from exchange.romulus.metastack.com (172.16.0.21) by
 Hermes.metastack.local (172.16.0.8) with Microsoft SMTP Server
 (version=TLS1_0, cipher=TLS_RSA_WITH_AES_256_CBC_SHA) id 15.1.2507.32 via
 Frontend Transport; Tue, 17 Oct 2023 08:47:35 +0100
Received: from romulus.metastack.com ([172.16.0.20])
	by exchange.romulus.metastack.com (8.14.2/8.14.2) with ESMTP id 39H7lOsq008085
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <dra@metastack.local>; Tue, 17 Oct 2023 08:47:24 +0100
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by romulus.metastack.com (8.14.2/8.14.2) with ESMTP id 39H7lDRm008069
	for <dra-news@metastack.com>; Tue, 17 Oct 2023 08:47:14 +0100
Received: from prod-listesu18.inria.fr (HELO sympa.inria.fr) ([128.93.162.160])
  by mail2-relais-roc.national.inria.fr with ESMTP; 17 Oct 2023 09:47:12 +0200
Received: by sympa.inria.fr (Postfix, from userid 20132)
	id DC5ACE0CD7; Tue, 17 Oct 2023 09:47:11 +0200 (CEST)
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 6D8E8E00B7
	for <caml-list@sympa.inria.fr>; Tue, 17 Oct 2023 09:47:09 +0200 (CEST)
Received: from mx1.polytechnique.org ([129.104.30.34])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 17 Oct 2023 09:47:08 +0200
Received: from mac-03220211.irisa.fr (mac-03220211.irisa.fr [131.254.21.249])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ssl.polytechnique.org (Postfix) with ESMTPSA id 8FD7B561298;
	Tue, 17 Oct 2023 09:46:58 +0200 (CEST)
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: lwn <lwn@lwn.net>, "caml-list@inria.fr" <caml-list@inria.fr>
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News
Thread-Topic: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News
Thread-Index: AQHaAM4xBMAqBcZ6LUi2W//XQ6Lunw==
Sender: "caml-list-request@inria.fr" <caml-list-request@inria.fr>
X-MS-Exchange-MessageSentRepresentingType: 2
Date: Tue, 17 Oct 2023 08:46:58 +0100
Message-ID: <m2zg0heln1.fsf@mac-03220211.irisa.fr>
Keywords: Sent to dra-news@metastack.com,Marked bulk,MetaStack -
 Lists,MetaStack
List-Help: <mailto:sympa_inria@inria.fr?subject=help>
List-Subscribe: <mailto:sympa_inria@inria.fr?subject=subscribe%20caml-list>
List-Unsubscribe:
	<mailto:sympa_inria@inria.fr?subject=unsubscribe%20caml-list>
Reply-To: Alan Schmitt <alan.schmitt@polytechnique.org>
Content-Language: en-GB
X-MS-Exchange-Organization-AuthAs: Anonymous
X-MS-Exchange-Organization-AuthSource: Hermes.metastack.local
X-MS-Has-Attach:
X-Auto-Response-Suppress: All
X-MS-Exchange-Organization-Network-Message-Id:
	fc4f7d52-7648-496d-954f-08dbcee553f4
X-MS-TNEF-Correlator:
X-MS-Exchange-Organization-RecordReviewCfmType: 0
x-scanned-by: MIMEDefang 2.65 on 62.31.23.242
received-spf: None (mail2-relais-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@sympa.inria.fr) identity=helo;  client-ip=128.93.162.160;
  receiver=mail2-relais-roc.national.inria.fr;
  envelope-from="caml-list-owner@inria.fr";
  x-sender="postmaster@sympa.inria.fr"; x-conformance=spf_only
x-ironport-av: E=Sophos;i="6.03,231,1694728800";
    d="scan'208,217";a="131601438"
x-spam-flag: No, tests=bogofilter, spamicity=0.375818, queueID=0389056129D
x-ironport-anti-spam-filtered: true
x-loop: caml-list@inria.fr
x-no-archive: yes
Content-Type: text/html; charset="Windows-1252"
Content-Transfer-Encoding: quoted-printable
MIME-Version: 1.0

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2023-10-17 Tue 09:46 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html; charset=3DWindows-1=
252">
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
>
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org Mode">
<style>
  #content { max-width: 60em; margin: auto; }
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; =
}
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #e6e6e6;
    border-radius: 3px;
    background-color: #f2f2f2;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
  }
  pre.src:before {
    display: none;
    position: absolute;
    top: -8px;
    right: 12px;
    padding: 3px;
    color: #555;
    background-color: #f2f2f299;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-authinfo::before { content: 'Authinfo'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { }
</style><style type=3D"text/css">#table-of-contents h2 { display: none } .t=
itle { display: none } .authorname { text-align: right }</style><style type=
=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
</head>
<body>
<div id=3D"content" class=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p><a href=3D"https://alan.petitepomme.net/cwn/2023.10.10.html">Previous We=
ek</a> <a href=3D"https://alan.petitepomme.net/cwn/index.html">
Up</a> <a href=3D"https://alan.petitepomme.net/cwn/2023.10.24.html">Next We=
ek</a> </p>
<p>Hello </p>
<p>Here is the latest OCaml Weekly News, for the week of October 10 to 17, =
2023. </p>
<div id=3D"table-of-contents" role=3D"doc-toc">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents" role=3D"doc-toc">
<ul>
<li><a href=3D"#1">Hiring Functional Software Engineers (OCaml or Haskell) =
in Paris, France!</a>
</li><li><a href=3D"#2">OCaml Hacking Day at Tarides Chennai</a> </li><li><=
a href=3D"#3">qcheck-lin and qcheck-stm 0.2</a> </li><li><a href=3D"#4">dun=
e 3.11.0</a> </li><li><a href=3D"#5">runtime_events_tools 0.5.0</a> </li><l=
i><a href=3D"#6">Gospel 0.2.0</a> </li><li><a href=3D"#7">Talk about declar=
ative rhythm-machines with <code>Fry</code> and FRP @ Copenhagen</a>
</li><li><a href=3D"#8">Deprecating ocaml-migrate-parsetree in favor of Ppx=
lib, also as a Platform tool</a>
</li><li><a href=3D"#orgb5d8970">Old CWN</a> </li></ul>
</div>
</div>
<div id=3D"outline-container-1" class=3D"outline-2">
<h2 id=3D"1">Hiring Functional Software Engineers (OCaml or Haskell) in Par=
is, France!</h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>Archive: <a href=3D"https://discuss.ocaml.org/t/hiring-functional-softwa=
re-engineers-ocaml-or-haskell-in-paris-france/13221/1">
https://discuss.ocaml.org/t/hiring-functional-software-engineers-ocaml-or-h=
askell-in-paris-france/13221/1</a>
</p>
</div>
<div id=3D"outline-container-orgb5354ea" class=3D"outline-3">
<h3 id=3D"orgb5354ea">Christian announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgb5354ea">
<p>Hey team! Tweag is hiring a Functional Software engineer with Experience=
 in OCaml or Haskell, if you=92re fluent in ant of these languages please f=
eel free to apply. This is an onsite position at our client offices located=
 in Paris, France. (Hybrid model can
 be discussed in the interview process) </p>
<p>If you want to lear more and how to apply please follow this link where =
you=92ll see all the information:
<a href=3D"https://grnh.se/51d5e65b3us">https://grnh.se/51d5e65b3us</a> </p=
>
<p>Any questions let me know! </p>
</div>
</div>
</div>
<div id=3D"outline-container-2" class=3D"outline-2">
<h2 id=3D"2">OCaml Hacking Day at Tarides Chennai</h2>
<div class=3D"outline-text-2" id=3D"text-2">
<p>Archive: <a href=3D"https://discuss.ocaml.org/t/ocaml-hacking-day-at-tar=
ides-chennai/13223/1">
https://discuss.ocaml.org/t/ocaml-hacking-day-at-tarides-chennai/13223/1</a=
> </p>
</div>
<div id=3D"outline-container-orgfb5fc50" class=3D"outline-3">
<h3 id=3D"orgfb5fc50">Sudha Parimala announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgfb5fc50">
<p>We=92re running an OCaml Hacking event at the Tarides office in Chennai =
on the 21st of October.
</p>
<p>We=92re excited to hack on a diverse range of OCaml projects, including =
the compiler, concurrency libraries, and tooling, as well as benchmarking p=
rojects. Folks from Tarides will be around to assist with questions and sup=
port participants.
</p>
<p>This is an in-person event in Chennai. For more details and registration=
, please visit
<a href=3D"https://forms.gle/9vNd4UyJejqJR5sMA">https://forms.gle/9vNd4UyJe=
jqJR5sMA</a>. Looking forward to seeing some of you there!
</p>
<div id=3D"org244bfac" class=3D"figure">
<p><img src=3D"https://global.discourse-cdn.com/business7/uploads/ocaml/opt=
imized/2X/b/b2e00cb714801a53d2cb470ad139dac359e2fbaf_2_706x1000.jpeg" alt=
=3D"b2e00cb714801a53d2cb470ad139dac359e2fbaf_2_706x1000.jpeg">
</p>
</div>
</div>
</div>
</div>
<div id=3D"outline-container-3" class=3D"outline-2">
<h2 id=3D"3">qcheck-lin and qcheck-stm 0.2</h2>
<div class=3D"outline-text-2" id=3D"text-3">
<p>Archive: <a href=3D"https://discuss.ocaml.org/t/ann-qcheck-lin-and-qchec=
k-stm-0-2/12301/2">
https://discuss.ocaml.org/t/ann-qcheck-lin-and-qcheck-stm-0-2/12301/2</a> <=
/p>
</div>
<div id=3D"outline-container-orgfc73051" class=3D"outline-3">
<h3 id=3D"orgfc73051">Jan Midtgaard announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgfc73051">
<p>FYI, we just rolled out a 0.3 release of <code>qcheck-lin</code>, <code>=
qcheck-stm</code>, and
<code>qcheck-multicoretests-util</code>: <a href=3D"https://github.com/ocam=
l-multicore/multicoretests/releases/tag/0.3">
https://github.com/ocaml-multicore/multicoretests/releases/tag/0.3</a> The =
release should be available in an opam repo near you shortly=85 :wink:
</p>
<p>The 0.3 release brings 3 =93usability improvements=94 to <code>STM</code=
> and <code>
Util</code> and a <code>Lin</code> search improvement that should reduce me=
mory allocation.
</p>
<ul class=3D"org-ul">
<li>#400: Catch and delay exceptions in <code>STM</code>=92s <code>next_sta=
te</code> for a nicer UX
</li><li>#387: Reduce needless allocations in <code>Lin</code>=92s sequenti=
al consistency search, as part of an
<code>Out_channel</code> test cleanup </li><li>#379: Extend the set of <cod=
e>Util.Pp</code> pretty-printers and teach them to add break hints similar =
to
<code>ppx_deriving.show</code>; teach <code>to_show</code> to generate trun=
cated strings when
<code>$MCTUTILS_TRUNCATE</code> environment variable is set </li><li>#368: =
Switch <code>STM_domain.agree_prop_par_asym</code> from using <code>Semapho=
re.Binary</code> to using an
<code>int Atomic.t</code> which improves the error rate across platforms an=
d backends
</li></ul>
<p>Happy testing! :smiley: </p>
</div>
</div>
</div>
<div id=3D"outline-container-4" class=3D"outline-2">
<h2 id=3D"4">dune 3.11.0</h2>
<div class=3D"outline-text-2" id=3D"text-4">
<p>Archive: <a href=3D"https://discuss.ocaml.org/t/ann-dune-3-11-0/13173/2"=
>https://discuss.ocaml.org/t/ann-dune-3-11-0/13173/2</a>
</p>
</div>
<div id=3D"outline-container-orgf760c09" class=3D"outline-3">
<h3 id=3D"orgf760c09">Etienne Millon announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgf760c09">
<p>We just released dune 3.11.1 with the following fixes: </p>
</div>
<div id=3D"outline-container-org1088ed0" class=3D"outline-4">
<h4 id=3D"org1088ed0">Fixed</h4>
<div class=3D"outline-text-4" id=3D"text-org1088ed0">
<ul class=3D"org-ul">
<li>Fix <code>dune rpc</code> commands on Windows (#8806, fixes #8799, @noj=
b) </li><li>Fix <code>inline_tests</code> when the partition list is empty =
(#8849, fixes #8848, @hhugo)
</li></ul>
</div>
</div>
</div>
</div>
<div id=3D"outline-container-5" class=3D"outline-2">
<h2 id=3D"5">runtime_events_tools 0.5.0</h2>
<div class=3D"outline-text-2" id=3D"text-5">
<p>Archive: <a href=3D"https://discuss.ocaml.org/t/ann-runtime-events-tools=
-0-5-0/13235/1">
https://discuss.ocaml.org/t/ann-runtime-events-tools-0-5-0/13235/1</a> </p>
</div>
<div id=3D"outline-container-orgec760a8" class=3D"outline-3">
<h3 id=3D"orgec760a8">Sudha Parimala announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgec760a8">
<p>I=92m happy to announce the release of <a href=3D"https://opam.ocaml.org=
/packages/runtime_events_tools/runtime_events_tools.0.5.0/">
runtime_events_tools.0.5.0</a>. </p>
<p>OCaml 5.0 introduced a new <a href=3D"https://github.com/ocaml/ocaml/pul=
l/10964">
ring-buffer based tracing system</a> with low overheads. This eliminated th=
e need for a separate tracing runtime and added the ability to keeping trac=
ing on by default. The OCaml runtime uses this tracing system to track GC e=
vents. OCaml 5.1 went further to
 include <a href=3D"https://github.com/ocaml/ocaml/pull/11474">support for =
custom events</a>.
</p>
<p>Runtime events tools through <code>olly</code>, provides functionality t=
o grok the data provided by the runtime tracing system.
</p>
<p>Olly has two modes; <code>trace</code> , and <code>gc-stats</code> </p>
<p><b>olly trace</b> </p>
<pre class=3D"example" id=3D"org3f6a3ea">
$ olly trace example.trace example.exe
</pre>
<p>Records runtime traces in fuchsia and json formats. The trace files can =
be visualised with
<a href=3D"https://ui.perfetto.dev/">ui.perfetto.</a> or <code>json</code> =
trace with [chrome://tracing](chrome://tracing).
</p>
<p>Here=92s a sample trace rendered in perfetto. </p>
<div id=3D"org1c625a4" class=3D"figure">
<p><img src=3D"https://global.discourse-cdn.com/business7/uploads/ocaml/opt=
imized/2X/f/f4da569dee12c0a8ea61ef2b4f1b25af2c775d65_2_1378x678.png" alt=3D=
"f4da569dee12c0a8ea61ef2b4f1b25af2c775d65_2_1378x678.png">
</p>
</div>
<p><b>olly gc-stats</b> </p>
<p>Provides information about GC time and latencies. </p>
<pre class=3D"example" id=3D"orgb8e3167">
$ olly gc-stats &quot;binarytrees5_multicore.exe 2 20&quot;

Execution times:
Wall time (s):	2.61
CPU time (s):	4.63
GC time (s):	2.93
GC overhead (% of CPU time):	63.18%

GC time per domain (s):
Domain0: 	1.59
Domain1: 	1.34

GC latency profile:
#[Mean (ms):	0.76,	 Stddev (ms):	1.56]
#[Min (ms):	0.00,	 max (ms):	15.68]

Percentile 	 Latency (ms)
25.0000 	 0.00
50.0000 	 0.01
60.0000 	 0.04
70.0000 	 0.28
75.0000 	 0.66
80.0000 	 1.40
85.0000 	 2.44
90.0000 	 3.16
95.0000 	 3.62
96.0000 	 3.79
97.0000 	 4.06
98.0000 	 4.73
99.0000 	 6.29
99.9000 	 13.59
99.9900 	 15.68
99.9990 	 15.68
99.9999 	 15.68
100.0000 	 15.68
</pre>
<p>New features in this release: </p>
<ul class=3D"org-ul">
<li><i>Support for fuchsia format</i>: Stores the trace in binary format, m=
aking the trace files 4x smaller in size, on an average.
</li><li><i>gc-stats mode</i>: In addition to latency percentiles, GC stats=
 provide more insights, such as GC time and GC time spent per domain.
</li><li>
<p><i>Custom events support</i>: Not only can you trace GC events, but now =
you can also trace your own events
<img src=3D"https://global.discourse-cdn.com/business7/uploads/ocaml/optimi=
zed/2X/a/a32a3bd2f83a24ce0f1580f749970437b384d8d8_2_1380x182.png" alt=3D"a3=
2a3bd2f83a24ce0f1580f749970437b384d8d8_2_1380x182.png">
</p>
<p><i>Trace for a recursive fibonacci function</i> </p>
</li></ul>
<p>Note that if you see non-terminating events in your traces, you might wa=
nt to include this compiler patch =96
<a href=3D"https://github.com/ocaml/ocaml/pull/12583">https://github.com/oc=
aml/ocaml/pull/12583</a>.
</p>
</div>
</div>
</div>
<div id=3D"outline-container-6" class=3D"outline-2">
<h2 id=3D"6">Gospel 0.2.0</h2>
<div class=3D"outline-text-2" id=3D"text-6">
<p>Archive: <a href=3D"https://discuss.ocaml.org/t/ann-gospel-0-2-0/13236/1=
">https://discuss.ocaml.org/t/ann-gospel-0-2-0/13236/1</a>
</p>
</div>
<div id=3D"outline-container-org31ed0a8" class=3D"outline-3">
<h3 id=3D"org31ed0a8">Nicolas Osborne announced</h3>
<div class=3D"outline-text-3" id=3D"text-org31ed0a8">
<p>We are very happy to announce the release 0.2.0 of <code>gospel</code>! =
</p>
<p>Gospel is a tool-agnostic behavioural specification language for OCaml. =
It allows you to write strongly typed contract-based specifications for you=
r OCaml libraries (for a reasonable subset of OCaml). Gospel=92s syntax has=
 been designed to be easy to learn
 for an OCaml programmer. You can access the documentation <a href=3D"https=
://ocaml-gospel.github.io/gospel/">
here</a>. </p>
<p>This release adds two main features, a <code>gospel dumpast</code> comma=
nd and a
<code>gospel.ppx</code> ppx rewriter to display Gospel specification as doc=
umentation with
<code>odoc</code>. </p>
<p>Some minor extensions have been added to the language itself: </p>
<ul class=3D"org-ul">
<li>a <code>with</code> construct to name a variable in type invariants ref=
erring to a value of the specified type,
</li><li><code>int</code> literals, </li><li>anonymous functions now suppor=
t both patterns in arguments and return type annotations,
</li><li>unit result in function headers, </li><li>constants can now be ref=
erenced in specifications, </li><li>infix operators are now accepted in spe=
cification headers. </li></ul>
<p>Parser, preprocessor, and error messages have been improved. In particul=
ar the preprocessor can now handle large files and locations are properly t=
racked. Pattern matches are now also checked for exhaustiveness and redunda=
ncy.
</p>
<p>We have made a number of improvements and bugfixes in the type checker a=
s well as some minor modifications in the Gospel standard library. Finally,=
 the documentation has been revised.
</p>
</div>
</div>
</div>
<div id=3D"outline-container-7" class=3D"outline-2">
<h2 id=3D"7">Talk about declarative rhythm-machines with <code>Fry</code> a=
nd FRP @ Copenhagen</h2>
<div class=3D"outline-text-2" id=3D"text-7">
<p>Archive: <a href=3D"https://discuss.ocaml.org/t/talk-about-declarative-r=
hythm-machines-with-fry-and-frp-copenhagen/13238/1">
https://discuss.ocaml.org/t/talk-about-declarative-rhythm-machines-with-fry=
-and-frp-copenhagen/13238/1</a>
</p>
</div>
<div id=3D"outline-container-org1041c40" class=3D"outline-3">
<h3 id=3D"org1041c40">rand announced</h3>
<div class=3D"outline-text-3" id=3D"text-org1041c40">
<p>I=92m happy to announce that I=92m doing a talk on <a href=3D"https://gi=
thub.com/rand00/fry">
<code>Fry</code></a> at <a href=3D"https://www.meetup.com/moedegruppefunkti=
onellekoebenhavnere/events/296380134">
meetup for functional copenhageners</a> @ 24. october. <code>Fry</code> is =
a small library that enables declarative definitions of rhythm-machines etc=
. together with FRP (<code>React</code>). These can be interactive, generat=
ive, experimental - what ever you
 fancy. Recently I=92ve used it for a polyrhythmic machine (<code>pmmd</cod=
e>) based on bpm-modulation, that I=92m planning on releasing as modular sy=
nthesizer hardware.
</p>
<p>A couple of concepts from <code>Fry</code> that are interesting, which y=
ou can see from its
<a href=3D"https://github.com/rand00/fry/tree/main/examples">examples</a>: =
</p>
<ul class=3D"org-ul">
<li><a href=3D"https://github.com/rand00/fry/blob/main/examples/envelope_co=
mpositions/main.ml">a DSL for creation/composition of envelopes</a>
</li><li><a href=3D"https://github.com/rand00/fry/blob/main/examples/beat_m=
odulated/main.ml">bpm-modulation of beats</a>
</li><li><a href=3D"https://github.com/rand00/fry/blob/main/examples/advanc=
ed_rhythm_with_notty-output_001/main.ml">FRP is excellent at programming wi=
th time</a>
</li></ul>
<p>Also, OCaml with first class modules &#43; module functors &#43; FRP, ma=
p elegantly to the semantics of
<a href=3D"https://en.wikipedia.org/wiki/Modular_synthesizer">modular synth=
esizers</a>. Simply:
</p>
<ul class=3D"org-ul">
<li>a <code>unit event</code> maps to a <a href=3D"https://en.wikipedia.org=
/wiki/CV/gate">
control-voltage</a> (CV) trigger </li><li>a <code>float signal</code> maps =
to CV </li><li>a module functor maps to a modular synth module taking CV-in=
, exposing CV-out
</li></ul>
<p>If you are near Copenhagen - hope to see you (: </p>
</div>
</div>
</div>
<div id=3D"outline-container-8" class=3D"outline-2">
<h2 id=3D"8">Deprecating ocaml-migrate-parsetree in favor of Ppxlib, also a=
s a Platform tool</h2>
<div class=3D"outline-text-2" id=3D"text-8">
<p>Archive: <a href=3D"https://discuss.ocaml.org/t/rfc-deprecating-ocaml-mi=
grate-parsetree-in-favor-of-ppxlib-also-as-a-platform-tool/13240/1">
https://discuss.ocaml.org/t/rfc-deprecating-ocaml-migrate-parsetree-in-favo=
r-of-ppxlib-also-as-a-platform-tool/13240/1</a>
</p>
</div>
<div id=3D"outline-container-orge2cd7a5" class=3D"outline-3">
<h3 id=3D"orge2cd7a5">Sonja Heinze announced</h3>
<div class=3D"outline-text-3" id=3D"text-orge2cd7a5">
<p>Hello everyone :wave: </p>
<p>We=92re planning to deprecate <a href=3D"https://github.com/ocaml-ppx/oc=
aml-migrate-parsetree">
ocaml-migrate-parsetree</a> (OMP) finally. OMP forms part of the <a href=3D=
"https://ocaml.org/docs/platform">
OCaml Platform</a>, so we can=92t and wouldn=92t just do that without the a=
pproval of the community. So first a bit of context:
</p>
</div>
<div id=3D"outline-container-org2340cb5" class=3D"outline-4">
<h4 id=3D"org2340cb5">What is OMP anyways?</h4>
<div class=3D"outline-text-4" id=3D"text-org2340cb5">
<p>OMP used to be an extremely important project in the meta-programming-re=
lated chunk of OCaml=92s ecosystem. Since the introduction of
<a href=3D"https://v2.ocaml.org/manual/extensionnodes.html">extension nodes=
</a> and
<a href=3D"https://v2.ocaml.org/manual/attributes.html#start-section">attri=
butes</a> in OCaml 4.2 in 2014, meta-programming in OCaml is most commonly =
done on OCaml=92s parsetree. The caveat: The parsetree is extended and modi=
fied between OCaml minor versions, meaning
 that handling the OCaml parsetree directly is unstable. OMP came to the re=
scue by introducing a concept we call
<span class=3D"underline">versioned parsetrees</span> (or versioned ASTs) t=
ogether with migrations between those fixed versions of the parsetree, allo=
wing the workflow
</p>
<div id=3D"orgabc226f" class=3D"figure">
<p><img src=3D"https://hackmd.io/_uploads/H13pahLWp.png" alt=3D"H13pahLWp.p=
ng"> </p>
</div>
<p>That workflow allows one PPX to guarantee compatibility with multiple co=
mpiler versions (here, PPX =3D PreProcessor eXtension stands for the meta-p=
rogramming instance). That was extremely important at the time to introduce=
 a more version-flexible ecosystem
 and to reduce the maintenance burden of PPXs! </p>
<p>OMP also provided the concept of a <span class=3D"underline">driver</spa=
n>, which is one single binary driving the applicatoin of all PPXs. Without=
 that, using n PPXs would mean copying the workflow pictured above n times.=
 That=92s an incredible performance
 overhead. The OMP driver took care of applying all PPXs, so fewer parsetre=
e migrations and less communication between different processes were necess=
ary (before: one process per PPX).
</p>
</div>
</div>
<div id=3D"outline-container-org460a317" class=3D"outline-4">
<h4 id=3D"org460a317">Why was OMP not enough?</h4>
<div class=3D"outline-text-4" id=3D"text-org460a317">
<p>However, the OMP driver was still duplicating parsetree migrations, and =
it did one whole parsetree pass per PPX. And because of the latter, the out=
come of the preprocessor phase used to depend on the order of PPXs, which d=
idn=92t follow any semantically relevant
 or otherwise reasoned pattern. The reason why it would have been extremely=
 complicated to improve the OMP driver further was that each PPX chose its =
own versioned parsetree version. There was no agreement between different P=
PXs.
</p>
</div>
<ul class=3D"org-ul">
<li><a id=3D"orgfbfafe4"></a>Ppxlib<br>
<div class=3D"outline-text-5" id=3D"text-orgfbfafe4">
<p>So the solution was to have the PPXs agree on one versioned parsetree ve=
rsion. That=92s what
<a href=3D"https://github.com/ocaml-ppx/ppxlib">Ppxlib</a> does. It also do=
es a lot more by providing an extensive API to write PPXs easily and others=
, but the main point here is that it consolidates a consistent PPX ecosyste=
m wrt parsetree versions. The way
 it does so is by exposing one fixed versioned parsetree version that all P=
PXs are defined against.
</p>
<p>Thanks to that, the Ppxlib driver can get rid of unnecessary parsetree m=
igrations, and it can merge a whole bunch of PPXs into one AST pass, improv=
ing performance and guaranteeing a clear order of PPX transformations. Also=
 important: Having all PPXs on the
 same versioned parsetree version, makes it easy to have them all on the on=
e of the latest OCaml version. For details I=92m not going into, that=92s t=
he only (reasonable) way to have the PPXs support the latest compiler synta=
x features, so that=92s a huge advantage
 of Ppxlib as well. </p>
<p>Ppxlib still isn=92t perfect and comes with its own little set of proble=
ms, but it does solve the mentioned big problems of performance overhead, u=
nclear composition semantics, parsetree-version-fragmentation among differe=
nt PPXs, and lack of latest compiler
 syntax support. So by now, the whole OCaml opam ecosystem has shifted from=
 OMP to Ppxlib (more below).
</p>
<p>The latest update on the state of Ppxlib, also including info about OMP =
and the ecosystem=92s transition from one to the other
<a href=3D"https://discuss.ocaml.org/t/an-update-on-the-state-of-the-ppx-ec=
osystem-and-ppxlib-s-transition/8200">
is this one from 2021</a>. All Ppxlib maintainers have very very little tim=
e for communication and similar. If a new update would be strongly apprecia=
ted, let us know. For here, let=92s focus on OMP:
</p>
</div>
</li></ul>
</div>
<div id=3D"outline-container-org04d8af3" class=3D"outline-4">
<h4 id=3D"org04d8af3">What does it mean to deprecate OMP?</h4>
<div class=3D"outline-text-4" id=3D"text-org04d8af3">
<p>Given that by now, OMP=92s maintenance is held at the bare bare minimum =
anyways, deprecating it would only have one clear impact:
</p>
</div>
<ul class=3D"org-ul">
<li><a id=3D"orgfcab56a"></a>Real-life<br>
<div class=3D"outline-text-5" id=3D"text-orgfcab56a">
<p>We=92d stop adding new compiler support, so the last supported compiler =
would be OCaml 5.0. Concretely: We won=92t add the new versioned parsetrees=
 and migrations for the new compilers anymore.
</p>
</div>
</li><li><a id=3D"orge5da99d"></a>Formalities<br>
<div class=3D"outline-text-5" id=3D"text-orge5da99d">
<p>We=92d also mark the OMP opam packages as deprecated, and we=92d move OM=
P to the Deprecate section in the
<a href=3D"https://ocaml.org/docs/platform">set of OCaml Platform tools</a>=
 (now it=92s in the Sustained section).
</p>
</div>
</li></ul>
</div>
<div id=3D"outline-container-org1aee6bf" class=3D"outline-4">
<h4 id=3D"org1aee6bf">Is it ok to deprecate OMP?</h4>
<div class=3D"outline-text-4" id=3D"text-org1aee6bf">
<p>You tell us :) Here=92s some info: </p>
</div>
<ul class=3D"org-ul">
<li><a id=3D"org129138b"></a>Opam packages<br>
<div class=3D"outline-text-5" id=3D"text-org129138b">
<p>All packages on opam have moved to Ppxlib now. There=92s only <a href=3D=
"https://ocaml.org/p/ocaml-migrate-parsetree/latest#used-by">
a hand-full of packages that formally still depend on OMP</a>, but all of t=
hat seems to be formal left-overs in the opam files, a left-over test depen=
dency or similar. I=92ve opened issues on those packages, mentioning the po=
tential upcoming deprecation of OMP,
 and nobody has complained. </p>
</div>
</li><li><a id=3D"org8849f3d"></a>Distribution packages<br>
<div class=3D"outline-text-5" id=3D"text-org8849f3d">
<p>There are still a few distributions that keep on packaging OMP on their =
distribution, e.g. there=92s
<a href=3D"https://tracker.debian.org/pkg/ocaml-migrate-parsetree">OMP on D=
ebian</a>,
<a href=3D"https://packages.fedoraproject.org/pkgs/ocaml-migrate-parsetree/=
ocaml-migrate-parsetree/">
OMP on Fedora</a> and <a href=3D"https://aur.archlinux.org/packages/ocaml-m=
igrate-parsetree">
OMP on Arch</a>. However, the reason for that seems merely historical (with=
 unquestioned inertia): There are no reverse dependencies on Debian or Fedo=
ra. On Arch, there are a few reverse dependencies, none of them still being=
 relevant in the present. I=92ll reach
 out to the three respective package managers. If anyone has any info or re=
levant context about this, please share it!
</p>
</div>
</li><li><a id=3D"orge698dc2"></a>Users/community<br>
<div class=3D"outline-text-5" id=3D"text-orge698dc2">
<p>And this is where we=92re asking for feedback. Does it sound good to eve=
ryone to deprecate OMP? We do have the strong impression that pretty much e=
veryone has moved to Ppxlib, but if you think we=92re missing something imp=
ortant, please let us know (or, just
 use this opportunity to say something nice about OMP :slight_smile: ). </p=
>
</div>
</li><li><a id=3D"org6c200e1"></a>Original author and current maintainer<br=
>
<div class=3D"outline-text-5" id=3D"text-org6c200e1">
<p>Obviously, the current maintainer/=93sustainer=94 (me) thinks it=92s goo=
d to deprecate OMP finally. And the original author, @let-def, is behind it=
 as well.
</p>
<p>Btw, @let-def, thanks a lot for this crucial piece of OCaml software! It=
 contains a lot of really good ideas, concepts, and implementation details!=
 Even once deprecated, it will persist - partly quite literally inside Ppxl=
ib in the form of the versioned
 parsetrees, the migrations, and parts of the driver. </p>
</div>
</li></ul>
</div>
</div>
</div>
<div id=3D"outline-container-orgb5d8970" class=3D"outline-2">
<h2 id=3D"orgb5d8970">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-orgb5d8970">
<p>If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@poly=
technique.org">
send me a message</a> and I=92ll mail it to you, or go take a look at <a hr=
ef=3D"https://alan.petitepomme.net/cwn/">
the archive</a> or the <a href=3D"https://alan.petitepomme.net/cwn/cwn.rss"=
>RSS feed of the archives</a>.
</p>
<p>If you also wish to receive it every week by mail, you may subscribe to =
the <a href=3D"https://sympa.inria.fr/sympa/info/caml-list">
caml-list</a>. </p>
<div class=3D"authorname" id=3D"orgb4d25c1">
<p><a href=3D"https://alan.petitepomme.net/">Alan Schmitt</a> </p>
</div>
</div>
</div>
</div>
</body>
</html>
