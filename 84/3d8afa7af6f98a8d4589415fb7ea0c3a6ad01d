Return-Path: <caml-list-owner@inria.fr>
Authentication-Results: plum.tunbury.org;
	dkim=pass (1024-bit key; unprotected) header.d=inria.fr header.i=@inria.fr header.a=rsa-sha256 header.s=dc header.b=k5jOqmLP;
	dkim=fail reason="signature verification failed" (1024-bit key; secure) header.d=polytechnique.org header.i=@polytechnique.org header.a=rsa-sha256 header.s=svoboda header.b=srJLnJHe;
	dkim-atps=neutral
Received-SPF: Pass (mailfrom) identity=mailfrom; client-ip=192.134.164.83; helo=mail2-relais-roc.national.inria.fr; envelope-from=caml-list-owner@inria.fr; receiver=tunbury.org 
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by plum.tunbury.org (Postfix) with ESMTPS id C26E248E48
	for <caml-list@tunbury.org>; Tue, 24 Dec 2024 08:55:25 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
  d=inria.fr; s=dc;
  h=from:to:date:message-id:mime-version:subject:reply-to:
   sender:list-id:list-help:list-subscribe:list-unsubscribe:
   list-post:list-owner:list-archive;
  bh=Y4U18lVXT8ITSfmAihMOszdfXQETL+XD7UWRZHBbOc4=;
  b=k5jOqmLPfX7qYUauvqSqFgCC0Drl2iztQj/ME7iq181doKFoQ8P6/SiZ
   GPBAQ8208YTukN2ctS8O6s1Ce01NlE87qV8ybdZBgU9L8t33DHqRVHfaW
   z1+yma88xHaPvNAW4uxvMzGR8OxRuNMfz3gQsvIkGPTzLBmzGCtnOjYre
   o=;
Received-SPF: Pass (mail2-relais-roc.national.inria.fr: domain of
  caml-list-owner@inria.fr designates 128.93.162.160 as
  permitted sender) identity=mailfrom;
  client-ip=128.93.162.160;
  receiver=mail2-relais-roc.national.inria.fr;
  envelope-from="caml-list-owner@inria.fr";
  x-sender="caml-list-owner@inria.fr"; x-conformance=spf_only;
  x-record-type="v=spf1"; x-record-text="v=spf1
  include:mailout.safebrands.com a:basic-mail.safebrands.com
  a:basic-mail01.safebrands.com a:basic-mail02.safebrands.com
  ip4:128.93.142.0/24 ip4:192.134.164.0/24 ip4:128.93.162.160
  ip4:128.93.162.3 ip4:128.93.162.88 ip4:89.107.174.7 mx ~all"
Received-SPF: None (mail2-relais-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@sympa.inria.fr) identity=helo;
  client-ip=128.93.162.160;
  receiver=mail2-relais-roc.national.inria.fr;
  envelope-from="caml-list-owner@inria.fr";
  x-sender="postmaster@sympa.inria.fr"; x-conformance=spf_only
Authentication-Results: mail2-relais-roc.national.inria.fr; spf=Pass smtp.mailfrom=caml-list-owner@inria.fr; spf=None smtp.helo=postmaster@sympa.inria.fr; dkim=hardfail (body hash did not verify [final]) header.i=@polytechnique.org
X-IronPort-AV: E=Sophos;i="6.12,259,1728943200"; 
   d="scan'208,217";a="200638738"
Received: from prod-listesu18.inria.fr (HELO sympa.inria.fr) ([128.93.162.160])
  by mail2-relais-roc.national.inria.fr with ESMTP; 24 Dec 2024 09:55:25 +0100
Received: by sympa.inria.fr (Postfix, from userid 20132)
	id B6477E0077; Tue, 24 Dec 2024 09:55:24 +0100 (CET)
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 04E74E0077
	for <caml-list@sympa.inria.fr>; Tue, 24 Dec 2024 09:55:18 +0100 (CET)
IronPort-SDR: 676a76f4_zWt6p+gkAaRZDbmSwgIwcA6N3pWEr7j7aT0pr4Yvo3lU/vp
 hrldyJbJO7Hu/lvuD9qhHsXtzgyx9cmDB5UVjYA==
X-IPAS-Result: =?us-ascii?q?A0H0BwBedWpngSIeaIFCGBaCRgKBP1soGQFdBlozBwhIh?=
 =?us-ascii?q?FaDT44fgRaBKgGPDIp4gnsDGDkRAwEDAQ0uAQwGAQIEAQEDAQIBhQACim4CH?=
 =?us-ascii?q?wYBBDMGDgECBAEBAQEDAgMBAQEBAQEQAQEFAQEBAgEBAgQGAQIQAQE9BUmFe?=
 =?us-ascii?q?w1JAQEECwGBai0kcWEEAwYGAQEBAQEBAQEBJwEBAQEBAQEBAQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQECDAGBHgEIBAYTAQE4GCMDBwkEA?=
 =?us-ascii?q?QYDAhEBNRcBEhQGgg9Zgh9FAwQBDAaTGJp4BAFOen8zgQGCDAEBBoEIPgIBC?=
 =?us-ascii?q?wICAwEOCSUB1zeCT4EaSglBgQeFa4JJGgEFJUhqAoRIhDwnD4FVRIEVgihKB?=
 =?us-ascii?q?2+CPwsXAgEBWgI9IwEBAggHPAmDJYJpgiMXgmeCbD9NgW+CD4M0ElSBWYNYH?=
 =?us-ascii?q?R0vRoEPWYEvjGWBRyIDJjMsAVUTFwsHBWGBEgMuNjGDYIECOYIRaUk6Ag0CN?=
 =?us-ascii?q?oIgJFiCTYNZgT+EYYRWhhuCF4IWggkdQAMLbT03FBudHQEJNEYBRoJ2CSYOP?=
 =?us-ascii?q?gEBFRswAgEXBA8BBwMJCA4BASACLAIIDjIDKgYGFxUGAQEDBQYfCwYFLQIDk?=
 =?us-ascii?q?j8SEBUDKgN0kiKeEYEKNAeEHYFdBgyJBYEklXuEBIFXiy6HAJJJIphZIoI1h?=
 =?us-ascii?q?yVdSAmBbh5MhR2QNggYhTaBfSSBSQwHMxowIiGCZwlGHA+IIYYMFoNYgT6BJ?=
 =?us-ascii?q?oF1O4I+rxBCNQIBATgCBwEKAQEDCYVFHQEBgwSCF4QwAQECJAyBSwEB?=
IronPort-PHdr: A9a23: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
IronPort-Data: A9a23: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
 w==
IronPort-HdrOrdr: A9a23:vRqnsKN7fXn+e8BcTvyjsMiBIKoaSvp037BL7TETdfUxSKalfq
 +V8sjzuSWYtN9zYhEdcLK7WZVoKEm0nfVICOIqUotKMjOLhEKYaKlcqaHizzfjFyCWzJ8+6Y
 5QN45kBpnVBVh+5PyKhDVQ/uxQpeW6zA==
X-Talos-CUID: 9a23:CShCGGPvUmK0Xu5DQTlD1WxIBOsfc0bGzV3tEXWfE2lnYejA
X-Talos-MUID: 9a23:qS1JzAXYgxYZbyzq/DnFizBSF5ZD2o63CmlVipQo4dmOHAUlbg==
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-AV: E=Sophos;i="6.12,259,1728943200"; 
   d="scan'208,217";a="200638708"
X-MGA-submission: =?us-ascii?q?MDH+w3HCLUafS4eN5DXGe0fgJfAWFfL+oc/POD?=
 =?us-ascii?q?st69p8zHEVv+h453TBlP67Bi56aw+HixFAviUqLr+VOIUL9YBPm266Yp?=
 =?us-ascii?q?NflveUZA+3olcvP0iJrvDyLdMmKEtdgfy7hOIXN114lu/gcEUCZl38gj?=
 =?us-ascii?q?kmrdunLcmv5shEuds0WEYCMg=3D=3D?=
Received: from mx1.polytechnique.org ([129.104.30.34])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 24 Dec 2024 09:55:16 +0100
Received: from TM.local (unknown [82.66.240.41])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ssl.polytechnique.org (Postfix) with ESMTPSA id 593FC5649C0;
	Tue, 24 Dec 2024 09:55:14 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=polytechnique.org;
	s=svoboda; t=1735030514;
	bh=v/73chKPdyGruPfLaLsr/SKrfJvE6kOvl46OdUQn7vo=;
	h=From:To:Subject:Date:Message-ID;
	b=srJLnJHeqRETkSlHz/uWJq7c1tpswuYD+NIMbN7oaRcCYNjnAgRWjb8+OECEE8K9K
	 B7rK7FaBrp4WLgICsTQb/u9wBkrsg7MEiDOxBWgyJAyXG2OPaygPH/gD3vRGjzDxob
	 TvUd72IXHdBlXycpt6NptPDMVOm2OFuGmItjYWdo=
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, caml-list@inria.fr
Date: Tue, 24 Dec 2024 09:55:12 +0100
Message-ID: <m25xn98npr.fsf@petitepomme.net>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="=-=-="
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Tue Dec 24 09:55:15 2024 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.271758, queueID=9FAE75649C7
X-Org-Mail: alan.schmitt.1995@polytechnique.org
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News
Reply-To: Alan Schmitt <alan.schmitt@polytechnique.org>
X-Loop: caml-list@inria.fr
X-Sequence: 19238
Errors-To: caml-list-owner@inria.fr
Precedence: list
Precedence: bulk
Sender: caml-list-request@inria.fr
X-no-archive: yes
List-Id: <caml-list.inria.fr>
List-Help: <mailto:sympa_inria@inria.fr?subject=help>
List-Subscribe: <mailto:sympa_inria@inria.fr?subject=subscribe%20caml-list>
List-Unsubscribe: <mailto:sympa_inria@inria.fr?subject=unsubscribe%20caml-list>
List-Post: <mailto:caml-list@inria.fr>
List-Owner: <mailto:caml-list-request@inria.fr>
List-Archive: <https://sympa.inria.fr/sympa/arc/caml-list>
Archived-At: <https://sympa.inria.fr/sympa/arcsearch_id/caml-list/2024-12/m25xn98npr.fsf%40petitepomme.net>

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable

Hello

Here is the latest OCaml Weekly News, for the week of December 17 to 24,
2024.

Table of Contents
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80

dream-html and pure-html
Dune 3.17
First release candidate of OCaml 5.3.0
Pragmatic Category Theory | Part 3: Associativity
ocaml-stk, xtmpl, stog, ocaml-css, ocaml-ldp, higlo and chamo
MirageOS on OCaml 5
Dune dev meeting
Other OCaml News
Old CWN


dream-html and pure-html
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/ann-dream-html-pure-html-3-5-2/14808/6>


Yawar Amin announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80

  [ANN] dream-html 3.8.0

  Happy to announce some added power to the form decoding
  functionality. Three main things:

  1. Added [Dream_html.form] and [query] helper functions to wrap
     extracting the data directly from the Dream request and decoding it
     correspondingly from the body or query.
  2. Added the (monadic) chaining operator [Dream_html.Form.( let* )]
     and [ok] and [error] helpers to allow sophisticated sequential
     decoding where decoding of some fields depend on others.
  3. Added optional parameters to constrain [typed decoding] of values
     eg `int ~min:0' will succeed the decode if the value is an integer
     _and_ at least 0. Also added [unix_tm] type decoder to decode
     timestamps into `Unix.tm' structs (not timezone-aware).

  The last [example] on the page shows a fairly sophisticated form
  decoder which requires an `id' field and _one or more of_ the fields
  `days', `weeks', `months', and `years', and fails if at least one is
  not provided.

  Enjoy :slight_smile:


[Dream_html.form]
<https://yawaramin.github.io/dream-html/dream-html/Dream_html/#val-form>

[query]
<https://yawaramin.github.io/dream-html/dream-html/Dream_html/#val-query>

[Dream_html.Form.( let* )]
<https://yawaramin.github.io/dream-html/dream-html/Dream_html/Form/index.ht=
ml#val-let*>

[ok]
<https://yawaramin.github.io/dream-html/dream-html/Dream_html/Form/index.ht=
ml#val-ok>

[error]
<https://yawaramin.github.io/dream-html/dream-html/Dream_html/Form/index.ht=
ml#val-error>

[typed decoding]
<https://yawaramin.github.io/dream-html/dream-html/Dream_html/Form/index.ht=
ml#basic-type-decoders>

[unix_tm]
<https://yawaramin.github.io/dream-html/dream-html/Dream_html/Form/index.ht=
ml#val-unix_tm>

[example]
<https://yawaramin.github.io/dream-html/dream-html/Dream_html/Form/index.ht=
ml#examples>


Dune 3.17
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90

  Archive: <https://discuss.ocaml.org/t/ann-dune-3-17/15770/4>


Etienne Marais announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  The Dune team is happy to announce the release of Dune `3.17.1'!
  :camel:

  This patch release includes some bug fixes. To reduce computing time,
  it does not build `.cmxs' files anymore when the `(no_dynlink)' stanza
  is used. This change also corrects the semantic of the `(no_dynlink)'
  stanza which was building `.cmxs' files even if it did not install
  them. Now, it does not build nor install them.

  If you encounter a problem with this release, you can report it on the
  [ocaml/dune] repository.


[ocaml/dune] <https://github.com/ocaml/dune/issues>

Changelog
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C

=E2=97=8A Fixed

  =E2=80=A2 When a library declares `(no_dynlink)', then the `.cmxs' file f=
or it
    is no longer built. (#11176, @nojb)
  =E2=80=A2 Fix bug that could result in corrupted file copies by Dune, for
    example when using the `copy_files#' stanza or the `copy#'
    action. (@nojb, #11194, fixes #11193)
  =E2=80=A2 Remove useless error message when running `$ dune subst' in emp=
ty
    projects.  (@rgrinberg, #11204, fixes #11200)


First release candidate of OCaml 5.3.0
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/first-release-candidate-of-ocaml-5-3-0/15815=
/1>


octachron announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80

  The release of OCaml 5.3.0 is imminent.

  As a final step, we are publishing a release candidate to check that
  everything is in order before the release in the upcoming week(s).

  If you find any bugs, please report them on [OCaml's issue tracker].

  Compared to the second beta, this release candidate contains a
  regression fix in the type system (some type expressions were not
  generalized when they ought to be), one fix for the new check for
  dependency order at link time, and a manual update.

  The full change log for OCaml 5.3.0 is available [on GitHub]. A short
  summary of the changes since the second beta release is also available
  below.


[OCaml's issue tracker] <https://github.com/ocaml/ocaml/issues>

[on GitHub] <https://github.com/ocaml/ocaml/blob/5.3/Changes>

Installation Instructions
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  The base compiler can be installed as an opam switch with the
  following commands on opam 2.1 and later:
  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 opam update
  =E2=94=82 opam switch create 5.3.0~rc1
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  The source code for the release candidate is also directly available
  on:

  =E2=80=A2 [GitHub]
  =E2=80=A2 [OCaml archives at Inria]


[GitHub] <https://github.com/ocaml/ocaml/archive/5.3.0-rc1.tar.gz>

[OCaml archives at Inria]
<https://caml.inria.fr/pub/distrib/ocaml-5.3/ocaml-5.3.0~rc1.tar.gz>

=E2=97=8A Fine-Tuned Compiler Configuration

  If you want to tweak the configuration of the compiler, you can switch
  to the option variant with:
  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 opam update
  =E2=94=82 opam switch create <switch_name> ocaml-variants.5.3.0~rc1+optio=
ns <option_list>
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  where `<option_list>' is a space-separated list of `ocaml-option-*'
  packages. For instance, for a `flambda' and `no-flat-float-array'
  switch:
  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 opam switch create 5.3.0~rc1+flambda+nffa ocaml-variants.5.3.0~=
rc1+options ocaml-option-flambda ocaml-option-no-flat-float-array
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  All available options can be listed with `opam search ocaml-option'.


Changes since the second beta
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

=E2=97=8A Type system

  =E2=80=A2 [#13690]: some type expressions were incorrectly not generalized
    (because they were assigned to the wrong level pool)


  [#13690] <https://github.com/ocaml/ocaml/issues/13690>


=E2=97=8A Documentation

  =E2=80=A2 [#13666]: Rewrite parts of the example code around nested lists=
 in
    Chapter 6 (Polymorphism and its limitations -> Polymorphic
    recursion) giving the "depth" function [in the
    non-polymorphically-recursive part of the example] a much more
    sensible behavior; also fix a typo and some formatting.  (Frank
    Steffahn, review by Florian Angeletti)


  [#13666] <https://github.com/ocaml/ocaml/issues/13666>


=E2=97=8A Compiler user-interface and warnings:

  =E2=80=A2 [#12084], +[#13669], +[#13673]: Check link order when creating
    archive and when using ocamlopt.


  [#12084] <https://github.com/ocaml/ocaml/issues/12084>

  [#13669] <https://github.com/ocaml/ocaml/issues/13669>

  [#13673] <https://github.com/ocaml/ocaml/issues/13673>


Pragmatic Category Theory | Part 3: Associativity
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/pragmatic-category-theory-part-3-associativi=
ty/15819/1>


Dmitrii Kovanikov announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80=E2=94=80

  Hi everyone! :wave:

  I've finished writing the third part of my *Pragmatic Category Theory*
  series (some code examples are in OCaml):

  =E2=80=A2 [Part 3: Associativity]

  Previous discussion:

  =E2=80=A2 <https://discuss.ocaml.org/t/new-part-pragmatic-category-theory=
-part-2-published/15056>

  P.S. I would've edited the previous topic instead of creating a new
  one but looks like I haven't touched it for a while, so I can't edit
  the title and the body anymore.


[Part 3: Associativity]
<https://chshersh.com/blog/2024-12-20-pragmatic-category-theory-part-03.htm=
l>


ocaml-stk, xtmpl, stog, ocaml-css, ocaml-ldp, higlo and chamo
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/ann-ocaml-stk-xtmpl-stog-ocaml-css-ocaml-ldp=
-higlo-and-chamo/15820/1>


Zoggy announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  Hello,

  I made new releases for some libraries and tools. All are available in
  opam.


[OCaml-stk] 0.4.0
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C

  OCaml-stk is a library to build graphical user interfaces, based on
  SDL2. This release includes two new widgets:

  =E2=80=A2 a [layers] widget, allowing to display widgets in=E2=80=A6 laye=
rs,
  =E2=80=A2 a xmlview widget (in [stk_xml] package), allowing to display XML
    (and so XHTML) documents, handling CSS for styling and layout. The
    programmer can customize which widgets are created for each XML
    node, and add event handlers on each node. See the "xmlview" example
    included in sources.

  This new release also comes with an [inspection window] for easier
  debugging.

  Complete list of changes is [here].


[OCaml-stk] <https://zoggy.frama.io/ocaml-stk/>

[layers]
<https://zoggy.frama.io/ocaml-stk/refdoc/stk/Stk/Layers/class-layers/index.=
html>

[stk_xml] <https://zoggy.frama.io/ocaml-stk/refdoc/stk_xml/index.html>

[inspection window] <https://zoggy.frama.io/ocaml-stk/doc-inspect.html>

[here] <https://zoggy.frama.io/ocaml-stk/posts/release-0.4.0.html>


[Xtmpl] 1.0.0
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  Xtmpl is a library to build, read and parse XML document. It provides
  a [rewriting engine] and [templating facilities]. This new release
  includes a big refactoring, using functors. This creates some
  incompatibilities with prior versions. See [here] for changes.


[Xtmpl] <https://www.good-eris.net/xtmpl/>

[rewriting engine]
<https://www.good-eris.net/xtmpl/refdoc/xtmpl/Xtmpl/Rewrite/index.html>

[templating facilities] <https://www.good-eris.net/xtmpl/doc.html>

[here] <https://www.good-eris.net/xtmpl/posts/release-1.0.0.html>


[Stog] 1.1.0
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  Stog is a static web site compiler. It is able to handle blog posts as
  well as regular pages or any XML document in general. This release
  upgrades to Xtmpl 1.1.0 and includes small fixes (see [here] for
  details).


[Stog] <https://www.good-eris.net/>

[here] <https://www.good-eris.net/stog/posts/release-1.1.0.html>


[OCaml-css] 0.3.0
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C

  OCaml-css is an OCaml library to parse and print CSS. It can also
  expand namespaces and perform computations on property values. Parser
  can be extended by defining additional properties.

  This release includes various parsing fixes and adds new CSS
  properties: `border-collapse', `border-spacing', and `opacity'. The
  complete list of changes is [here].


[OCaml-css] <https://zoggy.frama.io/ocaml-css/>

[here] <https://framagit.org/zoggy/ocaml-css/-/blob/master/Changes>


[OCaml-ldp] 0.4.0
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C

  This is a library to build [LDP] (Linked Data Platform) and [SOLID]
  applications, runnable either in standalone program (using packages
  `ldp_tls' or `ldp_curl') or in the browser (using package `ldp_js'
  with js_of_ocaml).

  This release includes only one fix in [`Ldp.Http'] module: when
  following redirection, resolve IRI in Location field of response
  against original IRI.


[OCaml-ldp] <https://zoggy.frama.io/ocaml-ldp/>

[LDP] <http://www.w3.org/TR/ldp/>

[SOLID] <https://solidproject.org/>

[`Ldp.Http']
<https://zoggy.frama.io/ocaml-ldp/refdoc/ldp/Ldp/Http/module-type-Http/inde=
x.html>


[Higlo] 0.10.0
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  Higlo is an OCaml library for syntax highlighting. This release adds a
  simple commonmark lexer.


[Higlo] <https://zoggy.frama.io/higlo/>


[Chamo] 4.2.0
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  Chamo is a source code editor, even if it can be used to edit any text
  file. A system of "views" allows to edit some kinds of files in
  specific views. It's like an Emacs where Lisp is replaced by OCaml, as
  it can be extended and customized in OCaml.

  This release is just an upgrade to Stk 0.4.0 and Xtmpl 1.0.0.


[Chamo] <https://zoggy.frama.io/chamo/>


MirageOS on OCaml 5
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90

  Archive: <https://discuss.ocaml.org/t/mirageos-on-ocaml-5/15822/1>


shym announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  On behalf of all the numerous developers involved, it=E2=80=99s my pleasu=
re to
  announce that the MirageOS ecosystem has seen the long-running work to
  port to OCaml 5 come to fruition: `ocaml-solo5' v1.0 is now using
  OCaml 5.2.1!


What is `ocaml-solo5'
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  `ocaml-solo5' is an OCaml cross compiler for producing Solo5
  unikernels. Solo5 is the basis for MirageOS unikernels when they are
  not compiled as programs to run on a regular OS.

  `ocaml-solo5' responds to specific unikernel constraints. In
  particular it provides a placeholder for the standard C library that
  is complete enough that we can build the OCaml runtime without a full
  POSIX system to support it. That OCaml runtime can then be linked
  statically to OCaml programs in order to produce unikernels.

  These constraints require us to keep track of developments of the
  OCaml compiler and particularly of its runtime. The major changes
  coming with OCaml 5 have required quite a lot of work (over 1 year) to
  bring our cross compiler up-to-date.

  It should be noted that `ocaml-solo5' is restricted to a single domain
  but it makes it possible to use the effects introduced with OCaml 5.


MirageOS & OCaml 5
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C

  The long road to bring Mirage on OCaml 5 started with adding support
  for Thread-Local Storage (TLS) in Solo5. Even if Solo5 doesn=E2=80=99t su=
pport
  the creation of threads, the OCaml 5 runtime stores domain-specific
  data, including for the first domain, in TLS. The main work was done
  in [solo5#546] and [solo5#542] with fixes in [solo5#551] and
  [solo5#554]. It was released with [Solo5 v0.8.0].

  This foundational work on Solo5 unblocked the port of the compiler
  _per se_. As the OCaml runtime changed substantially between OCaml 4.x
  and 5.x, this required many changes in the minimal library, called
  `nolibc', that provides simple implementations and stubs for the part
  of the libc interface the runtime uses. In particular, the memory
  management of the runtime is very different from OCaml 4.x (which is
  natural, due to the multicore support): it uses the `mmap~/~munmap'
  functions instead of `malloc~/~free'. `mmap' is a very versatile
  interface, tightly tied to the virtual memory. Providing adequate
  (correct but still simple) implementations of `mmap~/~munmap' in the
  context of Solo5, _i.e._ without virtualisation of the memory,
  required a careful review of how the interface is actually used in the
  runtime.

  Besides that work on `nolibc', building an OCaml compiler targeting
  Solo5 also requires a few patches to the compiler build system. As
  much work has been happening upstream to fix issues in building a
  cross compiler, this was taken as an opportunity to write clean
  patches in order to contribute them upstream and simplify the future
  of OCaml/Solo5 (along with other cross-compiler projects).

  All this work has been combined in [ocaml-solo5#134], which built on
  and completed [ocaml-solo5#122], [ocaml-solo5#124] and
  [ocaml-solo5#129]. It was released in [ocaml-solo5 v1.0.0].

  Now we are eager to learn how it behaves in your applications! Note in
  particular that, as already mentioned, the garbage collector is
  completely different from the one in OCaml 4. For example, the [Mirage
  website] currently runs the two versions, one on OCaml 4 and one on
  OCaml 5 with traffic being alternatively routed to one or the other,
  to monitor their behaviours. First experiments show that we must tweak
  the `space_overhead' parameter to have the OCaml 5 unikernel use the
  same amount of memory than the OCaml 4 one, at the price of some
  compute time. This generally means that you might have to experiment a
  bit if you run within very constrained memory limits.


[solo5#546] <https://github.com/Solo5/solo5/pull/546>

[solo5#542] <https://github.com/Solo5/solo5/pull/542>

[solo5#551] <https://github.com/Solo5/solo5/pull/551>

[solo5#554] <https://github.com/Solo5/solo5/pull/554>

[Solo5 v0.8.0]
<https://github.com/Solo5/solo5/blob/master/CHANGES.md#v080-2023-04-25>

[ocaml-solo5#134] <https://github.com/mirage/ocaml-solo5/pull/134>

[ocaml-solo5#122] <https://github.com/mirage/ocaml-solo5/pull/122>

[ocaml-solo5#124] <https://github.com/mirage/ocaml-solo5/pull/124>

[ocaml-solo5#129] <https://github.com/mirage/ocaml-solo5/pull/129>

[ocaml-solo5 v1.0.0]
<https://github.com/mirage/ocaml-solo5/blob/main/CHANGES.md#v100-2024-12-04>

[Mirage website] <https://mirage.io/>


How to give it a spin
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  To try the new OCaml 5, first create an OPAM switch [with OCaml
  5.2.1]. Then, follow the standard procedure (see how to [install it]
  and how to [build an hello-world unikernel]). After installing
  `ocaml-solo5', you can check with `opam list ocaml-solo5' that it
  installed the version `1.x' of the package.


[with OCaml 5.2.1]
<https://discuss.ocaml.org/t/ocaml-5-2-1-released/15634>

[install it] <https://mirage.io/docs/install>

[build an hello-world unikernel] <https://mirage.io/docs/hello-world>


People involved
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  Many people got involved at some point or another, either with code or
  comments, to that community effort (hopefully not forgetting anyone,
  in `sort' order):

  =E2=80=A2 Adam Steen
  =E2=80=A2 Adrian-Ken Rueegsegger
  =E2=80=A2 Christiano Haesbaert
  =E2=80=A2 Fabrice Buoro
  =E2=80=A2 Hannes Mehnert
  =E2=80=A2 Kate
  =E2=80=A2 Pierre Alain
  =E2=80=A2 Romain Calascibetta
  =E2=80=A2 Samuel Hym
  =E2=80=A2 S=C3=A9bastien Hinderer


Dune dev meeting
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive: <https://discuss.ocaml.org/t/ann-dune-dev-meeting/14994/19>


Etienne Marais announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  Hi camelers! :camel: The next Dune meeting is supposed to be on
  Wednesday, December, 25th, but since it is Christmas Day (a bank
  holiday for various countries), the meeting is cancelled. Next one
  will be on the January, 8th, 2025 :fireworks:


Other OCaml News
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

>From the ocaml.org blog
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  Here are links from many OCaml blogs aggregated at [the ocaml.org
  blog].

  =E2=80=A2 [Pragmatic Category Theory | Part 3: Associativity]
  =E2=80=A2 [Learn OCaml the Easy Way - Including the Hard Bits]
  =E2=80=A2 [MetAcsl v0.8 for Frama-C 30.0 Zinc]
  =E2=80=A2 [Saturn 1.0: Data structures for OCaml Multicore]
  =E2=80=A2 [Frama-Clang v0.0.17 for Frama-C 30.0~ Zinc]


[the ocaml.org blog] <https://ocaml.org/blog/>

[Pragmatic Category Theory | Part 3: Associativity]
<https://chshersh.com/blog/2024-12-20-pragmatic-category-theory-part-03.htm=
l>

[Learn OCaml the Easy Way - Including the Hard Bits]
<https://tarides.com/blog/2024-12-18-learn-ocaml-the-easy-way-including-the=
-hard-bits>

[MetAcsl v0.8 for Frama-C 30.0 Zinc]
<https://frama-c.com/fc-plugins/metacsl.html>

[Saturn 1.0: Data structures for OCaml Multicore]
<https://tarides.com/blog/2024-12-11-saturn-1-0-data-structures-for-ocaml-m=
ulticore>

[Frama-Clang v0.0.17 for Frama-C 30.0~ Zinc]
<https://frama-c.com/fc-plugins/frama-clang.html>


Old CWN
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  If you happen to miss a CWN, you can [send me a message] and I'll mail
  it to you, or go take a look at [the archive] or the [RSS feed of the
  archives].

  If you also wish to receive it every week by mail, you may subscribe
  to the [caml-list].

  [Alan Schmitt]


[send me a message] <mailto:alan.schmitt@polytechnique.org>

[the archive] <https://alan.petitepomme.net/cwn/>

[RSS feed of the archives] <https://alan.petitepomme.net/cwn/cwn.rss>

[caml-list] <https://sympa.inria.fr/sympa/info/caml-list>

[Alan Schmitt] <https://alan.petitepomme.net/>


--=-=-=
Content-Type: text/html; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2024-12-24 Tue 09:54 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html;charset=3Dutf-8" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
 />
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org Mode" />
<style type=3D"text/css">
  #content { max-width: 60em; margin: auto; }
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #e6e6e6;
    border-radius: 3px;
    background-color: #f2f2f2;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
  }
  pre.src:before {
    display: none;
    position: absolute;
    top: -8px;
    right: 12px;
    padding: 3px;
    color: #555;
    background-color: #f2f2f299;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-authinfo::before { content: 'Authinfo'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { }
</style>
<style type=3D"text/css">#table-of-contents h2 { display: none } .title { d=
isplay: none } .authorname { text-align: right }</style>
<style type=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
</head>
<body>
<div id=3D"content" class=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p>
<a href=3D"https://alan.petitepomme.net/cwn/2024.12.17.html">Previous Week<=
/a> <a href=3D"https://alan.petitepomme.net/cwn/index.html">Up</a> <a href=
=3D"https://alan.petitepomme.net/cwn/2024.12.31.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of December 17 to 24, 20=
24.
</p>

<div id=3D"table-of-contents" role=3D"doc-toc">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents" role=3D"doc-toc">
<ul>
<li><a href=3D"#1">dream-html and pure-html</a></li>
<li><a href=3D"#2">Dune 3.17</a></li>
<li><a href=3D"#3">First release candidate of OCaml 5.3.0</a></li>
<li><a href=3D"#4">Pragmatic Category Theory | Part 3: Associativity</a></l=
i>
<li><a href=3D"#5">ocaml-stk, xtmpl, stog, ocaml-css, ocaml-ldp, higlo and =
chamo</a></li>
<li><a href=3D"#6">MirageOS on OCaml 5</a></li>
<li><a href=3D"#7">Dune dev meeting</a></li>
<li><a href=3D"#8">Other OCaml News</a></li>
<li><a href=3D"#org51aa593">Old CWN</a></li>
</ul>
</div>
</div>
<div id=3D"outline-container-1" class=3D"outline-2">
<h2 id=3D"1">dream-html and pure-html</h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-dream-html-pure-html-3-=
5-2/14808/6">https://discuss.ocaml.org/t/ann-dream-html-pure-html-3-5-2/148=
08/6</a>
</p>
</div>
<div id=3D"outline-container-orge659db3" class=3D"outline-3">
<h3 id=3D"orge659db3">Yawar Amin announced</h3>
<div class=3D"outline-text-3" id=3D"text-orge659db3">
<p>
[ANN] dream-html 3.8.0
</p>

<p>
Happy to announce some added power to the form decoding functionality. Thre=
e main things:
</p>

<ol class=3D"org-ol">
<li>Added <a href=3D"https://yawaramin.github.io/dream-html/dream-html/Drea=
m_html/#val-form">Dream_html.form</a> and <a href=3D"https://yawaramin.gith=
ub.io/dream-html/dream-html/Dream_html/#val-query">query</a> helper functio=
ns to wrap extracting the data directly from the Dream request and decoding=
 it correspondingly from the body or query.</li>
<li>Added the (monadic) chaining operator <a href=3D"https://yawaramin.gith=
ub.io/dream-html/dream-html/Dream_html/Form/index.html#val-let*">Dream_html=
.Form.( let* )</a> and <a href=3D"https://yawaramin.github.io/dream-html/dr=
eam-html/Dream_html/Form/index.html#val-ok">ok</a> and <a href=3D"https://y=
awaramin.github.io/dream-html/dream-html/Dream_html/Form/index.html#val-err=
or">error</a> helpers to allow sophisticated sequential decoding where deco=
ding of some fields depend on others.</li>
<li>Added optional parameters to constrain <a href=3D"https://yawaramin.git=
hub.io/dream-html/dream-html/Dream_html/Form/index.html#basic-type-decoders=
">typed decoding</a> of values eg <code>int ~min:0</code> will succeed the =
decode if the value is an integer <span class=3D"underline">and</span> at l=
east 0. Also added <a href=3D"https://yawaramin.github.io/dream-html/dream-=
html/Dream_html/Form/index.html#val-unix_tm">unix_tm</a> type decoder to de=
code timestamps into <code>Unix.tm</code> structs (not timezone-aware).</li>
</ol>

<p>
The last <a href=3D"https://yawaramin.github.io/dream-html/dream-html/Dream=
_html/Form/index.html#examples">example</a> on the page shows a fairly soph=
isticated form decoder which requires an <code>id</code> field and <span cl=
ass=3D"underline">one or more of</span> the fields <code>days</code>, <code=
>weeks</code>, <code>months</code>, and <code>years</code>, and fails if at=
 least one is not provided.
</p>

<p>
Enjoy :slight_smile:
</p>
</div>
</div>
</div>
<div id=3D"outline-container-2" class=3D"outline-2">
<h2 id=3D"2">Dune 3.17</h2>
<div class=3D"outline-text-2" id=3D"text-2">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-dune-3-17/15770/4">http=
s://discuss.ocaml.org/t/ann-dune-3-17/15770/4</a>
</p>
</div>
<div id=3D"outline-container-orge74786a" class=3D"outline-3">
<h3 id=3D"orge74786a">Etienne Marais announced</h3>
<div class=3D"outline-text-3" id=3D"text-orge74786a">
<p>
The Dune team is happy to announce the release of Dune <code>3.17.1</code>!=
 :camel:=20
</p>

<p>
This patch release includes some bug fixes. To reduce computing time, it do=
es
not build <code>.cmxs</code> files anymore when the <code>(no_dynlink)</cod=
e> stanza is used. This change also corrects the semantic of the <code>(no_=
dynlink)</code> stanza which was
building <code>.cmxs</code> files even if it did not install them. Now, it =
does not build nor install them.
</p>

<p>
If you encounter a problem with this release, you can report it on the <a h=
ref=3D"https://github.com/ocaml/dune/issues">ocaml/dune</a> repository.
</p>
</div>
<div id=3D"outline-container-org9ae7930" class=3D"outline-4">
<h4 id=3D"org9ae7930">Changelog</h4>
<div class=3D"outline-text-4" id=3D"text-org9ae7930">
</div>
<ul class=3D"org-ul">
<li><a id=3D"org7cdba2e"></a>Fixed<br />
<div class=3D"outline-text-5" id=3D"text-org7cdba2e">
<ul class=3D"org-ul">
<li>When a library declares <code>(no_dynlink)</code>, then the <code>.cmxs=
</code> file for it
is no longer built. (#11176, @nojb)</li>
<li>Fix bug that could result in corrupted file copies by Dune, for example=
 when
using the <code>copy_files#</code> stanza or the <code>copy#</code> action.=
 (@nojb, #11194, fixes
#11193)</li>
<li>Remove useless error message when running <code>$ dune subst</code> in =
empty projects.
(@rgrinberg, #11204, fixes #11200)</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
</div>
<div id=3D"outline-container-3" class=3D"outline-2">
<h2 id=3D"3">First release candidate of OCaml 5.3.0</h2>
<div class=3D"outline-text-2" id=3D"text-3">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/first-release-candidate-of-=
ocaml-5-3-0/15815/1">https://discuss.ocaml.org/t/first-release-candidate-of=
-ocaml-5-3-0/15815/1</a>
</p>
</div>
<div id=3D"outline-container-org1231fc5" class=3D"outline-3">
<h3 id=3D"org1231fc5">octachron announced</h3>
<div class=3D"outline-text-3" id=3D"text-org1231fc5">
<p>
The release of OCaml 5.3.0 is imminent.
</p>

<p>
As a final step, we are publishing a release candidate to check that everyt=
hing is in order before the release in the upcoming week(s).
</p>

<p>
If you find any bugs, please report them on <a href=3D"https://github.com/o=
caml/ocaml/issues">OCaml's issue tracker</a>.
</p>

<p>
Compared to the second beta, this release candidate contains a regression f=
ix in the type system (some type expressions were not generalized when they=
 ought to be), one fix for the new check for dependency order at link time,=
 and a manual update.
</p>

<p>
The full change log for OCaml 5.3.0 is available <a href=3D"https://github.=
com/ocaml/ocaml/blob/5.3/Changes">on GitHub</a>. A short summary of the cha=
nges since the second beta release is also available below.
</p>
</div>
<div id=3D"outline-container-orgb256739" class=3D"outline-4">
<h4 id=3D"orgb256739">Installation Instructions</h4>
<div class=3D"outline-text-4" id=3D"text-orgb256739">
<p>
The base compiler can be installed as an opam switch with the following com=
mands on opam 2.1 and later:
</p>
<pre class=3D"example" id=3D"org0e8967a">
opam update
opam switch create 5.3.0~rc1
</pre>

<p>
The source code for the release candidate is also directly available on:
</p>

<ul class=3D"org-ul">
<li><a href=3D"https://github.com/ocaml/ocaml/archive/5.3.0-rc1.tar.gz">Git=
Hub</a></li>
<li><a href=3D"https://caml.inria.fr/pub/distrib/ocaml-5.3/ocaml-5.3.0~rc1.=
tar.gz">OCaml archives at Inria</a></li>
</ul>
</div>
<ul class=3D"org-ul">
<li><a id=3D"org4f7d8eb"></a>Fine-Tuned Compiler Configuration<br />
<div class=3D"outline-text-5" id=3D"text-org4f7d8eb">
<p>
If you want to tweak the configuration of the compiler, you can switch to t=
he option variant with:
</p>
<pre class=3D"example" id=3D"org98d39e7">
opam update
opam switch create &lt;switch_name&gt; ocaml-variants.5.3.0~rc1+options &lt=
;option_list&gt;
</pre>
<p>
where <code>&lt;option_list&gt;</code> is a space-separated list of <code>o=
caml-option-*</code> packages. For instance, for a <code>flambda</code> and=
 <code>no-flat-float-array</code> switch:
</p>
<pre class=3D"example" id=3D"org63169d2">
opam switch create 5.3.0~rc1+flambda+nffa ocaml-variants.5.3.0~rc1+options =
ocaml-option-flambda ocaml-option-no-flat-float-array
</pre>

<p>
All available options can be listed with <code>opam search ocaml-option</co=
de>.
</p>
</div>
</li>
</ul>
</div>
<div id=3D"outline-container-org20cb73c" class=3D"outline-4">
<h4 id=3D"org20cb73c">Changes since the second beta</h4>
<div class=3D"outline-text-4" id=3D"text-org20cb73c">
</div>
<ul class=3D"org-ul">
<li><a id=3D"org36aca2c"></a>Type system<br />
<div class=3D"outline-text-5" id=3D"text-org36aca2c">
<ul class=3D"org-ul">
<li><a href=3D"https://github.com/ocaml/ocaml/issues/13690">#13690</a>: som=
e type expressions were incorrectly not generalized (because they
were assigned to the wrong level pool)</li>
</ul>
</div>
</li>
<li><a id=3D"org8a957ee"></a>Documentation<br />
<div class=3D"outline-text-5" id=3D"text-org8a957ee">
<ul class=3D"org-ul">
<li><a href=3D"https://github.com/ocaml/ocaml/issues/13666">#13666</a>: Rew=
rite parts of the example code around nested lists in Chapter 6
(Polymorphism and its limitations -&gt; Polymorphic recursion) giving the
"depth" function [in the non-polymorphically-recursive part of the example]
a much more sensible behavior; also fix a typo and some formatting.
(Frank Steffahn, review by Florian Angeletti)</li>
</ul>
</div>
</li>
<li><a id=3D"orge4d1cf6"></a>Compiler user-interface and warnings:<br />
<div class=3D"outline-text-5" id=3D"text-orge4d1cf6">
<ul class=3D"org-ul">
<li><a href=3D"https://github.com/ocaml/ocaml/issues/12084">#12084</a>, +<a=
 href=3D"https://github.com/ocaml/ocaml/issues/13669">#13669</a>, +<a href=
=3D"https://github.com/ocaml/ocaml/issues/13673">#13673</a>: Check link ord=
er when creating archive and when using
ocamlopt.</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
</div>
<div id=3D"outline-container-4" class=3D"outline-2">
<h2 id=3D"4">Pragmatic Category Theory | Part 3: Associativity</h2>
<div class=3D"outline-text-2" id=3D"text-4">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/pragmatic-category-theory-p=
art-3-associativity/15819/1">https://discuss.ocaml.org/t/pragmatic-category=
-theory-part-3-associativity/15819/1</a>
</p>
</div>
<div id=3D"outline-container-org2f4fd4a" class=3D"outline-3">
<h3 id=3D"org2f4fd4a">Dmitrii Kovanikov announced</h3>
<div class=3D"outline-text-3" id=3D"text-org2f4fd4a">
<p>
Hi everyone! :wave:=20
</p>

<p>
I've finished writing the third part of my <b>Pragmatic Category Theory</b>=
 series (some code examples are in OCaml):
</p>

<ul class=3D"org-ul">
<li><a href=3D"https://chshersh.com/blog/2024-12-20-pragmatic-category-theo=
ry-part-03.html">Part 3: Associativity</a></li>
</ul>

<p>
Previous discussion:
</p>

<ul class=3D"org-ul">
<li><a href=3D"https://discuss.ocaml.org/t/new-part-pragmatic-category-theo=
ry-part-2-published/15056">https://discuss.ocaml.org/t/new-part-pragmatic-c=
ategory-theory-part-2-published/15056</a></li>
</ul>

<p>
P.S. I would've edited the previous topic instead of creating a new one but=
 looks like I haven't touched it for a while, so I can't edit the title and=
 the body anymore.
</p>
</div>
</div>
</div>
<div id=3D"outline-container-5" class=3D"outline-2">
<h2 id=3D"5">ocaml-stk, xtmpl, stog, ocaml-css, ocaml-ldp, higlo and chamo<=
/h2>
<div class=3D"outline-text-2" id=3D"text-5">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-ocaml-stk-xtmpl-stog-oc=
aml-css-ocaml-ldp-higlo-and-chamo/15820/1">https://discuss.ocaml.org/t/ann-=
ocaml-stk-xtmpl-stog-ocaml-css-ocaml-ldp-higlo-and-chamo/15820/1</a>
</p>
</div>
<div id=3D"outline-container-org21d2da4" class=3D"outline-3">
<h3 id=3D"org21d2da4">Zoggy announced</h3>
<div class=3D"outline-text-3" id=3D"text-org21d2da4">
<p>
Hello,
</p>

<p>
I made new releases for some libraries and tools. All are available in opam.
</p>
</div>
<div id=3D"outline-container-org6277540" class=3D"outline-4">
<h4 id=3D"org6277540"><a href=3D"https://zoggy.frama.io/ocaml-stk/">OCaml-s=
tk</a> 0.4.0</h4>
<div class=3D"outline-text-4" id=3D"text-org6277540">
<p>
OCaml-stk is a library to build graphical user interfaces, based on SDL2. T=
his release includes two new widgets:
</p>

<ul class=3D"org-ul">
<li>a <a href=3D"https://zoggy.frama.io/ocaml-stk/refdoc/stk/Stk/Layers/cla=
ss-layers/index.html">layers</a> widget, allowing to display widgets in&#x2=
026; layers,</li>
<li>a xmlview widget (in <a href=3D"https://zoggy.frama.io/ocaml-stk/refdoc=
/stk_xml/index.html">stk_xml</a> package), allowing to display XML (and so =
XHTML) documents, handling CSS for styling and layout. The programmer can c=
ustomize which widgets are created for each XML node, and add event handler=
s on each node. See the "xmlview" example included in sources.</li>
</ul>

<p>
This new release also comes with an <a href=3D"https://zoggy.frama.io/ocaml=
-stk/doc-inspect.html">inspection window</a> for easier debugging.
</p>

<p>
Complete list of changes is <a href=3D"https://zoggy.frama.io/ocaml-stk/pos=
ts/release-0.4.0.html">here</a>.
</p>
</div>
</div>
<div id=3D"outline-container-org0f441ce" class=3D"outline-4">
<h4 id=3D"org0f441ce"><a href=3D"https://www.good-eris.net/xtmpl/">Xtmpl</a=
> 1.0.0</h4>
<div class=3D"outline-text-4" id=3D"text-org0f441ce">
<p>
Xtmpl is a library to build, read and parse XML document. It provides a <a =
href=3D"https://www.good-eris.net/xtmpl/refdoc/xtmpl/Xtmpl/Rewrite/index.ht=
ml">rewriting engine</a> and <a href=3D"https://www.good-eris.net/xtmpl/doc=
.html">templating facilities</a>. This new release includes a big refactori=
ng, using functors. This creates some incompatibilities with prior versions=
. See <a href=3D"https://www.good-eris.net/xtmpl/posts/release-1.0.0.html">=
here</a> for changes.
</p>
</div>
</div>
<div id=3D"outline-container-org016c68c" class=3D"outline-4">
<h4 id=3D"org016c68c"><a href=3D"https://www.good-eris.net/">Stog</a> 1.1.0=
</h4>
<div class=3D"outline-text-4" id=3D"text-org016c68c">
<p>
Stog is a static web site compiler. It is able to handle blog posts as well=
 as regular pages or any XML document in general. This release upgrades to =
Xtmpl 1.1.0 and includes small fixes (see <a href=3D"https://www.good-eris.=
net/stog/posts/release-1.1.0.html">here</a> for details).
</p>
</div>
</div>
<div id=3D"outline-container-orgc5455e7" class=3D"outline-4">
<h4 id=3D"orgc5455e7"><a href=3D"https://zoggy.frama.io/ocaml-css/">OCaml-c=
ss</a> 0.3.0</h4>
<div class=3D"outline-text-4" id=3D"text-orgc5455e7">
<p>
OCaml-css is an OCaml library to parse and print CSS. It can also expand na=
mespaces and perform computations on property values. Parser can be extende=
d by defining additional properties.
</p>

<p>
This release includes various parsing fixes and adds new CSS properties: <c=
ode>border-collapse</code>, <code>border-spacing</code>, and <code>opacity<=
/code>. The complete list of changes is <a href=3D"https://framagit.org/zog=
gy/ocaml-css/-/blob/master/Changes">here</a>.
</p>
</div>
</div>
<div id=3D"outline-container-org172a7d7" class=3D"outline-4">
<h4 id=3D"org172a7d7"><a href=3D"https://zoggy.frama.io/ocaml-ldp/">OCaml-l=
dp</a> 0.4.0</h4>
<div class=3D"outline-text-4" id=3D"text-org172a7d7">
<p>
This is a library to build <a href=3D"http://www.w3.org/TR/ldp/">LDP</a> (L=
inked Data Platform) and <a href=3D"https://solidproject.org/">SOLID</a> ap=
plications, runnable either in standalone program (using packages <code>ldp=
_tls</code> or <code>ldp_curl</code>) or in the browser (using package <cod=
e>ldp_js</code> with js_of_ocaml).=20
</p>

<p>
This release includes only one fix in <a href=3D"https://zoggy.frama.io/oca=
ml-ldp/refdoc/ldp/Ldp/Http/module-type-Http/index.html"><code>Ldp.Http</cod=
e></a> module: when following redirection, resolve IRI in Location field of=
 response against original IRI.
</p>
</div>
</div>
<div id=3D"outline-container-org0f52ed5" class=3D"outline-4">
<h4 id=3D"org0f52ed5"><a href=3D"https://zoggy.frama.io/higlo/">Higlo</a> 0=
.10.0</h4>
<div class=3D"outline-text-4" id=3D"text-org0f52ed5">
<p>
Higlo is an OCaml library for syntax highlighting. This release adds a simp=
le commonmark lexer.
</p>
</div>
</div>
<div id=3D"outline-container-org5ccadb7" class=3D"outline-4">
<h4 id=3D"org5ccadb7"><a href=3D"https://zoggy.frama.io/chamo/">Chamo</a> 4=
.2.0</h4>
<div class=3D"outline-text-4" id=3D"text-org5ccadb7">
<p>
Chamo is a source code editor, even if it can be used to edit any text file=
. A system of "views" allows to edit some kinds of files in specific views.=
 It's like an Emacs where Lisp is replaced by OCaml, as it can be extended =
and customized in OCaml.
</p>

<p>
This release is just an upgrade to Stk 0.4.0 and Xtmpl 1.0.0.
</p>
</div>
</div>
</div>
</div>
<div id=3D"outline-container-6" class=3D"outline-2">
<h2 id=3D"6">MirageOS on OCaml 5</h2>
<div class=3D"outline-text-2" id=3D"text-6">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/mirageos-on-ocaml-5/15822/1=
">https://discuss.ocaml.org/t/mirageos-on-ocaml-5/15822/1</a>
</p>
</div>
<div id=3D"outline-container-org2684801" class=3D"outline-3">
<h3 id=3D"org2684801">shym announced</h3>
<div class=3D"outline-text-3" id=3D"text-org2684801">
<p>
On behalf of all the numerous developers involved, it=E2=80=99s my pleasure=
 to announce that the MirageOS ecosystem has seen the long-running work to =
port to OCaml 5 come to fruition: <code>ocaml-solo5</code> v1.0 is now usin=
g OCaml 5.2.1!
</p>
</div>
<div id=3D"outline-container-org6be22b7" class=3D"outline-4">
<h4 id=3D"org6be22b7">What is <code>ocaml-solo5</code></h4>
<div class=3D"outline-text-4" id=3D"text-org6be22b7">
<p>
<code>ocaml-solo5</code> is an OCaml cross compiler for producing Solo5 uni=
kernels. Solo5 is the basis for MirageOS unikernels when they are not compi=
led as programs to run on a regular OS.
</p>

<p>
<code>ocaml-solo5</code> responds to specific unikernel constraints. In par=
ticular it provides a placeholder for the standard C library that is comple=
te enough that we can build the OCaml runtime without a full POSIX system t=
o support it. That OCaml runtime can then be linked statically to OCaml pro=
grams in order to produce unikernels.
</p>

<p>
These constraints require us to keep track of developments of the OCaml com=
piler and particularly of its runtime. The major changes coming with OCaml =
5 have required quite a lot of work (over 1 year) to bring our cross compil=
er up-to-date.
</p>

<p>
It should be noted that <code>ocaml-solo5</code> is restricted to a single =
domain but it makes it possible to use the effects introduced with OCaml 5.
</p>
</div>
</div>
<div id=3D"outline-container-org39bb923" class=3D"outline-4">
<h4 id=3D"org39bb923">MirageOS &amp; OCaml 5</h4>
<div class=3D"outline-text-4" id=3D"text-org39bb923">
<p>
The long road to bring Mirage on OCaml 5 started with adding support for Th=
read-Local Storage (TLS) in Solo5. Even if Solo5 doesn=E2=80=99t support th=
e creation of threads, the OCaml 5 runtime stores domain-specific data, inc=
luding for the first domain, in TLS. The main work was done in <a href=3D"h=
ttps://github.com/Solo5/solo5/pull/546">solo5#546</a> and <a href=3D"https:=
//github.com/Solo5/solo5/pull/542">solo5#542</a> with fixes in <a href=3D"h=
ttps://github.com/Solo5/solo5/pull/551">solo5#551</a> and <a href=3D"https:=
//github.com/Solo5/solo5/pull/554">solo5#554</a>. It was released with <a h=
ref=3D"https://github.com/Solo5/solo5/blob/master/CHANGES.md#v080-2023-04-2=
5">Solo5 v0.8.0</a>.
</p>

<p>
This foundational work on Solo5 unblocked the port of the compiler <span cl=
ass=3D"underline">per se</span>. As the OCaml runtime changed substantially=
 between OCaml 4.x and 5.x, this required many changes in the minimal libra=
ry, called <code>nolibc</code>, that provides simple implementations and st=
ubs for the part of the libc interface the runtime uses. In particular, the=
 memory management of the runtime is very different from OCaml 4.x (which i=
s natural, due to the multicore support): it uses the <code>mmap~/~munmap</=
code> functions instead of <code>malloc~/~free</code>. <code>mmap</code> is=
 a very versatile interface, tightly tied to the virtual memory. Providing =
adequate (correct but still simple) implementations of <code>mmap~/~munmap<=
/code> in the context of Solo5, <span class=3D"underline">i.e.</span> witho=
ut virtualisation of the memory, required a careful review of how the inter=
face is actually used in the runtime.=20
</p>

<p>
Besides that work on <code>nolibc</code>, building an OCaml compiler target=
ing Solo5 also requires a few patches to the compiler build system. As much=
 work has been happening upstream to fix issues in building a cross compile=
r, this was taken as an opportunity to write clean patches in order to cont=
ribute them upstream and simplify the future of OCaml/Solo5 (along with oth=
er cross-compiler projects).
</p>

<p>
All this work has been combined in <a href=3D"https://github.com/mirage/oca=
ml-solo5/pull/134">ocaml-solo5#134</a>, which built on and completed <a hre=
f=3D"https://github.com/mirage/ocaml-solo5/pull/122">ocaml-solo5#122</a>, <=
a href=3D"https://github.com/mirage/ocaml-solo5/pull/124">ocaml-solo5#124</=
a> and <a href=3D"https://github.com/mirage/ocaml-solo5/pull/129">ocaml-sol=
o5#129</a>. It was released in <a href=3D"https://github.com/mirage/ocaml-s=
olo5/blob/main/CHANGES.md#v100-2024-12-04">ocaml-solo5 v1.0.0</a>.
</p>

<p>
Now we are eager to learn how it behaves in your applications! Note in part=
icular that, as already mentioned, the garbage collector is completely diff=
erent from the one in OCaml 4. For example, the <a href=3D"https://mirage.i=
o/">Mirage website</a> currently runs the two versions, one on OCaml 4 and =
one on OCaml 5 with traffic being alternatively routed to one or the other,=
 to monitor their behaviours. First experiments show that we must tweak the=
 <code>space_overhead</code> parameter to have the OCaml 5 unikernel use th=
e same amount of memory than the OCaml 4 one, at the price of some compute =
time. This generally means that you might have to experiment a bit if you r=
un within very constrained memory limits.
</p>
</div>
</div>
<div id=3D"outline-container-org06fb2f9" class=3D"outline-4">
<h4 id=3D"org06fb2f9">How to give it a spin</h4>
<div class=3D"outline-text-4" id=3D"text-org06fb2f9">
<p>
To try the new OCaml 5, first create an OPAM switch <a href=3D"https://disc=
uss.ocaml.org/t/ocaml-5-2-1-released/15634">with OCaml 5.2.1</a>. Then, fol=
low the standard procedure (see how to <a href=3D"https://mirage.io/docs/in=
stall">install it</a> and how to <a href=3D"https://mirage.io/docs/hello-wo=
rld">build an hello-world unikernel</a>). After installing <code>ocaml-solo=
5</code>, you can check with <code>opam list ocaml-solo5</code> that it ins=
talled the version <code>1.x</code> of the package.
</p>
</div>
</div>
<div id=3D"outline-container-org2c1d6a2" class=3D"outline-4">
<h4 id=3D"org2c1d6a2">People involved</h4>
<div class=3D"outline-text-4" id=3D"text-org2c1d6a2">
<p>
Many people got involved at some point or another, either with code or comm=
ents, to that community effort (hopefully not forgetting anyone, in <code>s=
ort</code> order):
</p>

<ul class=3D"org-ul">
<li>Adam Steen</li>
<li>Adrian-Ken Rueegsegger</li>
<li>Christiano Haesbaert</li>
<li>Fabrice Buoro</li>
<li>Hannes Mehnert</li>
<li>Kate</li>
<li>Pierre Alain</li>
<li>Romain Calascibetta</li>
<li>Samuel Hym</li>
<li>S=C3=A9bastien Hinderer</li>
</ul>
</div>
</div>
</div>
</div>
<div id=3D"outline-container-7" class=3D"outline-2">
<h2 id=3D"7">Dune dev meeting</h2>
<div class=3D"outline-text-2" id=3D"text-7">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-dune-dev-meeting/14994/=
19">https://discuss.ocaml.org/t/ann-dune-dev-meeting/14994/19</a>
</p>
</div>
<div id=3D"outline-container-org80d4040" class=3D"outline-3">
<h3 id=3D"org80d4040">Etienne Marais announced</h3>
<div class=3D"outline-text-3" id=3D"text-org80d4040">
<p>
Hi camelers! :camel:
The next Dune meeting is supposed to be on Wednesday, December, 25th, but s=
ince it is Christmas Day (a bank holiday for various countries), the meetin=
g is cancelled. Next one will be on the January, 8th, 2025 :fireworks:
</p>
</div>
</div>
</div>
<div id=3D"outline-container-8" class=3D"outline-2">
<h2 id=3D"8">Other OCaml News</h2>
<div class=3D"outline-text-2" id=3D"text-8">
</div>
<div id=3D"outline-container-org479b528" class=3D"outline-3">
<h3 id=3D"org479b528">From the ocaml.org blog</h3>
<div class=3D"outline-text-3" id=3D"text-org479b528">
<p>
Here are links from many OCaml blogs aggregated at <a href=3D"https://ocaml=
.org/blog/">the ocaml.org blog</a>.
</p>

<ul class=3D"org-ul">
<li><a href=3D"https://chshersh.com/blog/2024-12-20-pragmatic-category-theo=
ry-part-03.html">Pragmatic Category Theory | Part 3: Associativity</a></li>
<li><a href=3D"https://tarides.com/blog/2024-12-18-learn-ocaml-the-easy-way=
-including-the-hard-bits">Learn OCaml the Easy Way - Including the Hard Bit=
s</a></li>
<li><a href=3D"https://frama-c.com/fc-plugins/metacsl.html">MetAcsl v0.8 fo=
r Frama-C 30.0 Zinc</a></li>
<li><a href=3D"https://tarides.com/blog/2024-12-11-saturn-1-0-data-structur=
es-for-ocaml-multicore">Saturn 1.0: Data structures for OCaml Multicore</a>=
</li>
<li><a href=3D"https://frama-c.com/fc-plugins/frama-clang.html">Frama-Clang=
 v0.0.17 for Frama-C 30.0~ Zinc</a></li>
</ul>
</div>
</div>
</div>
<div id=3D"outline-container-org51aa593" class=3D"outline-2">
<h2 id=3D"org51aa593">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-org51aa593">
<p>
If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@polytec=
hnique.org">send me a message</a> and I'll mail it to you, or go take a loo=
k at <a href=3D"https://alan.petitepomme.net/cwn/">the archive</a> or the <=
a href=3D"https://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archive=
s</a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe to the=
 <a href=3D"https://sympa.inria.fr/sympa/info/caml-list">caml-list</a>.
</p>

<div class=3D"authorname" id=3D"org59e5369">
<p>
<a href=3D"https://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--=-=-=--

