Return-Path: <caml-list-owner@inria.fr>
Authentication-Results: plum.tunbury.org;
	dkim=pass (1024-bit key; unprotected) header.d=inria.fr header.i=@inria.fr header.a=rsa-sha256 header.s=dc header.b=ghFeDGT/;
	dkim=fail reason="signature verification failed" (1024-bit key; secure) header.d=polytechnique.org header.i=@polytechnique.org header.a=rsa-sha256 header.s=svoboda header.b=5ae1JPV7;
	dkim-atps=neutral
Received-SPF: Pass (mailfrom) identity=mailfrom; client-ip=192.134.164.83; helo=mail2-relais-roc.national.inria.fr; envelope-from=caml-list-owner@inria.fr; receiver=tunbury.org 
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	(using TLSv1.2 with cipher ECDHE-ECDSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by plum.tunbury.org (Postfix) with ESMTPS id 8722548E3C
	for <caml-list@tunbury.org>; Tue, 10 Dec 2024 13:49:04 +0000 (UTC)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
  d=inria.fr; s=dc;
  h=from:to:date:message-id:mime-version:subject:reply-to:
   sender:list-id:list-help:list-subscribe:list-unsubscribe:
   list-post:list-owner:list-archive;
  bh=GSMgajq7jYjz+2TrGTM1B/uhWC3vgEQDnM+Eo7VuC28=;
  b=ghFeDGT/M2iJK61kN0CHLZZRtBc1QMvfBI/2n7C1H1eMxmb+RVYj4QVI
   MRISMO02lpKBX4kiPiCO7v6lJbLMHqbVuCtqKFQl6n5PTm8R7L5+MrSaC
   XYJJnbclMNJK2NBL5i4XNQpOcRJ5f5sco9JApdaKMX3FsLlVVjjyFMUZi
   w=;
Received-SPF: Pass (mail2-relais-roc.national.inria.fr: domain of
  caml-list-owner@inria.fr designates 128.93.162.160 as
  permitted sender) identity=mailfrom;
  client-ip=128.93.162.160;
  receiver=mail2-relais-roc.national.inria.fr;
  envelope-from="caml-list-owner@inria.fr";
  x-sender="caml-list-owner@inria.fr"; x-conformance=spf_only;
  x-record-type="v=spf1"; x-record-text="v=spf1
  include:mailout.safebrands.com a:basic-mail.safebrands.com
  a:basic-mail01.safebrands.com a:basic-mail02.safebrands.com
  ip4:128.93.142.0/24 ip4:192.134.164.0/24 ip4:128.93.162.160
  ip4:128.93.162.3 ip4:128.93.162.88 ip4:89.107.174.7 mx ~all"
Received-SPF: None (mail2-relais-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@sympa.inria.fr) identity=helo;
  client-ip=128.93.162.160;
  receiver=mail2-relais-roc.national.inria.fr;
  envelope-from="caml-list-owner@inria.fr";
  x-sender="postmaster@sympa.inria.fr"; x-conformance=spf_only
Authentication-Results: mail2-relais-roc.national.inria.fr; spf=Pass smtp.mailfrom=caml-list-owner@inria.fr; spf=None smtp.helo=postmaster@sympa.inria.fr; dkim=hardfail (signature did not verify [final]) header.i=@polytechnique.org
X-IronPort-AV: E=Sophos;i="6.12,222,1728943200"; 
   d="scan'208,217";a="198428567"
Received: from prod-listesu18.inria.fr (HELO sympa.inria.fr) ([128.93.162.160])
  by mail2-relais-roc.national.inria.fr with ESMTP; 10 Dec 2024 14:49:03 +0100
Received: by sympa.inria.fr (Postfix, from userid 20132)
	id 9E247E0D1E; Tue, 10 Dec 2024 14:49:03 +0100 (CET)
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 5137BE00B6
	for <caml-list@sympa.inria.fr>; Tue, 10 Dec 2024 14:48:59 +0100 (CET)
IronPort-SDR: 675846ca_AnNUFup+J8lr054KJZyNQJkBEA3DCL//2gEET59AOD4XlYX
 ABH/N7ML9qHysP0h/L3MAoyikmHDFLZvfmeIg3g==
X-IPAS-Result: =?us-ascii?q?A0HDCwAnRlhngSIeaIFaFoJGAoE/WygZAWNaMwcIRASEV?=
 =?us-ascii?q?lyCc44fgRaQN4p4gVYjgQIDGBYjFAEDAQ0uAQUNAQIEAQEDAQIBhDpGAhY5F?=
 =?us-ascii?q?YoGAh8GAQQyBw4BAgQBAQEBAwIDAQEBAQEBEAEBBQEBAQIBAQIEBgECEAEBP?=
 =?us-ascii?q?QVJhXsNSQEBAQECAQYEgWtRcWEEAwY3AQEBAQEBAQEBAQEBAQEBAQEBAQEBA?=
 =?us-ascii?q?QEBAQEBAQEBAQEBAQEBAQEBAQEBAgwBGRoBDlwBCAoTAQEjDwYYIwMQBAEGA?=
 =?us-ascii?q?wIEDQE1FwESFAaCDxRFgh9FAwQBDAaTJJp6Gjd6gTKBAYIMAQEGgQg+AgELA?=
 =?us-ascii?q?gIDAQ4JJQHaBoFkCYEwGIVrgkkaASpIagKESIQ8Jw+BVUSBFYJyB2+CEi0LF?=
 =?us-ascii?q?wEBAQEYgSQBAQhFCYMlgmmCJxmCZ3+BboEMgW+CD4M0ElSBXB6DPB0dL0aBD?=
 =?us-ascii?q?1mBL4oWgUciAyYzMgFVExcLBwVhgRQDLjcxg2CBAzmCEGlJNwINAjaCJCRYg?=
 =?us-ascii?q?k2DWIE/hGmEWYYmghlOHUADC209NxQbmzEBCTNGAUaBLoEwLw44BgEBKQMQH?=
 =?us-ascii?q?QcaCQUFARMSBAIEHAIuBAQOFQoLCAMCFxEIBAkOAg4FCC0FAwECCwIUGZJAD?=
 =?us-ascii?q?gYoBRgNAnWOTI4Rk1KBCjQHhB2BXQYMiBtpgSSVeoEXgm2BV4suhwCSSCKYW?=
 =?us-ascii?q?SKCNYclDYEYCV+BDx5MlUwGBA8NGYUdgW4LKDxvAQEaAgMJBzMaMEOCMwEBM?=
 =?us-ascii?q?QEJCjwcD4ghhgsXgjqBHoE+gSaBdTuCbYIItFZCNQIBAQE3AgcBCgEBAwmFR?=
 =?us-ascii?q?R0BAYFOgTaCF4VRbl0BAQ?=
IronPort-PHdr: A9a23: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
 idiBiMJiypFR8WHxjNQ24+B
IronPort-Data: A9a23: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
IronPort-HdrOrdr: A9a23:7LFtjaAMXB2UPlPlHemR55DYdb4zR+YMi2TDtnoBKiC9F/bzqy
 nAppomPHPP5Qr5O0tBpTnjAsi9qBrnnPYf3WB7B9iftWfd1FeAHcVL0s/JwjHrGSHyn9Qtt5
 tIQuxZE9O1KVB7iK/BkW2F+jsbsby6zJw=
X-Talos-CUID: 9a23:7WIHk2NkPhu3ae5DCGo2yEo/AsYeeyOA4nHABFXkImtWV+jA
X-Talos-MUID: 9a23:gyuPwwtbndJdFNonCc2ngBNrCPlCs+OVDAMW1qoNpdCnPjVfAmLI
X-IronPort-Anti-Spam-Filtered: true
X-IronPort-AV: E=Sophos;i="6.12,222,1728943200"; 
   d="scan'208,217";a="198428534"
X-MGA-submission: =?us-ascii?q?MDGrriq/Hmi6i4HzuOnHpmWL92Ejc1SFAne3Xz?=
 =?us-ascii?q?uPyRzqvJWOdpf39qxOn8n1oNwS7AjUoJqoZNdNNzLMMJYwM7xcJyZW9s?=
 =?us-ascii?q?oPIOrYUrX+xQsZwXmXx18ccErpkTIYUB7pW9MCXV82Odm/BhGoORlfLj?=
 =?us-ascii?q?NAEJgBJgeiAX2J0q0YEM/XGg=3D=3D?=
Received: from mx1.polytechnique.org ([129.104.30.34])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 10 Dec 2024 14:48:58 +0100
Received: from TM.local (unknown [31.32.212.183])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by ssl.polytechnique.org (Postfix) with ESMTPSA id D458E5648DE;
	Tue, 10 Dec 2024 14:48:56 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/simple; d=polytechnique.org;
	s=svoboda; t=1733838537;
	bh=9EqlMiP1blRIs+zQTniDKyXMehuZ/P6wd/FEy/eIkIo=;
	h=From:To:Subject:Date:Message-ID;
	b=5ae1JPV73wxGMbRWxQH9mPjwSKPvYV0/3VX+hCo3ZqH/nyomwIdlgPKW4U+Ucb8W6
	 ph1uBN2g/cK9c0g3N5DmgR15g4OWGuKmpHjRQtJiZuOgbzetKTABUMb8bc7K4lLbgU
	 gffY/iyrIkiQq+GN6zWDQ3z2u9M/P5tKfl7qq1yc=
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, caml-list@inria.fr
Date: Tue, 10 Dec 2024 14:48:56 +0100
Message-ID: <m2bjxjbqd3.fsf@petitepomme.net>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="=-=-="
X-AV-Checked: ClamAV using ClamSMTP at svoboda.polytechnique.org (Tue Dec 10 14:48:57 2024 +0100 (CET))
X-Spam-Flag: No, tests=bogofilter, spamicity=0.419851, queueID=5E2025648E6
X-Org-Mail: alan.schmitt.1995@polytechnique.org
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News
Reply-To: Alan Schmitt <alan.schmitt@polytechnique.org>
X-Loop: caml-list@inria.fr
X-Sequence: 19227
Errors-To: caml-list-owner@inria.fr
Precedence: list
Precedence: bulk
Sender: caml-list-request@inria.fr
X-no-archive: yes
List-Id: <caml-list.inria.fr>
List-Help: <mailto:sympa_inria@inria.fr?subject=help>
List-Subscribe: <mailto:sympa_inria@inria.fr?subject=subscribe%20caml-list>
List-Unsubscribe: <mailto:sympa_inria@inria.fr?subject=unsubscribe%20caml-list>
List-Post: <mailto:caml-list@inria.fr>
List-Owner: <mailto:caml-list-request@inria.fr>
List-Archive: <https://sympa.inria.fr/sympa/arc/caml-list>
Archived-At: <https://sympa.inria.fr/sympa/arcsearch_id/caml-list/2024-12/m2bjxjbqd3.fsf%40petitepomme.net>

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: base64

SGVsbG8NCg0KSGVyZSBpcyB0aGUgbGF0ZXN0IE9DYW1sIFdlZWtseSBOZXdzLCBmb3IgdGhlIHdl
ZWsgb2YgRGVjZW1iZXIgMDMgdG8gMTAsDQoyMDI0Lg0KDQpUYWJsZSBvZiBDb250ZW50cw0K4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoNClJlbGVh
c2Ugb2YgY3BwbyAxLjguMA0KTmV3IHJlbGVhc2VzIG9mIE1lcmxpbiBhbmQgT0NhbWwtTFNQDQpO
ZXcgcmVsZWFzZSBvZiBiYWJ5DQpSZWxlYXNlIG9mIFNhdHVybiAxLjANCkR1bmUgZGV2IG1lZXRp
bmcNCkR1bmUgMy4xNw0KU3BlYyBhbmQgaW50ZXJmYWNlIHRvIGRlY2xhcmUgZGVwZW5kZW5jaWVz
IGluIGFuIE9DYW1sIHNjcmlwdA0KT3RoZXIgT0NhbWwgTmV3cw0KT2xkIENXTg0KDQoNClJlbGVh
c2Ugb2YgY3BwbyAxLjguMA0K4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQDQoNCiAgQXJjaGl2ZToNCiAgPGh0dHBzOi8vZGlzY3Vz
cy5vY2FtbC5vcmcvdC9hbm4tcmVsZWFzZS1vZi1jcHBvLTEtOC0wLzE1NzQ5LzE+DQoNCg0KRnJh
bsOnb2lzIFBvdHRpZXIgYW5ub3VuY2VkDQrilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIANCg0KICBJIGFt
IHBsZWFzZWQgdG8gYW5ub3VuY2UgYSBuZXcgcmVsZWFzZSBvZiBgY3BwbycgKDEuOC4wKSB3aXRo
IG9uZSBuZXcNCiAgZmVhdHVyZSBhbmQgb25lIGJ1ZyBmaXg6DQoNCiAg4oGDIEEgc2NvcGUsIGRl
bGltaXRlZCBieSBgI3Njb3BlIC4uLiAjZW5kc2NvcGUnLCBsaW1pdHMgdGhlIGVmZmVjdCBvZg0K
ICAgIGAjZGVmaW5lJywgYCNkZWYgLi4uICNlbmRkZWYnLCBhbmQgYCN1bmRlZicuDQogIOKBgyBU
aGUgY29tbWFuZCBgY3BwbyAtdmVyc2lvbicsIHdoaWNoIHVzZWQgdG8gcHJpbnQgYSBibGFuayBs
aW5lLCBoYXMNCiAgICBiZWVuIGZpeGVkLg0KDQogIEZvciBtb3JlIGRldGFpbHMsIHBsZWFzZSBz
ZWUgdGhlIFtkb2N1bWVudGF0aW9uXS4NCg0KDQpbZG9jdW1lbnRhdGlvbl0gPGh0dHBzOi8vZ2l0
aHViLmNvbS9vY2FtbC1jb21tdW5pdHkvY3Bwby8+DQoNCg0KTmV3IHJlbGVhc2VzIG9mIE1lcmxp
biBhbmQgT0NhbWwtTFNQDQrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZDilZDilZDilZANCg0KICBBcmNoaXZlOg0KICA8aHR0cHM6Ly9kaXNjdXNzLm9jYW1sLm9yZy90
L2Fubi1uZXctcmVsZWFzZXMtb2YtbWVybGluLWFuZC1vY2FtbC1sc3AvMTU3NTIvMT4NCg0KDQp2
ZHMgYW5ub3VuY2VkDQrilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIANCg0K
ICBJIGFtIHBsZWFzZWQgdG8gYW5ub3VuY2UgbmV3IHJlbGVhc2VzIG9mIE1lcmxpbiAoYDUuMy01
MDInIGFuZA0KICBgNC4xOC00MTQnKSBhbmQgT0NhbWwtTFNQIChgMS4yMC4xJyBhbmQgYDEuMjAu
MS00LjE0JykuDQoNCiAgVGhlIE1lcmxpbiByZWxlYXNlcyBidW5kbGUgYSBoYW5kZnVsIG9mIGZp
eGVzIHdoaWxlIHRoZSBMU1AgcmVsZWFzZXMNCiAgZm9jdXMgb24gYWRkaW5nIG1vcmUgY3VzdG9t
IHF1ZXJpZXMuIFRoZXNlIGN1c3RvbSBxdWVyaWVzIHdpbGwgZW5hYmxlDQogIHRhaWxvcmVkIExT
UCBjbGllbnRzIHRvIHByb3ZpZGUgdGhlIHNhbWUgcmljaCBPQ2FtbCBlZGl0aW5nIGZlYXR1cmVz
DQogIGFzIHRoZSBvbmUgcHJvdmlkZWQgYnkgdGhlIG9yaWdpbmFsIE1lcmxpbiBtb2RlcyBmb3Ig
RW1hY3MgYW5kIFZpbS4NCg0KICBMYXRlc3QgcmVsZWFzZXMgb2YgYHZzY29kZS1vY2FtbC1wbGF0
Zm9ybScgYWxyZWFkeSBwcm92aWRlIHR3byBuZXcNCiAgY29tbWFuZHM6IGBDb25zdHJ1Y3QnIGFu
ZCBgSnVtcCcgdGhhdCByZXNwZWN0aXZlbHkgcHJvdmlkZSBhIGJldHRlciBVSQ0KICB0byBmaWxs
IHR5cGVkIGhvbGVzIHdpdGggdmFsdWVzIGFuZCBqdW1wIHRvIHNwZWNpZmljIHBhcmVudA0KICBu
b2Rlcy4gU2VhcmNoIGJ5IHR5cGUvcG9sYXJpdHkgYW5kIGEgY29tbWFuZCB0byBnZXQgdGhlIHR5
cGUgb2YNCiAgZ3Jvd2luZyBhbmQgc2hyaW5raW5nIHNlbGVjdGlvbnMgd2lsbCBhbHNvIGJlIGF2
YWlsYWJsZSBpbiB0aGUgZnV0dXJlLg0KDQogIDxodHRwczovL2dsb2JhbC5kaXNjb3Vyc2UtY2Ru
LmNvbS9mbGV4MDIwL3VwbG9hZHMvb2NhbWwvb3JpZ2luYWwvMlgvYy9jMDdkZTMxMzBjOTJjYjE2
MDEyMTU1MzFjNzVlY2MwNTQ1YTk3YjRkLmdpZj4NCg0KDQpNZXJsaW4gY2hhbmdlbG9nDQrilYzi
lYzilYzilYzilYzilYzilYzilYzilYzilYzilYzilYzilYzilYzilYzilYwNCg0K4peKIG1lcmxp
biA1LjMNCg0KICDigYMgbWVybGluIGJpbmFyeQ0KICAgIOKAoiBSZXNwZWN0IHRoZSBgRVhDTFVE
RV9RVUVSWV9ESVInIGNvbmZpZ3VyYXRpb24gZGlyZWN0aXZlIHdoZW4NCiAgICAgIGxvb2tpbmcg
Zm9yIGNtdCBmaWxlcyAoIzE4NTQpDQogICAg4oCiIEZpeCBvY2N1cnJlbmNlcyBidWcgaW4gd2hp
Y2ggcmVsYXRpdmUgcGF0aHMgaW4gaW5kZXggZmlsZXMgYXJlDQogICAgICByZXNvbHZlZCBhZ2Fp
bnN0IHRoZSBQV0QgcmF0aGVyIHRoYW4gdGhlIFNPVVJDRV9ST09UICgjMTg1NSkNCiAgICDigKIg
Rml4IGV4Y2VwdGlvbiBpbiBwb2xhcml0eSBzZWFyY2ggKCMxODU4IGZpeGVzICMxMTEzKQ0KICAg
IOKAoiBGaXgganVtcCB0byBgZnVuJyB0YXJnZXRzIG5vdCB3b3JraW5nICgjMTg2MywgZml4ZXMg
IzE4NjIpDQogICAg4oCiIEZpeCB0eXBlLWVuY2xvc2luZyByZXN1bHRzIGluc3RhYmlsaXR5LiBU
aGlzIHJldmVydHMgc29tZSBvdmVybHkNCiAgICAgIGFnZ3Jlc3NpdmUgZGVkdXBsaWNhdGlvbiB0
aGF0IHNob3VsZCBiZSBkb25lIG9uIHRoZSBjbGllbnQNCiAgICAgIHNpZGUuICgjMTg2NCkNCiAg
ICDigKIgRml4IG9jY3VycmVuY2VzIG5vdCB3b3JraW5nIHdoZW4gdGhlIGRlZmluaXRpb24gY29t
ZXMgZnJvbSBhDQogICAgICBoaWRkZW4gc291cmNlIGZpbGUgKCMxODY1KQ0KDQoNCk9DYW1sLUxT
UCBjaGFuZ2Vsb2cNCuKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKV
jOKVjOKVjOKVjOKVjA0KDQril4ogMS4yMC4xDQoNCiAg4peKIEZlYXR1cmVzDQoNCiAgICDigKIg
QWRkIGN1c3RvbQ0KICAgICAgW35vY2FtbGxzcC90eXBlU2VhcmNofl0oL29jYW1sLWxzcC1zZXJ2
ZXIvZG9jcy9vY2FtbGxzcC90eXBlU2VhcmNoLXNwZWMubWQpDQogICAgICByZXF1ZXN0ICgjMTM2
OSkNCiAgICDigKIgTWFrZSBNZXJsaW5KdW1wIGNvZGUgYWN0aW9uIGNvbmZpZ3VyYWJsZSAoIzEz
NzYpDQogICAg4oCiIEFkZCBjdXN0b20NCiAgICAgIFt+b2NhbWxsc3AvanVtcH5dKC9vY2FtbC1s
c3Atc2VydmVyL2RvY3Mvb2NhbWxsc3AvbWVybGluSnVtcC1zcGVjLm1kKQ0KICAgICAgcmVxdWVz
dCAoIzEzNzQpDQoNCg0KICDil4ogRml4ZXMNCg0KICAgIOKAoiBGaXggZmQgbGVhayBpbiBydW5u
aW5nIGV4dGVybmFsIHByb2Nlc3NlcyBmb3IgcHJlcHJvY2Vzc2luZw0KICAgICAgKCMxMzQ5KQ0K
ICAgIOKAoiBGaXggcHJlZml4IHBhcnNpbmcgZm9yIGNvbXBsZXRpb24gb2Ygb2JqZWN0IG1ldGhv
ZHMgKCMxMzYzLCBmaXhlcw0KICAgICAgIzEzNTgpDQogICAg4oCiIFJlbW92ZSBzb21lIGR1cGxp
Y2F0ZXMgaW4gdGhlIGBzZWxlY3Rpb25SYW5nZScgYW5zd2VycyAoIzEzNjgpDQogICAg4oCiIERl
YWN0aXZhdGUgdGhlIGBqdW1wJyBjb2RlIGFjdGlvbnMgYnkgZGVmYXVsdC4gQ2xpZW50cyBjYW4g
ZW5hYmxlDQogICAgICB0aGVtIHdpdGggdGhlIGBtZXJsaW5KdW1wQ29kZUFjdGlvbnMnIGNvbmZp
Z3VyYXRpb24NCiAgICAgIG9wdGlvbi4gQWx0ZXJuYXRpdmVseSBhIGN1c3RvbSByZXF1ZXN0IGlz
IHByb3ZpZGVkIGZvciBhZCBob2MgdXNlDQogICAgICBvZiB0aGUgZmVhdHVyZS4gKCMxNDExKQ0K
DQoNCk5ldyByZWxlYXNlIG9mIGJhYnkNCuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkA0KDQogIEFyY2hpdmU6IDxodHRwczovL2Rpc2N1c3Mu
b2NhbWwub3JnL3QvbmV3LXJlbGVhc2Utb2YtYmFieS8xNTc1NC8xPg0KDQoNCkZyYW7Dp29pcyBQ
b3R0aWVyIGFubm91bmNlZA0K4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoNCiAgSXQgaXMgbXkgcGxl
YXN1cmUgdG8gYW5ub3VuY2UgdGhlIHNlY29uZCByZWxlYXNlIG9mIGBiYWJ5Jy4NCg0KICDilIzi
lIDilIDilIDilIANCiAg4pSCIG9wYW0gdXBkYXRlDQogIOKUgiBvcGFtIGluc3RhbGwgYmFieS4y
MDI0MTIwNA0KICDilJTilIDilIDilIDilIANCg0KICBgYmFieScgaXMgYW4gT0NhbWwgbGlicmFy
eSB0aGF0IG9mZmVycyBwZXJzaXN0ZW50IHNldHMgYW5kIG1hcHMgYmFzZWQNCiAgb24gYmFsYW5j
ZWQgYmluYXJ5IHNlYXJjaCB0cmVlcy4gSXQgb2ZmZXJzIHJlcGxhY2VtZW50cyBmb3IgT0NhbWwn
cw0KICBgU2V0JyBhbmQgYE1hcCcgbW9kdWxlcy4NCg0KICBIZWlnaHQtYmFsYW5jZWQgYW5kIHdl
aWdodC1iYWxhbmNlZCBiaW5hcnkgc2VhcmNoIHRyZWVzIGFyZSBvZmZlcmVkDQogIG91dCBvZiB0
aGUgYm94LiBGdXJ0aGVybW9yZSwgdG8gYWR2YW5jZWQgdXNlcnMsIHRoZSBsaWJyYXJ5IG9mZmVy
cyBhDQogIGxpZ2h0d2VpZ2h0IHdheSBvZiBpbXBsZW1lbnRpbmcgb3RoZXIgYmFsYW5jaW5nIHN0
cmF0ZWdpZXMuDQoNCiAgW0RvY3VtZW50YXRpb25dIGlzIGF2YWlsYWJsZSBvbmxpbmUuDQoNCiAg
VGhlIGNoYW5nZXMgaW4gdGhpcyByZWxlYXNlIGFyZSBhcyBmb2xsb3dzOg0KDQogIOKAoiBUaGUg
bGlicmFyeSBub3cgb2ZmZXJzIGJvdGggc2V0cyBhbmQgbWFwcy4gVGhlIG1vZHVsZXMgYEJhYnku
SC5TZXQnDQogICAgYW5kIGBCYWJ5LlcuU2V0JyBjb250aW51ZSB0byBleGlzdCwgYW5kIGFyZSBj
b21wYXRpYmxlIHdpdGggT0NhbWwncw0KICAgIGBTZXQnIGxpYnJhcnkuIFRoZSBtb2R1bGVzIGBC
YWJ5LkguTWFwJyBhbmQgYEJhYnkuVy5NYXAnIGFwcGVhciwgYW5kDQogICAgYXJlIGNvbXBhdGli
bGUgd2l0aCBPQ2FtbCdzIGBNYXAnIGxpYnJhcnkuIEZ1cnRoZXJtb3JlLCB0aGUgZnVuY3RvcnMN
CiAgICBgQmFieS5ILk1ha2UnIGFuZCBgQmFieS5XLk1ha2UnIGFwcGVhci4gVGhlc2UgZnVuY3Rv
cnMgcHJvZHVjZSBhDQogICAgbW9kdWxlIHRoYXQgY29udGFpbnMgc2V0cywgbWFwcywgYW5kIHR3
byBjb252ZXJzaW9uIGZ1bmN0aW9ucw0KICAgIGJldHdlZW4gc2V0cyBhbmQgbWFwcywgbmFtZWx5
IGBkb21haW4nIGFuZCBgbGlmdCcuDQogIOKAoiBEb2N1bWVudGF0aW9uOiBpbiB0aGUgc2lnbmF0
dXJlIGBPcmRlcmVkVHlwZScsIGNsYXJpZnkgdGhlDQogICAgc3BlY2lmaWNhdGlvbiBvZiB0aGUg
ZnVuY3Rpb24gYGNvbXBhcmUnOyB0aGlzIGZ1bmN0aW9uIGRlY2lkZXMgYQ0KICAgIHRvdGFsIHBy
ZW9yZGVyIGDiiaQnLg0KICDigKIgRG9jdW1lbnRhdGlvbjogaW4gdGhlIHByZWFtYmxlLCBjbGFy
aWZ5IHRoYXQsIG1vc3Qgb2YgdGhlIHRpbWUsIHdlDQogICAgYXNzdW1lIHRoYXQgYOKJpCcgaXMg
YSB0b3RhbCBvcmRlcjsgaWYgYW4gb3BlcmF0aW9uIG11c3QgYmUgdW5kZXJzdG9vZA0KICAgIGlu
IHRoZSBtb3JlIGdlbmVyYWwgY2FzZSB3aGVyZSBg4omkJyBpcyBhIHRvdGFsIHByZW9yZGVyLCB0
aGVuIHRoaXMgaXMNCiAgICBleHBsaWNpdGx5IGluZGljYXRlZC4NCiAg4oCiIERvY3VtZW50YXRp
b246IHVwZGF0ZSB0aGUgZG9jdW1lbnRhdGlvbiBvZiBgZmluZCcgYW5kIGBmaW5kX29wdCcgaW4N
CiAgICBhY2NvcmRhbmNlIHdpdGggdGhlIHByZXZpb3VzIHBvaW50Lg0KICDigKIgQSBudW1iZXIg
b2YgaW5jb21wYXRpYmxlIGNoYW5nZXMgaGF2ZSBiZWVuIG1hZGU7IHNlZSBbdGhlIGNoYW5nZQ0K
ICAgIGxvZ10gZm9yIGRldGFpbHMuDQoNCg0KW0RvY3VtZW50YXRpb25dIDxodHRwczovL2NhbWJp
dW0uaW5yaWEuZnIvfmZwb3R0aWVyL2JhYnkvZG9jL2JhYnkvPg0KDQpbdGhlIGNoYW5nZSBsb2dd
IDxodHRwczovL2dpdGh1Yi5jb20vZnBvdHRpZXIvYmFieS9ibG9iL21haW4vQ0hBTkdFUy5tZD4N
Cg0KDQpSZWxlYXNlIG9mIFNhdHVybiAxLjANCuKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKV
kOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkOKVkA0KDQogIEFyY2hpdmU6DQogIDxodHRw
czovL2Rpc2N1c3Mub2NhbWwub3JnL3QvYW5uLXJlbGVhc2Utb2Ytc2F0dXJuLTEtMC8xNTc2My8x
Pg0KDQoNCkNhcmluZSBNb3JlbCBhbm5vdW5jZWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIEkgYW0gdGhyaWxs
ZWQgdG8gYW5ub3VuY2UgdGhlIHJlbGVhc2Ugb2YgW1NhdHVybl0gMS4wIQ0KDQogIFNhdHVybiBp
cyBhIGNvbGxlY3Rpb24gb2YgY29uY3VycmVudC1zYWZlIGRhdGEgc3RydWN0dXJlcyBkZXNpZ25l
ZCBmb3INCiAgT0NhbWwgNS4gVGhlc2Ugc3RydWN0dXJlcyBoYXZlIGJlZW46DQogIOKAoiB0aG9y
b3VnaGx5IHRlc3RlZCB3aXRoIGFtYXppbmcgdG9vbHMgbGlrZSBbU1RNXSAoc2VlIHRoaXMgW2Js
b2cNCiAgICBwb3N0XSkgYW5kIFtEU2NoZWNrXSwNCiAg4oCiIGJlbmNobWFya2VkIGZvciBwZXJm
b3JtYW5jZSwNCiAg4oCiIG9wdGltaXplZCBmb3IgZWZmaWNpZW5jeSwNCiAg4oCiIGFuZCBldmVu
IHZlcmlmaWVkIGluIHNvbWUgY2FzZXMhDQoNCiAgSWYgeW91J3JlIGN1cmlvdXMgYWJvdXQgdGhl
IG1vdGl2YXRpb24gYmVoaW5kIFNhdHVybiBhbmQgdGhlDQogIGNoYWxsZW5nZXMgaXQgYWRkcmVz
c2VzLCB5b3UgY2FuIHJlYWQgbW9yZSBbaGVyZV0uDQoNCg0KW1NhdHVybl0gPGh0dHBzOi8vZ2l0
aHViLmNvbS9vY2FtbC1tdWx0aWNvcmUvc2F0dXJuPg0KDQpbU1RNXSA8aHR0cHM6Ly9naXRodWIu
Y29tL29jYW1sLW11bHRpY29yZS9tdWx0aWNvcmV0ZXN0cz4NCg0KW2Jsb2cgcG9zdF0NCjxodHRw
czovL3RhcmlkZXMuY29tL2Jsb2cvMjAyNC0wNC0yNC11bmRlci10aGUtaG9vZC1kZXZlbG9waW5n
LW11bHRpY29yZS1wcm9wZXJ0eS1iYXNlZC10ZXN0cy1mb3Itb2NhbWwtNS8+DQoNCltEU2NoZWNr
XSA8aHR0cHM6Ly9naXRodWIuY29tL29jYW1sLW11bHRpY29yZS9kc2NoZWNrPg0KDQpbaGVyZV0N
CjxodHRwczovL2dpdGh1Yi5jb20vb2NhbWwtbXVsdGljb3JlL3NhdHVybi9ibG9iL21haW4vZG9j
L21vdGl2YXRpb24ubWQ+DQoNCldoYXQgQ2FuIFlvdSBEbyB3aXRoIFNhdHVybj8NCuKVjOKVjOKV
jOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKV
jOKVjOKVjOKVjOKVjOKVjOKVjA0KDQogIFNhdHVybiBwcm92aWRlcyBhIHZhcmlldHkgb2YgZGF0
YSBzdHJ1Y3R1cmVzLCBpbmNsdWRpbmcgcXVldWVzLA0KICBzdGFja3MsIGhhc2ggdGFibGVzLCBh
bmQgbW9yZS4gQWxsIG9mIHRoZXNlIHN0cnVjdHVyZXMgYXJlDQogICoqbG9jay1mcmVlKiosICoq
bGluZWFyaXphYmxlKiosIGFuZCBzcGVjaWZpY2FsbHkgZGVzaWduZWQgdG8gdGFrZQ0KICBmdWxs
IGFkdmFudGFnZSBvZiBPQ2FtbCA14oCZcyBtdWx0aWNvcmUgY2FwYWJpbGl0aWVzLg0KDQoNCuKX
iiBQb3J0YWJsZSBEYXRhIFN0cnVjdHVyZXMNCg0KICBMb2NrLWZyZWVkb20gaXMgYSBwcm9ncmVz
cyBwcm9wZXJ0eSB0aGF0IGd1YXJhbnRlZXMgc3lzdGVtLXdpZGUNCiAgcHJvZ3Jlc3MuIFRoaXMg
aXMgYSBwb3dlcmZ1bCBhbmQgZGVzaXJhYmxlIGZlYXR1cmUsIHRob3VnaCBpdCBjb21lcyBhdA0K
ICB0aGUgY29zdCBvZiBzb21lIG92ZXJoZWFkLiBIb3dldmVyLCBpdCBvZmZlcnMgYSBzaWduaWZp
Y2FudCBhZHZhbnRhZ2U6DQogIGxvY2stZnJlZSBkYXRhIHN0cnVjdHVyZXMgYXZvaWQgdGhlIG5l
ZWQgZm9yIHNjaGVkdWxlci1zcGVjaWZpYw0KICBibG9ja2luZyBtZWNoYW5pc21zLCBtYWtpbmcg
dGhlbSBjb21wYXRpYmxlIHdpdGggYW55IHNjaGVkdWxlciwgc3VjaA0KICBhcyBbRWlvXSBvciBb
RG9tYWluc2xpYl0uDQoNCg0KICBbRWlvXSA8aHR0cHM6Ly9naXRodWIuY29tL29jYW1sLW11bHRp
Y29yZS9laW8+DQoNCiAgW0RvbWFpbnNsaWJdIDxodHRwczovL2dpdGh1Yi5jb20vb2NhbWwtbXVs
dGljb3JlL2RvbWFpbnNsaWI+DQoNCg0K4peKIFJlc3RyaWN0aW9ucw0KDQogIFNhdHVybuKAmXMg
ZGF0YSBzdHJ1Y3R1cmVzIGFyZSBub3QgY29tcG9zYWJsZSwgbWVhbmluZyB5b3UgY2Fubm90DQog
IGNvbWJpbmUgdGhlbSAoZS5nLiwgdXNlIGBTYXR1cm4uUXVldWUnIGluc2lkZSBgU2F0dXJuLkh0
YmwnKSB3aGlsZQ0KICBwcmVzZXJ2aW5nIHByb3BlcnRpZXMgbGlrZSBsb2NrLWZyZWVkb20gYW5k
IGxpbmVhcml6YWJpbGl0eS4NCg0KICBUaGV5IGFyZSBhbHNvIG5vdCBleHRlbnNpYmxlIG91dHNp
ZGUgb2YgU2F0dXJuIHdpdGhvdXQgbG9zaW5nIHRoZXNlDQogIHByb3BlcnRpZXMuIEZvciBpbnN0
YW5jZSwgYFNhdHVybi5RdWV1ZScgZG9lcyBub3QgaW5jbHVkZSBhIGBsZW5ndGgnDQogIGZ1bmN0
aW9uIGJlY2F1c2UgaW1wbGVtZW50aW5nIG9uZSB3b3VsZCBpbnRyb2R1Y2Ugc2lnbmlmaWNhbnQg
b3ZlcmhlYWQNCiAgKHNlZSBgU2F0dXJuLkJvdW5kZWRfcXVldWUnIGZvciBhbiBleGFtcGxlIG9m
IHRoaXMNCiAgdHJhZGVvZmYpLiBBdHRlbXB0aW5nIHRvIGFkZCB0aGlzIGZ1bmN0aW9uYWxpdHks
IHN1Y2ggYXMgYnkgd3JhcHBpbmcNCiAgdGhlIHF1ZXVlOg0KDQogIOKUjOKUgOKUgOKUgOKUgA0K
ICDilIIgdHlwZSAnYSB0ID0ge3NpemU6IGludCBBdG9taWMudDsgcXVldWUgOiAnYSBTYXR1cm4u
UXVldWUudH0NCiAg4pSU4pSA4pSA4pSA4pSADQoNCiAgd291bGQgcmVzdWx0IGluIGEgc3RydWN0
dXJlIHRoYXQgZWl0aGVyIGxvc2VzIGxvY2stZnJlZWRvbSBvciBpcyBubw0KICBsb25nZXIgbGlu
ZWFyaXphYmxlLg0KDQogIElmIHlvdSBuZWVkIGNvbXBvc2FibGUgbG9jay1mcmVlIGRhdGEgc3Ry
dWN0dXJlcywgY29uc2lkZXIgZXhwbG9yaW5nDQogIFtrY2FzX2RhdGFdLg0KDQoNCiAgW2tjYXNf
ZGF0YV0NCiAgPGh0dHBzOi8vb2NhbWwtbXVsdGljb3JlLmdpdGh1Yi5pby9rY2FzL2RvYy9rY2Fz
X2RhdGEvS2Nhc19kYXRhL2luZGV4Lmh0bWw+DQoNCg0KQ2FsbCB0byBBY3Rpb24NCuKVjOKVjOKV
jOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjA0KDQogIOKAoiAqVHJ5IEl0IE91dCo6
IEdpdmUgU2F0dXJuIGEgdHJ5IGluIHlvdXIgcHJvamVjdHMgYW5kIGxldCB1cyBrbm93IGhvdw0K
ICAgICBpdCB3b3JrcyBmb3IgeW91LiBJZiB5b3UgZW5jb3VudGVyIGFueSBidWdzIG9yIGlzc3Vl
cywgcGxlYXNlDQogICAgIHJlcG9ydCB0aGVtIG9uIG91ciBbR2l0SHViIHJlcG9zaXRvcnldLg0K
ICDigKIgKlNoYXJlIFlvdXIgVXNlIENhc2UqOiBBcmUgeW91IGFscmVhZHkgdXNpbmcgU2F0dXJu
PyBMZXQgdXMga25vdyBpbg0KICAgICB0aGUgY29tbWVudHMgd2hhdCB5b3UncmUgYnVpbGRpbmcg
d2l0aCBpdCENCiAg4oCiICpDb250cmlidXRlKjogV2XigJlkIGxvdmUgdG8gaGF2ZSBtb3JlIGNv
bnRyaWJ1dG9ycy4gV2hldGhlciBpdOKAmXMNCiAgICAgaW1wbGVtZW50aW5nIG5ldyBmZWF0dXJl
cywgaW1wcm92aW5nIGRvY3VtZW50YXRpb24sIG9yIHN1Z2dlc3RpbmcNCiAgICAgZW5oYW5jZW1l
bnRzLCB5b3VyIGNvbnRyaWJ1dGlvbnMgYXJlIHdlbGNvbWUhDQogIOKAoiAqSGVscCBTaGFwZSB0
aGUgRnV0dXJlKjogV2hhdCB3b3VsZCB5b3UgbGlrZSB0byBzZWUgaW4gU2F0dXJuPyBJcw0KICAg
ICB0aGVyZSBhIG1pc3NpbmcgZGF0YSBzdHJ1Y3R1cmUgeW91IG5lZWQ/IFNoYXJlIHlvdXIgdGhv
dWdodHMgdG8NCiAgICAgaGVscCB1cyBidWlsZCBhIHJvYWRtYXAgZm9yIGZ1dHVyZSBkZXZlbG9w
bWVudC4NCg0KICAqVGhhbmsgeW91IGZvciB5b3VyIHN1cHBvcnQhKg0KDQoNCltHaXRIdWIgcmVw
b3NpdG9yeV0gPGh0dHBzOi8vZ2l0aHViLmNvbS9vY2FtbC1tdWx0aWNvcmUvc2F0dXJuPg0KDQoN
ClRhbGtzIGFuZCBSZXNvdXJjZXMNCuKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKV
jOKVjOKVjOKVjOKVjOKVjOKVjOKVjA0KDQogIElmIHlvdSB3YW50IHRvIGxlYXJuIG1vcmUgYWJv
dXQgU2F0dXJuLCBJIGdhdmUgYSB0YWxrIGF0IHRoZSAyMDI0DQogIE9DYW1sIFdvcmtzaG9w4oCU
Y2hlY2sgb3V0IHRoZSBzaG9ydCBbcGFwZXJdIGFuZCB0aGUgW3RhbGtdLg0KDQogIFRvIGRpdmUg
ZGVlcGVyIGludG8gY29uY3VycmVudC1zYWZlIGRhdGEgc3RydWN0dXJlcywgSSBoaWdobHkNCiAg
cmVjb21tZW5kIGhhdmluZyBhIGxvb2sgYXQgW1RoZSBBcnQgb2YgTXVsdGlwcm9jZXNzb3IgUHJv
Z3JhbW1pbmddLA0KICB3aGljaCBleHBsb3JlcyB0aGUgZGlmZmVyZW5jZXMgaW4gZGVzaWduIGJl
dHdlZW4gbG9jay1iYXNlZCBhbmQNCiAgbG9jay1mcmVlIGRhdGEgc3RydWN0dXJlcy4NCg0KDQpb
cGFwZXJdDQo8aHR0cHM6Ly9pY2ZwMjQuc2lncGxhbi5vcmcvZGV0YWlscy9vY2FtbC0yMDI0LXBh
cGVycy8xMi9TYXR1cm4tYS1saWJyYXJ5LW9mLXZlcmlmaWVkLWNvbmN1cnJlbnQtZGF0YS1zdHJ1
Y3R1cmVzLWZvci1PQ2FtbC01Pg0KDQpbdGFsa10gPGh0dHBzOi8veW91dHUuYmUvT3VRcWJsQ3hK
Mlk/dD0yNDM5OD4NCg0KW1RoZSBBcnQgb2YgTXVsdGlwcm9jZXNzb3IgUHJvZ3JhbW1pbmddDQo8
aHR0cHM6Ly93d3cucmVzZWFyY2hnYXRlLm5ldC9wdWJsaWNhdGlvbi8yMTM4NzY2NTNfVGhlX0Fy
dF9vZl9NdWx0aXByb2Nlc3Nvcl9Qcm9ncmFtbWluZz4NCg0KDQpDb21tZXJjaWFsIFN1cHBvcnQN
CuKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjOKVjA0K
DQogIElmIHlvdeKAmXJlIGludGVyZXN0ZWQgaW4gaW5jb3Jwb3JhdGluZyBTYXR1cm4gaW50byB5
b3VyIGNvbW1lcmNpYWwNCiAgYXBwbGljYXRpb25zLCBUYXJpZGVzIG9mZmVycyBwcm9mZXNzaW9u
YWwgZGV2ZWxvcG1lbnQgYW5kIHN1cHBvcnQNCiAgc2VydmljZXMuIEZlZWwgZnJlZSB0byBjb250
YWN0IHVzIGZvciBtb3JlIGRldGFpbHMuDQoNCg0KRHVuZSBkZXYgbWVldGluZw0K4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQDQoNCiAgQXJjaGl2ZTogPGh0
dHBzOi8vZGlzY3Vzcy5vY2FtbC5vcmcvdC9hbm4tZHVuZS1kZXYtbWVldGluZy8xNDk5NC8xOD4N
Cg0KDQpFdGllbm5lIE1hcmFpcyBhbm5vdW5jZWQNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIEhpIER1
bmUgZW50aHVzaWFzdHMhIDpzbWlsZToNCg0KICBXZSB3aWxsIGhvbGQgb3VyIHJlZ3VsYXIgRHVu
ZSBkZXYgbWVldGluZyBvbiAqV2VkbmVzZGF5LCBEZWNlbWJlciwNCiAgMTF0aCBhdCA5OjAwKiBD
RVQuIEFzIHVzdWFsLCB0aGUgc2Vzc2lvbiB3aWxsIGJlIG9uZSBob3VyIGxvbmcuDQoNCiAgV2hl
dGhlciB5b3UgYXJlIGEgbWFpbnRhaW5lciwgYSByZWd1bGFyIGNvbnRyaWJ1dG9yLCBhIG5ldyBq
b2luZXIgb3INCiAganVzdCBjdXJpb3VzLCB5b3UgYXJlIHdlbGNvbWUgdG8gam9pbjogdGhlc2Ug
ZGlzY3Vzc2lvbnMgYXJlIG9wZW5lZCENCiAgVGhlIGdvYWwgb2YgdGhlc2UgbWVldGluZ3MgaXMg
dG8gcHJvdmlkZSBhIHBsYWNlIHRvIGRpc2N1c3MgdGhlDQogIG9uZ29pbmcgd29yayB0b2dldGhl
ciBhbmQgc3luY2hyb25pc2UgYmV0d2VlbiB0aGUgRHVuZSBkZXZlbG9wZXJzICENCiAgOmNhbWVs
Og0KDQoNCjpjYWxlbmRhcjogQWdlbmRhDQrilYzilYzilYzilYzilYzilYzilYzilYzilYzilYzi
lYzilYzilYzilYzilYzilYzilYwNCg0KICBUaGUgYWdlbmRhIGlzIGF2YWlsYWJsZSBvbiB0aGVb
IG1lZXRpbmcgZGVkaWNhdGVkIHBhZ2VdLiBGZWVsIGZyZWUgdG8NCiAgYXNrIGlmIHlvdSB3YW50
IHRvIGFkZCBtb3JlIGl0ZW1zIGluIGl0Lg0KDQoNClsgbWVldGluZyBkZWRpY2F0ZWQgcGFnZV0N
CjxodHRwczovL2dpdGh1Yi5jb20vb2NhbWwvZHVuZS93aWtpL2Rldi1tZWV0aW5nLTIwMjQtMTIt
MTE+DQoNCg0KOmNvbXB1dGVyOiBMaW5rcw0K4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM
4pWM4pWM4pWM4pWM4pWM4pWMDQoNCiAg4oCiIE1lZXRpbmcgbGluazpbIHpvb21dDQogIOKAoiBD
YWxlbmRhciBldmVudDpbIGdvb2dsZSBjYWxlbmRhcl0NCiAg4oCiIFdpa2kgd2l0aCBpbmZvcm1h
dGlvbiBhbmQgcHJldmlvdXMgbm90ZXM6WyBHaXRIdWIgV2lraV0NCg0KDQpbIHpvb21dDQo8aHR0
cHM6Ly91czA2d2ViLnpvb20udXMvai84NTA5Njg3Nzc3Nj9wd2Q9Y1dOaFUxZEhRMVpOU2padU9V
WkNRMGgyYnk5VWR6MDk+DQoNClsgZ29vZ2xlIGNhbGVuZGFyXQ0KPGh0dHBzOi8vY2FsZW5kYXIu
Z29vZ2xlLmNvbS9jYWxlbmRhci9lbWJlZD9zcmM9Y181Y2Q2OThkZjY3ODRlMzg1YjFjZGNkYzFk
YmNhMThjMDYxZmFhOTY5NTlhMDQ3ODE1NjZkMzA0ZGM5ZWM3MzE5JTQwZ3JvdXAuY2FsZW5kYXIu
Z29vZ2xlLmNvbT4NCg0KWyBHaXRIdWIgV2lraV0gPGh0dHBzOi8vZ2l0aHViLmNvbS9vY2FtbC9k
dW5lL3dpa2kjZGV2LW1lZXRpbmdzPg0KDQoNCkR1bmUgMy4xNw0K4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQDQoNCiAgQXJjaGl2ZTogPGh0dHBzOi8vZGlzY3Vzcy5vY2FtbC5vcmcvdC9hbm4t
ZHVuZS0zLTE3LzE1NzcwLzE+DQoNCg0KRXRpZW5uZSBNYXJhaXMgYW5ub3VuY2VkDQrilIDilIDi
lIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDilIDi
lIDilIDilIANCg0KICBUaGUgRHVuZSB0ZWFtIGlzIGhhcHB5IHRvIGFubm91bmNlIHRoZSByZWxl
YXNlIG9mIER1bmUgYDMuMTcuMCchDQogIDp0YWRhOg0KDQogIEFtb25nIHRoZSBsaXN0IG9mIGNo
YW5nZXMsIHRoaXMgbWlub3IgcmVsZWFzZSBlbmFibGVzIHRoZSBEdW5lIGNhY2hlDQogIGJ5IGRl
ZmF1bHQgZm9yIGtub3duLXNhZmUgb3BlcmF0aW9ucywgYWRkcyBvdXQtb2YtdGhlLWJveCBzdXBw
b3J0IGZvcg0KICBgV2FzbV9vZl9vY2FtbCcsIGFkZHMgc3VwcG9ydCBmb3IgdGhlfi1IfiBjb21w
aWxlciBmbGFnIGludHJvZHVjZWQgaW4NCiAgT0NhbWwgNS4yLCBhbGxvd3Mgc3BlY2lmeWluZyBj
b2RlIGhvc3Rpbmcgc2VydmljZXMgbGlrZSBDb2RlYmVyZyBvcg0KICBHaXRMYWIgb3JnYW5pc2F0
aW9ucywgYW5kIGdpdmVzIHRoZSBwb3NzaWJpbGl0eSB0byBydW4gaW5kaXZpZHVhbA0KICB0ZXN0
cyB3aXRoIGBkdW5lIHJ1bnRlc3QnLg0KDQogIElmIHlvdSBlbmNvdW50ZXIgYSBwcm9ibGVtIHdp
dGggdGhpcyByZWxlYXNlLCB5b3UgY2FuIHJlcG9ydCBpdCBvbiB0aGUNCiAgW29jYW1sL2R1bmVd
IHJlcG9zaXRvcnkuDQoNCg0KW29jYW1sL2R1bmVdIDxodHRwczovL2dpdGh1Yi5jb20vb2NhbWwv
ZHVuZS9pc3N1ZXM+DQoNCkNoYW5nZWxvZw0K4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWM4pWMDQoN
CuKXiiBBZGRlZA0KDQogIOKAoiBNYWtlIE1lcmxpbi9PQ2FtbC1MU1AgYXdhcmUgb2YgImhpZGRl
biIgZGVwZW5kZW5jaWVzIHVzZWQgYnkNCiAgICBgKGltcGxpY2l0X3RyYW5zaXRpdmVfZGVwcyBm
YWxzZSknIHZpYSB0aGUgYC1IJyBjb21waWxlcg0KICAgIGZsYWcuICgjMTA1MzUsIEB2b29kb29z
KQ0KICDigKIgQWRkIHN1cHBvcnQgZm9yIHRoZSAtSCBmbGFnIChpbnRyb2R1Y2VkIGluIE9DYW1s
IGNvbXBpbGVyIDUuMikgaW4NCiAgICBkdW5lIChyZXF1aXJlcyBsYW5nIHZlcnNpb25zIDMuMTcp
LiBUaGlzIGFkYXB0YXRpb24gZ2l2ZXMgdGhlDQogICAgY29ycmVjdCBzZW1hbnRpY3MgZm9yIGAo
aW1wbGljaXRfdHJhbnNpdGl2ZV9kZXBzIGZhbHNlKScuICAoIzEwNjQ0LA0KICAgIGZpeGVzICM5
MzMzLCBvY3NpZ2VuL3R5eG1sIzI3NCwgIzI3MzMsICM0OTYzLCBATUEwMTAwKQ0KICDigKIgQWRk
IHN1cHBvcnQgZm9yIHNwZWNpZnlpbmcgR2l0bGFiIG9yZ2FuaXphdGlvbiByZXBvc2l0b3JpZXMg
aW4NCiAgICBgc291cmNlJyBzdGFuemFzICgjMTA3NjYsIGZpeGVzICM2NzIzLCBASC1BTlNFTikN
CiAg4oCiIE5ldyBvcHRpb24gdG8gY29udHJvbCBqc29vIHNvdXJjZW1hcCBnZW5lcmF0aW9uIGlu
IGVudiBhbmQNCiAgICBleGVjdXRhYmxlIHN0YW56YSAoIzEwNzc3LCBmaXhlcyAjMTA2NzMsIEBo
aHVnbykNCiAg4oCiIE9uZSBjYW4gbm93IGNvbnRyb2wganNvbyBjb21waWxhdGlvbl9tb2RlIGlu
c2lkZSBhbiBleGVjdXRhYmxlDQogICAgc3RhbnphICgjMTA3NzcsIGZpeGVzICMxMDY3MywgQGho
dWdvKQ0KICDigKIgQWRkIHN1cHBvcnQgZm9yIHNwZWNpZnlpbmcgZGVmYXVsdCB2YWx1ZXMgb2Yg
dGhlIGBhdXRob3JzJywNCiAgICBgbWFpbnRhaW5lcnMnLCBhbmQgYGxpY2Vuc2UnIHN0YW56YXMg
b2YgdGhlIGBkdW5lLXByb2plY3QnIGZpbGUgdmlhDQogICAgdGhlIGR1bmUgY29uZmlnIGZpbGUu
IERlZmF1bHQgdmFsdWVzIGFyZSBzZXQgdXNpbmcgdGhlDQogICAgYChwcm9qZWN0X2RlZmF1bHRz
KScgc3RhbnphICgjMTA4MzUsIEBILUFOU0VOKQ0KICDigKIgQWRkIG5hbWVzIHRvIHNvdXJjZSB0
cmVlIGV2ZW50cyBpbiBwZXJmb3JtYW5jZSB0cmFjZXMgKCMxMDg4NCwNCiAgICBAamNoYXZhcnJp
KQ0KICDigKIgQWRkIGBjb2RlYmVyZycgYXMgYW4gb3B0aW9uIGZvciBkZWZpbmluZyBwcm9qZWN0
IHNvdXJjZXMgaW4NCiAgICBkdW5lLXByb2plY3QgZmlsZXMuIEZvciBleGFtcGxlLCBgKHNvdXJj
ZSAoY29kZWJlcmcNCiAgICB1c2VyL3JlcG8pKScuICgjMTA5MDQsIEBubG9yZGVsbCkNCiAg4oCi
IGBkdW5lIHJ1bnRlc3QnIGNhbiBub3cgcnVuIGluZGl2aWR1YWwgdGVzdHMgd2l0aCBgZHVuZSBy
dW50ZXN0DQogICAgbXl0ZXN0LnQnICgjMTEwNDEsIEBBbGl6dGVyKS4NCiAg4oCiIFdhc21fb2Zf
b2NhbWwgc3VwcG9ydCAoIzExMDkzLCBAdm91aWxsb24pDQogIOKAoiBBZGQgYSBgY29xZGVwX2Zs
YWdzJyBmaWVsZCB0byB0aGUgYGNvcScgZmllbGQgb2YgdGhlIGBlbnYnIHN0YW56YSwNCiAgICBh
bmQgdG8gdGhlIGBjb3EudGhlb3J5JyBzdGFuemEsIGFsbG93aW5nIHRvIGNvbmZpZ3VyZSBgY29x
ZGVwJw0KICAgIGZsYWdzLiAoIzExMDk0LCBAcmxlcGlncmUpDQoNCg0K4peKIEZpeGVkDQoNCiAg
4oCiIFNob3cgdGhlIGNvbnRleHQgbmFtZSBmb3IgZXJyb3JzIGhhcHBlbmluZyBpbiBub24tZGVm
YXVsdCBjb250ZXh0cy4NCiAgICAoIzEwNDE0LCBmaXhlcyAjMTAzNzgsIEBqY2hhdmFycmkpDQog
IOKAoiBDb3JyZWN0bHkgZGVjbGFyZSBkZXBlbmRlbmNpZXMgb2YgaW5kZXhlcyBzbyB0aGF0IHRo
ZXkgYXJlIHJlYnVpbHQNCiAgICB3aGVuIG5lZWRlZC4gKCMxMDYyMywgQHZvb2Rvb3MpDQogIOKA
oiBEb24ndCBkZXBlbmQgb24gY29xLXN0ZGxpYiBiZWluZyBpbnN0YWxsZWQgd2hlbiBleHBhbmRp
bmcgdmFyaWFibGVzDQogICAgb2YgdGhlIGBjb3EudmVyc2lvbicgZmFtaWx5ICgjMTA2MzEsIGZp
eGVzICMxMDYyOSwgQGdhcmVzKQ0KICDigKIgRXJyb3Igb3V0IGlmIG5vIGZpbGVzIGFyZSBmb3Vu
ZCB3aGVuIHVzaW5nIGBjb3B5X2ZpbGVzJy4gKCMxMDY0OSwNCiAgICBAamNoYXZhcnJpKQ0KICDi
gKIgUmVfZXhwb3J0IGR1bmUtc2VjdGlvbiBwcml2YXRlIGxpYnJhcnkgaW4gdGhlIGR1bmUtc2l0
ZSBsaWJyYXJ5DQogICAgc3RhbnphLCBpbiBvcmRlciB0byBhdm9pZCBmYWlsdXJlIHdoZW4gZ2Vu
ZXJhdGluZyBhbmQgYnVpbGRpbmcgc2l0ZXMNCiAgICBtb2R1bGVzIHdpdGggaW1wbGljaXRfdHJh
bnNpdGl2ZV9kZXBzID0gZmFsc2UuICgjMTA2NTAsIGZpeGVzICM5NjYxLA0KICAgIEBNQTAxMDAp
DQogIOKAoiBFeHBlY3QgdGVzdCBmaXhlczogc3VwcG9ydCBtdWx0aXBsZSBtb2RlcyBhbmQgZml4
IGRlcGVuZGVuY2llcyB3aGVuDQogICAgdGhlcmUgaXMgYSBjdXN0b20gcnVubmVyICgjMTA2NzEs
IEB2b3VpbGxvbikNCiAg4oCiIEluIGEgYChsaWJyYXJ5KScgc3RhbnphIHdpdGggYChleHRyYV9v
YmplY3RzKScgYW5kDQogICAgYChmb3JlaWduX3N0dWJzKScsIGF2b2lkIGRvdWJsZSBsaW5raW5n
IHRoZSBleHRyYSBvYmplY3QgZmlsZXMgaW4NCiAgICB0aGUgZmluYWwgZXhlY3V0YWJsZS4gICgj
MTA3ODMsIGZpeGVzICMxMDc4NSwgQG5vamIpDQogIOKAoiBNYXAgYChyZV9leHBvcnQpJyBsaWJy
YXJ5IGRlcGVuZGVuY2llcyB0byB0aGUgYGV4cG9ydHMnIGZpZWxkIGluDQogICAgYE1FVEEnIGZp
bGVzLCBhbmQgdmljZS12ZXJzYS4gVGhpcyBmaWVsZCB3YXMgcHJvcG9zZWQgaW4gdG8NCiAgICA8
aHR0cHM6Ly9kaXNjdXNzLm9jYW1sLm9yZy90L3Byb3Bvc2FsLWEtbmV3LWV4cG9ydHMtZmllbGQt
aW4tZmluZGxpYi1tZXRhLWZpbGVzLzEzOTQ3Pi4NCiAgICBUaGUgZmllbGQgaXMgaW5jbHVkZWQg
aW4gRHVuZS1nZW5lcmF0ZWQgYE1FVEEnIGZpbGVzIG9ubHkgd2hlbiB0aGUNCiAgICBEdW5lIGxh
bmcgdmVyc2lvbiBpcyA+PSAzLjE3LiAgKCMxMDgzMSwgZml4ZXMgIzEwODMwLCBAbm9qYikNCiAg
4oCiIEZpeCBzdGFnZWQgcHBzIHByZXByb2Nlc3NvcnMgb24gV2luZG93cyAod2hpY2ggd2VyZSBu
b3Qgd29ya2luZyBhdA0KICAgIGFsbCBwcmV2aW91c2x5KSAoIzEwODY5LCBmaXhlcyAjMTA4Njcs
IEBub2piKQ0KICDigKIgRml4IGBkdW5lIGRlc2NyaWJlJyB3aGVuIGFuIGV4ZWN1dGFibGUgaXMg
ZGlzYWJsZWQgd2l0aA0KICAgIGBlbmFibGVkX2lmJy4gICgjMTA4ODEsIGZpeGVzICMxMDc3OSwg
QG1veW9kaWFsbG8pDQogIOKAoiBGaXggYW4gaXNzdWUgd2hlcmUgQyBzdHVicyB3b3VsZCBiZSBy
ZWJ1aWx0IHdoZW5ldmVyIHRoZSBzdGRlcnIgb2YNCiAgICBEdW5lIHdhcyByZWRpcmVjdGVkLiAo
IzEwODgzLCBmaXhlcyAjMTA4ODIsIEBub2piKQ0KICDigKIgRml4IHRoZSBVUkwgb3BlbmVkIGJ5
IHRoZSBjb21tYW5kIGBkdW5lIG9jYW1sIGRvYycuICgjMTA4OTcsDQogICAgQGdyaWRidWdzKQ0K
ICDigKIgRml4IHRoZSBmaWxlIHJlZmVycmVkIHRvIGluIHRoZSBlcnJvci93YXJuaW5nIG1lc3Nh
Z2UgZGlzcGxheWVkIGR1ZQ0KICAgIHRvIHRoZSBkdW5lIGNvbmZpZ3VyYXRpb24gdmVyc2lvbiBu
b3Qgc3VwcG9ydGluZyBhIHBhcnRpY3VsYXINCiAgICBjb25maWd1cmF0aW9uIHN0YW56YSBpbiB1
c2UuICgjMTA5MjMsIEBILUFOU0VOKQ0KICDigKIgRml4IGBlbmFibGVkX2lmJyB3aGVuIGl0IHVz
ZXMgYGVudicgdmFyaWFibGUuICgjMTA5MzYsIGZpeGVzICMxMDkwNSwNCiAgICBAbW95b2RpYWxs
bykNCiAg4oCiIEZpeCBleGVjIC13IGZvciByZWxhdGl2ZSBwYXRocyB3aXRoIOKAk3Jvb3QgYXJn
dW1lbnQgKCMxMDk4MiwNCiAgICBAZ3JpZGJ1Z3MpDQogIOKAoiBEbyBub3QgaWdub3JlIHRoZSBg
KGxvY2tzIC4uKScgZmllbGQgaW4gdGhlIGB0ZXN0JyBhbmQgYHRlc3RzJw0KICAgIHN0YW56YSAo
IzExMDgxLCBAcmdyaW5iZXJnKQ0KICDigKIgVG9sZXJhdGUgZmlsZXMgd2l0aG91dCBleHRlbnNp
b24gd2hlbiBnZW5lcmF0aW5nIG1lcmxpbiBydWxlcy4NCiAgICAoIzExMTI4LCBAYW5tb250ZWly
bykNCg0KDQril4ogQ2hhbmdlZA0KDQogIOKAoiBSZW1vdmUgYWxsIHJlbW5hbnRzIG9mIHRoZSBl
eHBlcmltZW50YWwNCiAgICBgcGF0Y2gtYmFjay1zb3VyY2UtdHJlZScuICgjMTA3NzEsIEByZ3Jp
bmJlcmcpDQogIOKAoiBDaGFuZ2UgdGhlIHByZXNldCB2YWx1ZSBmb3IgYXV0aG9yIGFuZCBtYWlu
dGFpbmVyIGZpZWxkcyBpbiB0aGUNCiAgICBgZHVuZS1wcm9qZWN0JyBmaWxlIHRvIGVuY291cmFn
ZSBpbmNsdWRpbmcgZW1haWxzLiAoIzEwODQ4LA0KICAgIEBwdW5jaGFnYW4pDQogIOKAoiBUd2Vh
ayB0aGUgcHJlc2V0IHZhbHVlIGZvciB0YWdzIGluIHRoZSBgZHVuZS1wcm9qZWN0JyBmaWxlIHRv
IGhpbnQNCiAgICBhdCB0b3BpY3Mgbm90IGhhdmluZyBhIHNwZWNpYWwgbWVhbmluZy4gKCMxMDg0
OSwgQHB1bmNoYWdhbikNCiAg4oCiIENoYW5nZSBzb21lIGNvbG9ycyB0byBpbXByb3ZlIHJlYWRh
YmlsaXR5IGluIGxpZ2h0LW1vZGUgdGVybWluYWxzDQogICAgKCMxMDg5MCwgQGdyaWRidWdzKQ0K
ICDigKIgRm9yd2FyZCB0aGUgbGlua2FsbCBmbGFnIHRvIGpzb28gaW4gd2hvbGUgcHJvZ3JhbSBj
b21waWxhdGlvbiBhcw0KICAgIHdlbGwgKCMxMDkzNSwgQGhodWdvKQ0KICDigKIgQ29uZmlndXJh
dG9yIHVzZXMgYHBrZ2NvbmYnIGFzIHBrZy1jb25maWcgaW1wbGVtZW50YXRpb24gd2hlbg0KICAg
IGF2YWlsYWJsZSBhbmQgZm9yd2FyZHMgaXQgdGhlIGB0YXJnZXQnIG9mIGBvY2FtbGMgLWNvbmZp
ZycuICgjMTA5MzcsDQogICAgQHBpcmJvKQ0KICDigKIgRW5hYmxlIER1bmUgY2FjaGUgYnkgZGVm
YXVsdC4gQWRkIGEgbmV3IER1bmUgY2FjaGUgc2V0dGluZw0KICAgIGBlbmFibGVkLWV4Y2VwdC11
c2VyLXJ1bGVzJywgd2hpY2ggZW5hYmxlcyB0aGUgRHVuZSBjYWNoZSwgYnV0DQogICAgZXhjbHVk
ZXMgdXNlci13cml0dGVuIHJ1bGVzIGZyb20gaXQuIFRoaXMgaXMgYSBjb25zZXJ2YXRpdmUgY2hv
aWNlDQogICAgdGhhdCBjYW4gYXZvaWQgYnJlYWtpbmcgcnVsZXMgd2hvc2UgZGVwZW5kZW5jaWVz
IGFyZSBub3QgY29ycmVjdGx5DQogICAgc3BlY2lmaWVkLiBUaGlzIGlzIHRoZSBjdXJyZW50IGRl
ZmF1bHQuICgjMTA5NDQsICMxMDcxMCwgQG5vamIsDQogICAgQEVsZWN0cmVBQVMpDQogIOKAoiBE
byBub3QgYWRkIGBkdW5lJyBkZXBlbmRlbmN5IGluIGBkdW5lLXByb2plY3QnIHdoZW4gY3JlYXRp
bmcNCiAgICBwcm9qZWN0cyB3aXRoIGBkdW5lIGluaXQgcHJvaicuIFRoZSBEdW5lIGRlcGVuZGVu
Y3kgaXMgaW1wbGljaXRlbHkNCiAgICBhZGRlZCB3aGVuIGdlbmVyYXRpbmcgb3BhbSBmaWxlcyAo
IzExMTI5LCBATGVvbmlkYXMtZnJvbS1YSVYpDQoNCg0KU3BlYyBhbmQgaW50ZXJmYWNlIHRvIGRl
Y2xhcmUgZGVwZW5kZW5jaWVzIGluIGFuIE9DYW1sIHNjcmlwdA0K4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQ4pWQDQoNCiAg
QXJjaGl2ZToNCiAgPGh0dHBzOi8vZGlzY3Vzcy5vY2FtbC5vcmcvdC9zcGVjLWFuZC1pbnRlcmZh
Y2UtdG8tZGVjbGFyZS1kZXBlbmRlbmNpZXMtaW4tYW4tb2NhbWwtc2NyaXB0LzE1NzcyLzE+DQoN
Cg0KamJlY2tmb3JkIGFubm91bmNlZA0K4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSA
4pSA4pSA4pSA4pSA4pSA4pSA4pSA4pSADQoNCiAgVGhpcyBpcyB0aGUgZm91cnRoIGFydGljbGUg
aW4gdGhlIE1sRnJvbnQgc2VyaWVzLiBJZiB5b3UgYXJlDQogIGludGVyZXN0ZWQgaW4gc2NyaXB0
aW5nIGZyYW1ld29ya3MgdGhhdCBjYW4gZG93bmxvYWQgc291cmNlIGNvZGUgYW5kDQogIGJ5dGVj
b2RlLCBhbmQgaW50ZXItb3BlcmF0ZSB3aGlsZSBkb2luZyBzbywgcGxlYXNlIHJlYWQ6DQoNCiAg
W2h0dHBzOi8vZGlza3V2LmNvbS9tbGZyb250L292ZXJ2aWV3LTQvXQ0KDQoNCltodHRwczovL2Rp
c2t1di5jb20vbWxmcm9udC9vdmVydmlldy00L10NCjxodHRwczovL2Rpc2t1di5jb20vbWxmcm9u
dC9vdmVydmlldy00Lz4NCg0KVExEUg0K4pWM4pWM4pWM4pWMDQoNCiAgLyhDcml0aWNhbCwgdmVy
YmF0aW0gc25pcHBldHMgZnJvbSBhcnRpY2xlKS8NCg0KICBJIGhhdmUgYW4gb2xkIG9wYW0gcGFj
a2FnZSBbRGtTREtGRklPQ2FtbF9TdGRdIHRoYXQgaXMgYSBsb3ctbGV2ZWwNCiAgYnJpZGdlIGJl
dHdlZW4gT0NhbWwgYW5kIG90aGVyIHByb2dyYW1taW5nIGxhbmd1YWdlcy4gSXQgY2FuIGJlDQog
IGV4dHJhb3JkaW5hcmlseSBkaWZmaWN1bHQgdG8gYnVpbGQsIHNvIEkgbWFkZSBpdCBhIG1peCBv
ZiBwdXJlIE9DYW1sDQogIHNvdXJjZSBjb2RlIGFuZCBwcmVidWlsdCBsaWJyYXJ5IGRvd25sb2Fk
cy4gVG9kYXkgSSdsbCBkZXNjcmliZSBob3cNCiAgZW1iZWRkZWQgT0NhbWwgZGVwZW5kZW5jaWVz
IGxpa2UgdGhlIGZvbGxvd2luZyAvc2ltcGxpZmllcyB0aGUgYnVpbGQNCiAgcHJvY2Vzcy86DQoN
CiAg4pSM4pSA4pSA4pSA4pSADQogIOKUgiBtb2R1bGUgXyA9IERrU0RLRkZJX09DYW1sDQogIOKU
giAoKiogVGhlIGJyaWRnZSBiZXR3ZWVuIE9DYW1sIGFuZCBvdGhlciBwcm9ncmFtbWluZyBsYW5n
dWFnZXMuDQogIOKUgiANCiAg4pSCICAgICB7WyBgdjEgWw0KICDilIIgICAgICAgICAgIGBzZWMg
WyBgc2NoZW1lICJka2NvZGVyIiBdOw0KICDilIIgICAgICAgICAgIGBibGliIFsiaHR0cHM6Ly9n
aXRsYWIuY29tL2FwaS92NC9wcm9qZWN0cy82MjcwMzE5NC9wYWNrYWdlcy9nZW5lcmljL0BES01M
X1RBUkdFVF9BQklALzIuMS40L0BES01MX1RBUkdFVF9BQklALTQuMTQuMi1Ea1NES0ZGSV9PQ2Ft
bC0yLjEuNC1ub25lLmJsaWIuemlwIl07DQogIOKUgiAgICAgICAgICAgYGNsaWIgWyJodHRwczov
L2dpdGxhYi5jb20vYXBpL3Y0L3Byb2plY3RzLzYyNzAzMTk0L3BhY2thZ2VzL2dlbmVyaWMvQERL
TUxfVEFSR0VUX0FCSUAvMi4xLjQvQERLTUxfVEFSR0VUX0FCSUAtNC4xNC4yLURrU0RLRkZJX09D
YW1sLTIuMS40LW5vbmUuY2xpYi56aXAiXQ0KICDilIIgICAgICAgICBdIF19ICopDQogIOKUgiAN
CiAg4pSCICgqIEFuZCB1c2Ugd2hhdCB5b3UgaW1wb3J0ZWQgLi4uICopDQogIOKUgiBsZXQgKCkg
PQ0KICDilIIgICAgaWdub3JlIChEa1NES0ZGSV9PQ2FtbC5Db20uY3JlYXRlX2MgKCkpDQogIOKU
lOKUgOKUgOKUgOKUgA0KDQogIOKAlA0KDQogIE9uZSBzZXQgb2YgZGVzaWducyBJIGNyZWF0ZWQg
YXJlIHRoZSBgTWxGcm9udF9BcmNoaXZlJyBwYWNrYWdlDQogIGZvcm1hdHM6DQoNCiAgMS4gYCou
YmxpYi56aXAnIC0gVGhpcyBpcyB0aGUgYnl0ZWNvZGUgYXJjaGl2ZS4gSXQgaXMgYSB6aXAgZmls
ZQ0KICAgICBjb250YWluaW5nIGAuY21hJywgYC5jbWknIGFuZCBzb21lIG90aGVyIGNyaXRpY2Fs
IG1ldGFkYXRhLg0KICAyLiBgKi5jbGliLnppcCcgLSBUaGlzIGlzIHRoZSBDIGxpYnJhcnkgYXJj
aGl2ZS4gSXQgaXMgYSB6aXAgZmlsZQ0KICAgICBjb250YWluaW5nIGAuc28nIG9yIGAuZHlsaWIn
IG9yIGAuZGxsJyBzaGFyZWQgbGlicmFyaWVzLCBhbmQgYWxzbw0KICAgICB0aGUgY29ycmVzcG9u
ZGluZyBzdGF0aWMgbGlicmFyaWVzLg0KICBUaGUgaW1wb3J0YW50IGNvbmNlcHQgaXMgdGhhdCBg
Ki5ibGliLnppcCcgYW5kIGAqLmNsaWIuemlwJyBmb3IgT0NhbWwNCiAgYXJlIGFuYWxvZ291cyB0
byBgKi5qYXInIGZpbGVzIGZvciBKYXZhLiBUaGUgZGVzaWduIGlzIGF2YWlsYWJsZSBhdDoNCg0K
ICDigKIgRm9ybWF0IG9mIHBhY2thZ2VzOg0KICAgIDxodHRwczovL2dpdGxhYi5jb20vZGlza3V2
L3JlZ2lzdHJpZXMvcHVibGljLXBhY2thZ2VzI2dlbmVyaWMtcmVnaXN0cnktbGF5b3V0Pg0KICDi
gKIgQmluYXJpZXMgdG8gdW5wYWNrIHRoZSBwYWNrYWdlczoNCiAgICA8aHR0cHM6Ly9naXRsYWIu
Y29tL2RrbWwvYnVpbGQtdG9vbHMvTWxGcm9udF9BcmNoaXZlLy0vcmVsZWFzZXM+DQoNCiAg4oCU
DQoNCiAgVGhlIHJlbW90ZSBzcGVjaWZpY2F0aW9uIGRlc2lnbiBpcyBpbiB0aGUgYE1sRnJvbnRf
Q29uZmlnJyBsaWJyYXJ5Og0KDQogIOKAoiBjb2RlOiA8aHR0cHM6Ly9naXRsYWIuY29tL2RrbWwv
YnVpbGQtdG9vbHMvTWxGcm9udCNtbGZyb250Pg0KICDigKIgb2RvYzoNCiAgICA8aHR0cHM6Ly9k
a21sLmdpdGxhYi5pby9idWlsZC10b29scy9NbEZyb250L01sRnJvbnRfQ29uZmlnL01sRnJvbnRf
Q29uZmlnL1JlbW90ZVNwZWMvaW5kZXguaHRtbD4NCg0KDQpbRGtTREtGRklPQ2FtbF9TdGRdIDxo
dHRwczovL29jYW1sLm9yZy9wL0RrU0RLRkZJT0NhbWxfU3RkL2xhdGVzdD4NCg0KDQpPdGhlciBP
Q2FtbCBOZXdzDQrilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDilZDi
lZANCg0KRnJvbSB0aGUgb2NhbWwub3JnIGJsb2cNCuKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKU
gOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgOKUgA0KDQogIEhlcmUgYXJl
IGxpbmtzIGZyb20gbWFueSBPQ2FtbCBibG9ncyBhZ2dyZWdhdGVkIGF0IFt0aGUgb2NhbWwub3Jn
DQogIGJsb2ddLg0KDQogIOKAoiBbUmVsZWFzZSBvZiBGcmFtYS1DIDMwLjAgKFppbmMpXQ0KICDi
gKIgW0lybWluIG9uIE1pcmFnZU9TOiBVbmRlci10aGUtSG9vZCBXaXRoIE5vdGFmc10NCg0KDQpb
dGhlIG9jYW1sLm9yZyBibG9nXSA8aHR0cHM6Ly9vY2FtbC5vcmcvYmxvZy8+DQoNCltSZWxlYXNl
IG9mIEZyYW1hLUMgMzAuMCAoWmluYyldDQo8aHR0cHM6Ly9mcmFtYS1jLmNvbS9mYy12ZXJzaW9u
cy96aW5jLmh0bWw+DQoNCltJcm1pbiBvbiBNaXJhZ2VPUzogVW5kZXItdGhlLUhvb2QgV2l0aCBO
b3RhZnNdDQo8aHR0cHM6Ly90YXJpZGVzLmNvbS9ibG9nLzIwMjQtMTItMDQtaXJtaW4tb24tbWly
YWdlb3MtdW5kZXItdGhlLWhvb2Qtd2l0aC1ub3RhZnM+DQoNCg0KT2xkIENXTg0K4pWQ4pWQ4pWQ
4pWQ4pWQ4pWQ4pWQDQoNCiAgSWYgeW91IGhhcHBlbiB0byBtaXNzIGEgQ1dOLCB5b3UgY2FuIFtz
ZW5kIG1lIGEgbWVzc2FnZV0gYW5kIEknbGwgbWFpbA0KICBpdCB0byB5b3UsIG9yIGdvIHRha2Ug
YSBsb29rIGF0IFt0aGUgYXJjaGl2ZV0gb3IgdGhlIFtSU1MgZmVlZCBvZiB0aGUNCiAgYXJjaGl2
ZXNdLg0KDQogIElmIHlvdSBhbHNvIHdpc2ggdG8gcmVjZWl2ZSBpdCBldmVyeSB3ZWVrIGJ5IG1h
aWwsIHlvdSBtYXkgc3Vic2NyaWJlDQogIHRvIHRoZSBbY2FtbC1saXN0XS4NCg0KICBbQWxhbiBT
Y2htaXR0XQ0KDQoNCltzZW5kIG1lIGEgbWVzc2FnZV0gPG1haWx0bzphbGFuLnNjaG1pdHRAcG9s
eXRlY2huaXF1ZS5vcmc+DQoNClt0aGUgYXJjaGl2ZV0gPGh0dHBzOi8vYWxhbi5wZXRpdGVwb21t
ZS5uZXQvY3duLz4NCg0KW1JTUyBmZWVkIG9mIHRoZSBhcmNoaXZlc10gPGh0dHBzOi8vYWxhbi5w
ZXRpdGVwb21tZS5uZXQvY3duL2N3bi5yc3M+DQoNCltjYW1sLWxpc3RdIDxodHRwczovL3N5bXBh
LmlucmlhLmZyL3N5bXBhL2luZm8vY2FtbC1saXN0Pg0KDQpbQWxhbiBTY2htaXR0XSA8aHR0cHM6
Ly9hbGFuLnBldGl0ZXBvbW1lLm5ldC8+DQoNCg==
--=-=-=
Content-Type: text/html; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2024-12-10 Tue 14:47 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html;charset=3Dutf-8" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
 />
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org Mode" />
<style type=3D"text/css">
  #content { max-width: 60em; margin: auto; }
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #e6e6e6;
    border-radius: 3px;
    background-color: #f2f2f2;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
  }
  pre.src:before {
    display: none;
    position: absolute;
    top: -8px;
    right: 12px;
    padding: 3px;
    color: #555;
    background-color: #f2f2f299;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-authinfo::before { content: 'Authinfo'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { }
</style>
<style type=3D"text/css">#table-of-contents h2 { display: none } .title { d=
isplay: none } .authorname { text-align: right }</style>
<style type=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
</head>
<body>
<div id=3D"content" class=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p>
<a href=3D"https://alan.petitepomme.net/cwn/2024.12.03.html">Previous Week<=
/a> <a href=3D"https://alan.petitepomme.net/cwn/index.html">Up</a> <a href=
=3D"https://alan.petitepomme.net/cwn/2024.12.17.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of December 03 to 10, 20=
24.
</p>

<div id=3D"table-of-contents" role=3D"doc-toc">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents" role=3D"doc-toc">
<ul>
<li><a href=3D"#1">Release of cppo 1.8.0</a></li>
<li><a href=3D"#2">New releases of Merlin and OCaml-LSP</a></li>
<li><a href=3D"#3">New release of baby</a></li>
<li><a href=3D"#4">Release of Saturn 1.0</a></li>
<li><a href=3D"#5">Dune dev meeting</a></li>
<li><a href=3D"#6">Dune 3.17</a></li>
<li><a href=3D"#7">Spec and interface to declare dependencies in an OCaml s=
cript</a></li>
<li><a href=3D"#8">Other OCaml News</a></li>
<li><a href=3D"#org277a245">Old CWN</a></li>
</ul>
</div>
</div>
<div id=3D"outline-container-1" class=3D"outline-2">
<h2 id=3D"1">Release of cppo 1.8.0</h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-release-of-cppo-1-8-0/1=
5749/1">https://discuss.ocaml.org/t/ann-release-of-cppo-1-8-0/15749/1</a>
</p>
</div>
<div id=3D"outline-container-org9ca4dc5" class=3D"outline-3">
<h3 id=3D"org9ca4dc5">Fran=C3=A7ois Pottier announced</h3>
<div class=3D"outline-text-3" id=3D"text-org9ca4dc5">
<p>
I am pleased to announce a new release of <code>cppo</code> (1.8.0) with on=
e new feature and one bug fix:
</p>

<ul class=3D"org-ul">
<li>A scope, delimited by <code>#scope ... #endscope</code>, limits the eff=
ect of <code>#define</code>, <code>#def ... #enddef</code>, and <code>#unde=
f</code>.</li>
<li>The command <code>cppo -version</code>, which used to print a blank lin=
e, has been fixed.</li>
</ul>

<p>
For more details, please see the <a href=3D"https://github.com/ocaml-commun=
ity/cppo/">documentation</a>.
</p>
</div>
</div>
</div>
<div id=3D"outline-container-2" class=3D"outline-2">
<h2 id=3D"2">New releases of Merlin and OCaml-LSP</h2>
<div class=3D"outline-text-2" id=3D"text-2">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-new-releases-of-merlin-=
and-ocaml-lsp/15752/1">https://discuss.ocaml.org/t/ann-new-releases-of-merl=
in-and-ocaml-lsp/15752/1</a>
</p>
</div>
<div id=3D"outline-container-orgb181490" class=3D"outline-3">
<h3 id=3D"orgb181490">vds announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgb181490">
<p>
I am pleased to announce new releases of Merlin (<code>5.3-502</code> and <=
code>4.18-414</code>) and OCaml-LSP  (<code>1.20.1</code> and <code>1.20.1-=
4.14</code>).=20
</p>

<p>
The Merlin releases bundle a handful of fixes while the LSP releases focus =
on adding more custom queries. These custom queries will enable tailored LS=
P clients to provide the same rich OCaml editing features as the one provid=
ed by the original Merlin modes for Emacs and Vim.
</p>

<p>
Latest releases of <code>vscode-ocaml-platform</code> already provide two n=
ew commands: <code>Construct</code> and <code>Jump</code> that respectively=
 provide a better UI to fill typed holes with values and jump to specific p=
arent nodes. Search by type/polarity and a command to get the type of growi=
ng and shrinking selections will also be available in the future.
</p>


<div id=3D"org5f23762" class=3D"figure">
<p><img src=3D"https://global.discourse-cdn.com/flex020/uploads/ocaml/origi=
nal/2X/c/c07de3130c92cb1601215531c75ecc0545a97b4d.gif" alt=3D"c07de3130c92c=
b1601215531c75ecc0545a97b4d.gif" />
</p>
</div>
</div>
<div id=3D"outline-container-org4398508" class=3D"outline-4">
<h4 id=3D"org4398508">Merlin changelog</h4>
<div class=3D"outline-text-4" id=3D"text-org4398508">
</div>
<ul class=3D"org-ul">
<li><a id=3D"org4c12998"></a>merlin 5.3<br />
<div class=3D"outline-text-5" id=3D"text-org4c12998">
<ul class=3D"org-ul">
<li>merlin binary
<ul class=3D"org-ul">
<li>Respect the <code>EXCLUDE_QUERY_DIR</code> configuration directive when=
 looking for cmt
files (#1854)</li>
<li>Fix occurrences bug in which relative paths in index files are resolved=
 against the
PWD rather than the SOURCE_ROOT (#1855)</li>
<li>Fix exception in polarity search (#1858 fixes #1113)</li>
<li>Fix jump to <code>fun</code> targets not working (#1863, fixes #1862)</=
li>
<li>Fix type-enclosing results instability. This reverts some overly
aggressive deduplication that should be done on the client side. (#1864)</l=
i>
<li>Fix occurrences not working when the definition comes from a hidden sou=
rce
file (#1865)</li>
</ul></li>
</ul>
</div>
</li>
</ul>
</div>
<div id=3D"outline-container-org1b5765e" class=3D"outline-4">
<h4 id=3D"org1b5765e">OCaml-LSP changelog</h4>
<div class=3D"outline-text-4" id=3D"text-org1b5765e">
</div>
<ul class=3D"org-ul">
<li><a id=3D"orgc8296f9"></a>1.20.1<br />
<ul class=3D"org-ul">
<li><a id=3D"org4c1cde9"></a>Features<br />
<div class=3D"outline-text-6" id=3D"text-org4c1cde9">
<ul class=3D"org-ul">
<li>Add custom
[~ocamllsp/typeSearch~](/ocaml-lsp-server/docs/ocamllsp/typeSearch-spec.md)=
 request (#1369)</li>
<li>Make MerlinJump code action configurable (#1376)</li>
<li>Add custom [~ocamllsp/jump~](/ocaml-lsp-server/docs/ocamllsp/merlinJump=
-spec.md) request (#1374)</li>
</ul>
</div>
</li>
<li><a id=3D"orgef8b0df"></a>Fixes<br />
<div class=3D"outline-text-6" id=3D"text-orgef8b0df">
<ul class=3D"org-ul">
<li>Fix fd leak in running external processes for preprocessing (#1349)</li>
<li>Fix prefix parsing for completion of object methods (#1363, fixes #1358=
)</li>
<li>Remove some duplicates in the <code>selectionRange</code> answers (#136=
8)</li>
<li>Deactivate the <code>jump</code> code actions by default. Clients can e=
nable them with
the <code>merlinJumpCodeActions</code> configuration option. Alternatively =
a custom
request is provided for ad hoc use of the feature. (#1411)</li>
</ul>
</div>
</li>
</ul>
</li>
</ul>
</div>
</div>
</div>
<div id=3D"outline-container-3" class=3D"outline-2">
<h2 id=3D"3">New release of baby</h2>
<div class=3D"outline-text-2" id=3D"text-3">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/new-release-of-baby/15754/1=
">https://discuss.ocaml.org/t/new-release-of-baby/15754/1</a>
</p>
</div>
<div id=3D"outline-container-orgc2f75f3" class=3D"outline-3">
<h3 id=3D"orgc2f75f3">Fran=C3=A7ois Pottier announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgc2f75f3">
<p>
It is my pleasure to announce the second release of <code>baby</code>.
</p>

<pre class=3D"example" id=3D"orga7f102d">
opam update
opam install baby.20241204
</pre>

<p>
<code>baby</code> is an OCaml library that offers persistent sets and maps =
based on balanced binary search trees. It offers replacements for OCaml's <=
code>Set</code> and <code>Map</code> modules.
</p>

<p>
Height-balanced and weight-balanced binary search trees are offered out of =
the box. Furthermore, to advanced users, the library offers a lightweight w=
ay of implementing other balancing strategies.
</p>

<p>
<a href=3D"https://cambium.inria.fr/~fpottier/baby/doc/baby/">Documentation=
</a> is available online.
</p>

<p>
The changes in this release are as follows:
</p>

<ul class=3D"org-ul">
<li>The library now offers both sets and maps. The modules <code>Baby.H.Set=
</code> and <code>Baby.W.Set</code> continue to exist, and are compatible w=
ith OCaml's <code>Set</code> library. The modules <code>Baby.H.Map</code> a=
nd <code>Baby.W.Map</code> appear, and are compatible with OCaml's <code>Ma=
p</code> library. Furthermore, the functors <code>Baby.H.Make</code> and <c=
ode>Baby.W.Make</code> appear. These functors produce a module that contain=
s sets, maps, and two conversion functions between sets and maps, namely <c=
ode>domain</code> and <code>lift</code>.</li>
<li>Documentation: in the signature <code>OrderedType</code>, clarify the s=
pecification of the function <code>compare</code>; this function decides a =
total preorder <code>=E2=89=A4</code>.</li>
<li>Documentation: in the preamble, clarify that, most of the time, we assu=
me that <code>=E2=89=A4</code> is a total order; if an operation must be un=
derstood in the more general case where <code>=E2=89=A4</code> is a total p=
reorder, then this is explicitly indicated.</li>
<li>Documentation: update the documentation of <code>find</code> and <code>=
find_opt</code> in accordance with the previous point.</li>
<li>A number of incompatible changes have been made; see <a href=3D"https:/=
/github.com/fpottier/baby/blob/main/CHANGES.md">the change log</a> for deta=
ils.</li>
</ul>
</div>
</div>
</div>
<div id=3D"outline-container-4" class=3D"outline-2">
<h2 id=3D"4">Release of Saturn 1.0</h2>
<div class=3D"outline-text-2" id=3D"text-4">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-release-of-saturn-1-0/1=
5763/1">https://discuss.ocaml.org/t/ann-release-of-saturn-1-0/15763/1</a>
</p>
</div>
<div id=3D"outline-container-orgf250715" class=3D"outline-3">
<h3 id=3D"orgf250715">Carine Morel announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgf250715">
<p>
I am thrilled to announce the release of <a href=3D"https://github.com/ocam=
l-multicore/saturn">Saturn</a> 1.0!
</p>

<p>
Saturn is a collection of concurrent-safe data structures designed for OCam=
l 5. These structures have been:
</p>
<ul class=3D"org-ul">
<li>thoroughly tested with amazing tools like <a href=3D"https://github.com=
/ocaml-multicore/multicoretests">STM</a> (see this <a href=3D"https://tarid=
es.com/blog/2024-04-24-under-the-hood-developing-multicore-property-based-t=
ests-for-ocaml-5/">blog post</a>) and <a href=3D"https://github.com/ocaml-m=
ulticore/dscheck">DScheck</a>,</li>
<li>benchmarked for performance,</li>
<li>optimized for efficiency,</li>
<li>and even verified in some cases!</li>
</ul>

<p>
If you're curious about the motivation behind Saturn and the challenges it =
addresses, you can read more <a href=3D"https://github.com/ocaml-multicore/=
saturn/blob/main/doc/motivation.md">here</a>.
</p>
</div>
<div id=3D"outline-container-org996cf1c" class=3D"outline-4">
<h4 id=3D"org996cf1c">What Can You Do with Saturn?</h4>
<div class=3D"outline-text-4" id=3D"text-org996cf1c">
<p>
Saturn provides a variety of data structures, including queues, stacks, has=
h tables, and more. All of these structures are <b><b>lock-free</b></b>, <b=
><b>linearizable</b></b>, and specifically designed to take full advantage =
of OCaml 5=E2=80=99s multicore capabilities.
</p>
</div>
<ul class=3D"org-ul">
<li><a id=3D"orgfc52274"></a>Portable Data Structures<br />
<div class=3D"outline-text-5" id=3D"text-orgfc52274">
<p>
Lock-freedom is a progress property that guarantees system-wide progress. T=
his is a powerful and desirable feature, though it comes at the cost of som=
e overhead. However, it offers a significant advantage: lock-free data stru=
ctures avoid the need for scheduler-specific blocking mechanisms, making th=
em compatible with any scheduler, such as <a href=3D"https://github.com/oca=
ml-multicore/eio">Eio</a> or <a href=3D"https://github.com/ocaml-multicore/=
domainslib">Domainslib</a>.
</p>
</div>
</li>
<li><a id=3D"orgbcdf4a9"></a>Restrictions<br />
<div class=3D"outline-text-5" id=3D"text-orgbcdf4a9">
<p>
Saturn=E2=80=99s data structures are not composable, meaning you cannot com=
bine them (e.g., use <code>Saturn.Queue</code> inside <code>Saturn.Htbl</co=
de>) while preserving properties like lock-freedom and linearizability.
</p>

<p>
They are also not extensible outside of Saturn without losing these propert=
ies. For instance, <code>Saturn.Queue</code> does not include a <code>lengt=
h</code> function because implementing one would introduce significant over=
head (see <code>Saturn.Bounded_queue</code> for an example of this tradeoff=
). Attempting to add this functionality, such as by wrapping the queue:
</p>

<div class=3D"org-src-container">
<pre class=3D"src src-ocaml"><span style=3D"color: #000000; font-weight: bo=
ld;">type</span> <span style=3D"color: #444fcf;">'a t</span> =3D {size: int=
 <span style=3D"color: #444fcf;">Atomic.</span>t; queue : 'a <span style=3D=
"color: #444fcf;">Saturn.Queue.</span>t}
</pre>
</div>

<p>
would result in a structure that either loses lock-freedom or is no longer =
linearizable.
</p>

<p>
If you need composable lock-free data structures, consider exploring <a hre=
f=3D"https://ocaml-multicore.github.io/kcas/doc/kcas_data/Kcas_data/index.h=
tml">kcas_data</a>.
</p>
</div>
</li>
</ul>
</div>
<div id=3D"outline-container-org571c499" class=3D"outline-4">
<h4 id=3D"org571c499">Call to Action</h4>
<div class=3D"outline-text-4" id=3D"text-org571c499">
<ul class=3D"org-ul">
<li><b>Try It Out</b>: Give Saturn a try in your projects and let us know h=
ow it works for you. If you encounter any bugs or issues, please report the=
m on our <a href=3D"https://github.com/ocaml-multicore/saturn">GitHub repos=
itory</a>.</li>
<li><b>Share Your Use Case</b>: Are you already using Saturn? Let us know i=
n the comments what you're building with it!</li>
<li><b>Contribute</b>: We=E2=80=99d love to have more contributors. Whether=
 it=E2=80=99s implementing new features, improving documentation, or sugges=
ting enhancements, your contributions are welcome!</li>
<li><b>Help Shape the Future</b>: What would you like to see in Saturn? Is =
there a missing data structure you need? Share your thoughts to help us bui=
ld a roadmap for future development.</li>
</ul>

<p>
<b>Thank you for your support!</b>
</p>
</div>
</div>
<div id=3D"outline-container-orge4ba716" class=3D"outline-4">
<h4 id=3D"orge4ba716">Talks and Resources</h4>
<div class=3D"outline-text-4" id=3D"text-orge4ba716">
<p>
If you want to learn more about Saturn, I gave a talk at the 2024 OCaml Wor=
kshop=E2=80=94check out the short <a href=3D"https://icfp24.sigplan.org/det=
ails/ocaml-2024-papers/12/Saturn-a-library-of-verified-concurrent-data-stru=
ctures-for-OCaml-5">paper</a> and the <a href=3D"https://youtu.be/OuQqblCxJ=
2Y?t=3D24398">talk</a>.
</p>

<p>
To dive deeper into concurrent-safe data structures, I highly recommend hav=
ing a look at <a href=3D"https://www.researchgate.net/publication/213876653=
_The_Art_of_Multiprocessor_Programming">The Art of Multiprocessor Programmi=
ng</a>, which explores the differences in design between lock-based and loc=
k-free data structures.
</p>
</div>
</div>
<div id=3D"outline-container-org44a1447" class=3D"outline-4">
<h4 id=3D"org44a1447">Commercial Support</h4>
<div class=3D"outline-text-4" id=3D"text-org44a1447">
<p>
If you=E2=80=99re interested in incorporating Saturn into your commercial a=
pplications, Tarides offers professional development and support services. =
Feel free to contact us for more details.
</p>
</div>
</div>
</div>
</div>
<div id=3D"outline-container-5" class=3D"outline-2">
<h2 id=3D"5">Dune dev meeting</h2>
<div class=3D"outline-text-2" id=3D"text-5">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-dune-dev-meeting/14994/=
18">https://discuss.ocaml.org/t/ann-dune-dev-meeting/14994/18</a>
</p>
</div>
<div id=3D"outline-container-org49f5d09" class=3D"outline-3">
<h3 id=3D"org49f5d09">Etienne Marais announced</h3>
<div class=3D"outline-text-3" id=3D"text-org49f5d09">
<p>
Hi Dune enthusiasts! :smile:=20=20
</p>

<p>
We will hold our regular Dune dev meeting on <b>Wednesday, December, 11th a=
t 9:00</b> CET. As usual, the session will be one hour long.
</p>

<p>
Whether you are a maintainer, a regular contributor, a new joiner or just c=
urious, you are welcome to join: these discussions are opened! The goal of =
these meetings is to provide a place to discuss the ongoing work together a=
nd synchronise between the Dune developers ! :camel:=20
</p>
</div>
<div id=3D"outline-container-org4e49efb" class=3D"outline-4">
<h4 id=3D"org4e49efb">:calendar: Agenda</h4>
<div class=3D"outline-text-4" id=3D"text-org4e49efb">
<p>
The agenda is available on the<a href=3D"https://github.com/ocaml/dune/wiki=
/dev-meeting-2024-12-11"> meeting dedicated page</a>. Feel free to ask if y=
ou want to add more items in it.
</p>
</div>
</div>
<div id=3D"outline-container-orgbe46424" class=3D"outline-4">
<h4 id=3D"orgbe46424">:computer: Links</h4>
<div class=3D"outline-text-4" id=3D"text-orgbe46424">
<ul class=3D"org-ul">
<li>Meeting link:<a href=3D"https://us06web.zoom.us/j/85096877776?pwd=3DcWN=
hU1dHQ1ZNSjZuOUZCQ0h2by9Udz09"> zoom</a></li>
<li>Calendar event:<a href=3D"https://calendar.google.com/calendar/embed?sr=
c=3Dc_5cd698df6784e385b1cdcdc1dbca18c061faa96959a04781566d304dc9ec7319%40gr=
oup.calendar.google.com"> google calendar</a></li>
<li>Wiki with information and previous notes:<a href=3D"https://github.com/=
ocaml/dune/wiki#dev-meetings"> GitHub Wiki</a></li>
</ul>
</div>
</div>
</div>
</div>
<div id=3D"outline-container-6" class=3D"outline-2">
<h2 id=3D"6">Dune 3.17</h2>
<div class=3D"outline-text-2" id=3D"text-6">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-dune-3-17/15770/1">http=
s://discuss.ocaml.org/t/ann-dune-3-17/15770/1</a>
</p>
</div>
<div id=3D"outline-container-org009d09e" class=3D"outline-3">
<h3 id=3D"org009d09e">Etienne Marais announced</h3>
<div class=3D"outline-text-3" id=3D"text-org009d09e">
<p>
The Dune team is happy to announce the release of Dune <code>3.17.0</code>!=
 :tada:=20
</p>

<p>
Among the list of changes, this minor release enables the Dune cache by def=
ault for known-safe operations, adds out-of-the-box support for <code>Wasm_=
of_ocaml</code>, adds support for the~-H~ compiler flag introduced in OCaml=
 5.2, allows specifying code hosting services like Codeberg or GitLab organ=
isations, and gives the possibility to run individual tests with <code>dune=
 runtest</code>.
</p>

<p>
If you encounter a problem with this release, you can report it on the <a h=
ref=3D"https://github.com/ocaml/dune/issues">ocaml/dune</a> repository.
</p>
</div>
<div id=3D"outline-container-org084493c" class=3D"outline-4">
<h4 id=3D"org084493c">Changelog</h4>
<div class=3D"outline-text-4" id=3D"text-org084493c">
</div>
<ul class=3D"org-ul">
<li><a id=3D"org7e04917"></a>Added<br />
<div class=3D"outline-text-5" id=3D"text-org7e04917">
<ul class=3D"org-ul">
<li>Make Merlin/OCaml-LSP aware of "hidden" dependencies used by
<code>(implicit_transitive_deps false)</code> via the <code>-H</code> compi=
ler flag. (#10535, @voodoos)</li>
<li>Add support for the -H flag (introduced in OCaml compiler 5.2) in dune
(requires lang versions 3.17). This adaptation gives
the correct semantics for <code>(implicit_transitive_deps false)</code>.
(#10644, fixes #9333, ocsigen/tyxml#274, #2733, #4963, @MA0100)</li>
<li>Add support for specifying Gitlab organization repositories in <code>so=
urce</code>
stanzas (#10766, fixes #6723, @H-ANSEN)</li>
<li>New option to control jsoo sourcemap generation in env and executable s=
tanza
(#10777, fixes #10673, @hhugo)</li>
<li>One can now control jsoo compilation_mode inside an executable stanza
(#10777, fixes #10673, @hhugo)</li>
<li>Add support for specifying default values of the <code>authors</code>, =
<code>maintainers</code>, and
<code>license</code> stanzas of the <code>dune-project</code> file via the =
dune config file. Default
values are set using the <code>(project_defaults)</code> stanza (#10835, @H=
-ANSEN)</li>
<li>Add names to source tree events in performance traces (#10884, @jchavar=
ri)</li>
<li>Add <code>codeberg</code> as an option for defining project sources in =
dune-project
files. For example, <code>(source (codeberg user/repo))</code>. (#10904, @n=
lordell)</li>
<li><code>dune runtest</code> can now run individual tests with <code>dune =
runtest mytest.t</code>
(#11041, @Alizter).</li>
<li>Wasm_of_ocaml support (#11093, @vouillon)</li>
<li>Add a <code>coqdep_flags</code> field to the <code>coq</code> field of =
the <code>env</code> stanza, and to the
<code>coq.theory</code> stanza, allowing to configure <code>coqdep</code> f=
lags. (#11094,
@rlepigre)</li>
</ul>
</div>
</li>
<li><a id=3D"org438accd"></a>Fixed<br />
<div class=3D"outline-text-5" id=3D"text-org438accd">
<ul class=3D"org-ul">
<li>Show the context name for errors happening in non-default contexts.
(#10414, fixes #10378, @jchavarri)</li>
<li>Correctly declare dependencies of indexes so that they are rebuilt when
needed. (#10623, @voodoos)</li>
<li>Don't depend on coq-stdlib being installed when expanding variables
of the <code>coq.version</code> family (#10631, fixes #10629, @gares)</li>
<li>Error out if no files are found when using <code>copy_files</code>. (#1=
0649, @jchavarri)</li>
<li>Re_export dune-section private library in the dune-site library stanza,
in order to avoid failure when generating and building sites modules
with implicit_transitive_deps =3D false. (#10650, fixes #9661, @MA0100)</li>
<li>Expect test fixes: support multiple modes and fix dependencies when the=
re is
a custom runner (#10671, @vouillon)</li>
<li>In a <code>(library)</code> stanza with <code>(extra_objects)</code> an=
d <code>(foreign_stubs)</code>, avoid
double linking the extra object files in the final executable.
(#10783, fixes #10785, @nojb)</li>
<li>Map <code>(re_export)</code> library dependencies to the <code>exports<=
/code> field in <code>META</code> files,
and vice-versa. This field was proposed in to
<a href=3D"https://discuss.ocaml.org/t/proposal-a-new-exports-field-in-find=
lib-meta-files/13947">https://discuss.ocaml.org/t/proposal-a-new-exports-fi=
eld-in-findlib-meta-files/13947</a>.
The field is included in Dune-generated <code>META</code> files only when t=
he Dune lang
version is &gt;=3D 3.17.
(#10831, fixes #10830, @nojb)</li>
<li>Fix staged pps preprocessors on Windows (which were not working at all
previously) (#10869, fixes #10867, @nojb)</li>
<li>Fix <code>dune describe</code> when an executable is disabled with <cod=
e>enabled_if</code>.
(#10881, fixes #10779, @moyodiallo)</li>
<li>Fix an issue where C stubs would be rebuilt whenever the stderr of Dune=
 was
redirected. (#10883, fixes #10882, @nojb)</li>
<li>Fix the URL opened by the command <code>dune ocaml doc</code>. (#10897,=
 @gridbugs)</li>
<li>Fix the file referred to in the error/warning message displayed due to =
the
dune configuration version not supporting a particular configuration
stanza in use. (#10923, @H-ANSEN)</li>
<li>Fix <code>enabled_if</code> when it uses <code>env</code> variable. (#1=
0936, fixes #10905, @moyodiallo)</li>
<li>Fix exec -w for relative paths with &#x2013;root argument (#10982, @gri=
dbugs)</li>
<li>Do not ignore the <code>(locks ..)</code> field in the <code>test</code=
> and <code>tests</code> stanza
(#11081, @rgrinberg)</li>
<li>Tolerate files without extension when generating merlin rules.
(#11128, @anmonteiro)</li>
</ul>
</div>
</li>
<li><a id=3D"orgad7fc58"></a>Changed<br />
<div class=3D"outline-text-5" id=3D"text-orgad7fc58">
<ul class=3D"org-ul">
<li>Remove all remnants of the experimental <code>patch-back-source-tree</c=
ode>. (#10771,
@rgrinberg)</li>
<li>Change the preset value for author and maintainer fields in the
<code>dune-project</code> file to encourage including emails. (#10848, @pun=
chagan)</li>
<li>Tweak the preset value for tags in the <code>dune-project</code> file t=
o hint at topics
not having a special meaning. (#10849, @punchagan)</li>
<li>Change some colors to improve readability in light-mode terminals
(#10890, @gridbugs)</li>
<li>Forward the linkall flag to jsoo in whole program compilation as well (=
#10935, @hhugo)</li>
<li>Configurator uses <code>pkgconf</code> as pkg-config implementation whe=
n available
and forwards it the <code>target</code> of <code>ocamlc -config</code>. (#1=
0937, @pirbo)</li>
<li>Enable Dune cache by default. Add a new Dune cache setting
<code>enabled-except-user-rules</code>, which enables the Dune cache, but e=
xcludes
user-written rules from it. This is a conservative choice that can avoid
breaking rules whose dependencies are not correctly specified. This is the
current default. (#10944, #10710, @nojb, @ElectreAAS)</li>
<li>Do not add <code>dune</code> dependency in <code>dune-project</code> wh=
en creating projects with
<code>dune init proj</code>. The Dune dependency is implicitely added when =
generating
opam files (#11129, @Leonidas-from-XIV)</li>
</ul>
</div>
</li>
</ul>
</div>
</div>
</div>
<div id=3D"outline-container-7" class=3D"outline-2">
<h2 id=3D"7">Spec and interface to declare dependencies in an OCaml script<=
/h2>
<div class=3D"outline-text-2" id=3D"text-7">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/spec-and-interface-to-decla=
re-dependencies-in-an-ocaml-script/15772/1">https://discuss.ocaml.org/t/spe=
c-and-interface-to-declare-dependencies-in-an-ocaml-script/15772/1</a>
</p>
</div>
<div id=3D"outline-container-org5889ac5" class=3D"outline-3">
<h3 id=3D"org5889ac5">jbeckford announced</h3>
<div class=3D"outline-text-3" id=3D"text-org5889ac5">
<p>
This is the fourth article in the MlFront series. If you are interested in =
scripting frameworks that can download source code and bytecode, and inter-=
operate while doing so, please read:
</p>

<p>
<a href=3D"https://diskuv.com/mlfront/overview-4/">https://diskuv.com/mlfro=
nt/overview-4/</a>
</p>
</div>
<div id=3D"outline-container-org1851419" class=3D"outline-4">
<h4 id=3D"org1851419">TLDR</h4>
<div class=3D"outline-text-4" id=3D"text-org1851419">
<p>
<i>(Critical, verbatim snippets from article)</i>
</p>

<p>
I have an old opam package <a href=3D"https://ocaml.org/p/DkSDKFFIOCaml_Std=
/latest">DkSDKFFIOCaml_Std</a> that is a low-level bridge between OCaml and=
 other programming languages. It can be extraordinarily difficult to build,=
 so I made it a mix of pure OCaml source code and prebuilt library download=
s. Today I'll describe how embedded OCaml dependencies like the following <=
i>simplifies the build process</i>:
</p>

<div class=3D"org-src-container">
<pre class=3D"src src-ocaml"><span style=3D"color: #000000; font-weight: bo=
ld;">module</span> _ =3D <span style=3D"color: #242521; background-color: #=
fcf7ef;">DkSDKFFI_OCaml</span>
<span style=3D"color: #4f677f; font-style: italic;">(** The bridge between =
OCaml and other programming languages.</span>

<span style=3D"color: #4f677f; font-style: italic;">    </span><span style=
=3D"color: #00824f;">{[</span> <span style=3D"color: #242521; background-co=
lor: #fcf7ef;">`v1</span> [
          <span style=3D"color: #242521; background-color: #fcf7ef;">`sec</=
span> [ <span style=3D"color: #242521; background-color: #fcf7ef;">`scheme<=
/span> "dkcoder" ];
          <span style=3D"color: #242521; background-color: #fcf7ef;">`blib<=
/span> ["https://gitlab.com/api/v4/projects/62703194/packages/generic/<span=
 style=3D"color: #a52a2a;">@</span><span style=3D"color: #242521; backgroun=
d-color: #fcf7ef;">DKML_TARGET_ABI</span><span style=3D"color: #a52a2a;">@/=
</span>2.1.4/<span style=3D"color: #a52a2a;">@</span><span style=3D"color: =
#242521; background-color: #fcf7ef;">DKML_TARGET_ABI</span><span style=3D"c=
olor: #a52a2a;">@-</span>4.14.2-<span style=3D"color: #242521; background-c=
olor: #fcf7ef;">DkSDKFFI_OCaml</span>-2.1.4-none.blib.zip"];
          <span style=3D"color: #242521; background-color: #fcf7ef;">`clib<=
/span> ["https://gitlab.com/api/v4/projects/62703194/packages/generic/<span=
 style=3D"color: #a52a2a;">@</span><span style=3D"color: #242521; backgroun=
d-color: #fcf7ef;">DKML_TARGET_ABI</span><span style=3D"color: #a52a2a;">@/=
</span>2.1.4/<span style=3D"color: #a52a2a;">@</span><span style=3D"color: =
#242521; background-color: #fcf7ef;">DKML_TARGET_ABI</span><span style=3D"c=
olor: #a52a2a;">@-</span>4.14.2-<span style=3D"color: #242521; background-c=
olor: #fcf7ef;">DkSDKFFI_OCaml</span>-2.1.4-none.clib.zip"]
        ] <span style=3D"color: #00824f;">]}</span><span style=3D"color: #4=
f677f; font-style: italic;"> *)</span>

<span style=3D"color: #8f6f4a; font-style: italic;">(* </span><span style=
=3D"color: #8f6f4a; font-style: italic;">And use what you imported ...</spa=
n><span style=3D"color: #8f6f4a; font-style: italic;"> *)</span>
<span style=3D"color: #000000; font-weight: bold;">let</span> () =3D
   <span style=3D"color: #557400; font-weight: bold;">ignore</span> (<span =
style=3D"color: #444fcf;">DkSDKFFI_OCaml.Com.</span>create_c ())
</pre>
</div>

<p>
&#x2014;
</p>

<p>
One set of designs I created are the <code>MlFront_Archive</code> package f=
ormats:
</p>

<ol class=3D"org-ol">
<li><code>*.blib.zip</code> - This is the bytecode archive. It is a zip fil=
e containing <code>.cma</code>, <code>.cmi</code> and some other critical m=
etadata.</li>
<li><code>*.clib.zip</code> - This is the C library archive. It is a zip fi=
le containing <code>.so</code> or <code>.dylib</code> or <code>.dll</code> =
shared libraries, and also the corresponding static libraries.</li>
</ol>
<p>
The important concept is that <code>*.blib.zip</code> and <code>*.clib.zip<=
/code> for OCaml are analogous to <code>*.jar</code> files for Java. The de=
sign is available at:
</p>

<ul class=3D"org-ul">
<li>Format of packages: <a href=3D"https://gitlab.com/diskuv/registries/pub=
lic-packages#generic-registry-layout">https://gitlab.com/diskuv/registries/=
public-packages#generic-registry-layout</a></li>
<li>Binaries to unpack the packages: <a href=3D"https://gitlab.com/dkml/bui=
ld-tools/MlFront_Archive/-/releases">https://gitlab.com/dkml/build-tools/Ml=
Front_Archive/-/releases</a></li>
</ul>

<p>
&#x2014;
</p>

<p>
The remote specification design is in the <code>MlFront_Config</code> libra=
ry:
</p>

<ul class=3D"org-ul">
<li>code: <a href=3D"https://gitlab.com/dkml/build-tools/MlFront#mlfront">h=
ttps://gitlab.com/dkml/build-tools/MlFront#mlfront</a></li>
<li>odoc: <a href=3D"https://dkml.gitlab.io/build-tools/MlFront/MlFront_Con=
fig/MlFront_Config/RemoteSpec/index.html">https://dkml.gitlab.io/build-tool=
s/MlFront/MlFront_Config/MlFront_Config/RemoteSpec/index.html</a></li>
</ul>
</div>
</div>
</div>
</div>
<div id=3D"outline-container-8" class=3D"outline-2">
<h2 id=3D"8">Other OCaml News</h2>
<div class=3D"outline-text-2" id=3D"text-8">
</div>
<div id=3D"outline-container-org70ba81b" class=3D"outline-3">
<h3 id=3D"org70ba81b">From the ocaml.org blog</h3>
<div class=3D"outline-text-3" id=3D"text-org70ba81b">
<p>
Here are links from many OCaml blogs aggregated at <a href=3D"https://ocaml=
.org/blog/">the ocaml.org blog</a>.
</p>

<ul class=3D"org-ul">
<li><a href=3D"https://frama-c.com/fc-versions/zinc.html">Release of Frama-=
C 30.0 (Zinc)</a></li>
<li><a href=3D"https://tarides.com/blog/2024-12-04-irmin-on-mirageos-under-=
the-hood-with-notafs">Irmin on MirageOS: Under-the-Hood With Notafs</a></li>
</ul>
</div>
</div>
</div>
<div id=3D"outline-container-org277a245" class=3D"outline-2">
<h2 id=3D"org277a245">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-org277a245">
<p>
If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@polytec=
hnique.org">send me a message</a> and I'll mail it to you, or go take a loo=
k at <a href=3D"https://alan.petitepomme.net/cwn/">the archive</a> or the <=
a href=3D"https://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archive=
s</a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe to the=
 <a href=3D"https://sympa.inria.fr/sympa/info/caml-list">caml-list</a>.
</p>

<div class=3D"authorname" id=3D"orgac2e355">
<p>
<a href=3D"https://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--=-=-=--

