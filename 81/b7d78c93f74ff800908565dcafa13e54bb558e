Return-Path: <caml-list-owner@inria.fr>
Received-SPF: Pass (mailfrom) identity=mailfrom; client-ip=192.134.164.83; helo=mail2-relais-roc.national.inria.fr; envelope-from=caml-list-owner@inria.fr; receiver=<UNKNOWN> 
Authentication-Results: plum; dmarc=pass (p=none dis=none) header.from=inria.fr
Authentication-Results: plum.tunbury.org;
	dkim=pass (1024-bit key; unprotected) header.d=inria.fr header.i=@inria.fr header.a=rsa-sha256 header.s=dc header.b=Ij+n6ikj;
	dkim=fail reason="signature verification failed" (1024-bit key) header.d=inria.fr header.i=@inria.fr header.a=rsa-sha256 header.s=dc header.b=gc1HbS6w;
	dkim-atps=neutral
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by plum.tunbury.org (Postfix) with ESMTPS id 31FEDB80123
	for <caml-list@tunbury.org>; Fri,  8 Nov 2024 13:45:51 +0000 (GMT)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
  d=inria.fr; s=dc;
  h=date:from:to:message-id:mime-version:subject:reply-to:
   sender:list-id:list-help:list-subscribe:list-unsubscribe:
   list-post:list-owner:list-archive;
  bh=2VBlWYBeNHcW5IM2CnmzmZNP3sdI5VkBNwaXtxgvKK4=;
  b=Ij+n6ikjXxeycQcgwd1xQU1hiv7ByhxSKX/7CYUtBvv34sxBSyxHz5eq
   InfkjO+oHzNNnHdrtWdm+EvQ9Hiv49V19dpGkbjKArJvgdrVK2V3CCTD8
   78SghscmMcOIrFoPfS4DwWsdQ/j6r1iCFYjK5kofAMDQ09Pd2cuw7/71+
   M=;
Received-SPF: Pass (mail2-relais-roc.national.inria.fr: domain of
  caml-list-owner@inria.fr designates 128.93.162.160 as
  permitted sender) identity=mailfrom;
  client-ip=128.93.162.160;
  receiver=mail2-relais-roc.national.inria.fr;
  envelope-from="caml-list-owner@inria.fr";
  x-sender="caml-list-owner@inria.fr"; x-conformance=spf_only;
  x-record-type="v=spf1"; x-record-text="v=spf1
  include:mailout.safebrands.com a:basic-mail.safebrands.com
  a:basic-mail01.safebrands.com a:basic-mail02.safebrands.com
  ip4:128.93.142.0/24 ip4:192.134.164.0/24 ip4:128.93.162.160
  ip4:128.93.162.3 ip4:128.93.162.88 ip4:89.107.174.7 mx ~all"
Received-SPF: None (mail2-relais-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@sympa.inria.fr) identity=helo;
  client-ip=128.93.162.160;
  receiver=mail2-relais-roc.national.inria.fr;
  envelope-from="caml-list-owner@inria.fr";
  x-sender="postmaster@sympa.inria.fr"; x-conformance=spf_only
Authentication-Results: mail2-relais-roc.national.inria.fr; spf=Pass smtp.mailfrom=caml-list-owner@inria.fr; spf=None smtp.helo=postmaster@sympa.inria.fr; dkim=hardfail (signature did not verify [final]) header.i=@inria.fr
X-IronPort-AV: E=Sophos;i="6.12,138,1728943200"; 
   d="scan'208,217";a="192947411"
Received: from prod-listesu18.inria.fr (HELO sympa.inria.fr) ([128.93.162.160])
  by mail2-relais-roc.national.inria.fr with ESMTP; 08 Nov 2024 14:45:48 +0100
Received: by sympa.inria.fr (Postfix, from userid 20132)
	id 34745E013D; Fri,  8 Nov 2024 14:45:46 +0100 (CET)
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 91018E0D33
	for <caml-list@sympa.inria.fr>; Fri,  8 Nov 2024 14:45:42 +0100 (CET)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
  d=inria.fr; s=dc;
  h=date:from:to:message-id:subject:mime-version;
  bh=2VBlWYBeNHcW5IM2CnmzmZNP3sdI5VkBNwaXtxgvKK4=;
  b=gc1HbS6wULLDBHjvhCweVvNxw3iB9T38RhFkOgNANsfKKrpaxN3PcefR
   dpahhHRcBzYuAGFN7BTDe6JyezNqdiQs4xyy83i9JMgjeEBVVvtaKPeG4
   fGT0B1EOSiGM3xPR57kX8RjtdpHRa+dUF9efdawFIRUtrFfIryir3jd/M
   E=;
X-IronPort-AV: E=Sophos;i="6.12,138,1728943200"; 
   d="scan'208,217";a="192947311"
X-MGA-submission: =?us-ascii?q?MDGJt6gCu9xyqm7HQ1sYdQoiwr0kgyTKgLLAB3?=
 =?us-ascii?q?otqoEN7FlxdAaO4hJkAOU1wrQD5aLtUWzrZOGbgPTmdMs6A7HKGTRBpI?=
 =?us-ascii?q?SkYj7vcJiyOr3xIGW0HHe3KUJs0uOk9zeuCzzM7sGqUeAeKjGSrScttc?=
 =?us-ascii?q?f26c/srUZWl6btdGqFFcty3g=3D=3D?=
Received: from zcs2-store1.inria.fr ([128.93.142.3])
  by mail2-relais-roc.national.inria.fr with ESMTP; 08 Nov 2024 14:45:18 +0100
Date: Fri, 8 Nov 2024 14:45:18 +0100 (CET)
From: Florian Angeletti <florian.angeletti@inria.fr>
To: caml-list <caml-list@inria.fr>
Message-ID: <286648225.21214484.1731073518542.JavaMail.zimbra@inria.fr>
MIME-Version: 1.0
Content-Type: multipart/alternative; 
	boundary="=_8645f8e5-32a8-400e-8a5b-35e9b9d88126"
X-Originating-IP: [128.93.64.106]
X-Mailer: Zimbra 10.0.9_GA_4654 (ZimbraWebClient - FF131 (Linux)/10.0.9_GA_4654)
Thread-Index: PgKHD5IuAClsI0UeudnKvLmJ87uzqQ==
Thread-Topic: First release candidate for OCaml 5.2.1
Subject: [Caml-list] First release candidate for OCaml 5.2.1
Reply-To: Florian Angeletti <florian.angeletti@inria.fr>
X-Loop: caml-list@inria.fr
X-Sequence: 19197
Errors-To: caml-list-owner@inria.fr
Precedence: list
Precedence: bulk
Sender: caml-list-request@inria.fr
X-no-archive: yes
List-Id: <caml-list.inria.fr>
List-Help: <mailto:sympa_inria@inria.fr?subject=help>
List-Subscribe: <mailto:sympa_inria@inria.fr?subject=subscribe%20caml-list>
List-Unsubscribe: <mailto:sympa_inria@inria.fr?subject=unsubscribe%20caml-list>
List-Post: <mailto:caml-list@inria.fr>
List-Owner: <mailto:caml-list-request@inria.fr>
List-Archive: <https://sympa.inria.fr/sympa/arc/caml-list>
Archived-At: <https://sympa.inria.fr/sympa/arcsearch_id/caml-list/2024-11/286648225.21214484.1731073518542.JavaMail.zimbra%40inria.fr>

--=_8645f8e5-32a8-400e-8a5b-35e9b9d88126
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

Dear OCaml users,=20

The release of OCaml version 5.2.1 is imminent.=20
OCaml 5.2.1 is a collection of safe but import runtime time bug fixes backp=
orted from=20
the 5.3 branch of OCaml. The full list of bug fixes is available below.=20

In order to ensure that the future release works as expected, we are planni=
ng to test=20
a release candidate during the upcoming week.=20

If you find any bugs, please report them here on GitHub at=20
[ https://github.com/ocaml/ocaml/issues | https://github.com/ocaml/ocaml/is=
sues ] .=20

Happy hacking,=20
Florian Angeletti=20

Installation Instructions=20
-------------------------------=20

The base compiler can be installed as an opam switch with the following com=
mands on opam 2.1:=20

opam update=20
opam switch create 5.2.1~rc1=20

The source code for the release candidate is available on=20

- GitHub: https://github.com/ocaml/ocaml/archive/5.2.1-rc1.tar.gz=20
- Inria archives: https://caml.inria.fr/pub/distrib/ocaml-5.2/ocaml-5.2.1~r=
c1.tar.gz=20

Fine-Tuned Compiler Configuration=20
----------------------------------------------=20

If you want to tweak the configuration of the compiler, you can switch to t=
he option variant with:=20

opam update=20
opam switch create <switch_name> ocaml-variants.5.2.1~rc1+options <option_l=
ist>=20

where `<option_list>` is a space-separated list of `ocaml-option-*` package=
s. For instance, for a `flambda` and `no-flat-float-array` switch:=20

opam switch create 5.2.1~rc1+flambda+nffa ocaml-variants.5.2.1~rc1+options =
ocaml-option-flambda ocaml-option-no-flat-float-array=20

All available options can be listed with `opam search ocaml-option`.=20

----------------------------------=20

Changes Since OCaml 5.2.0=20

- #13207(https://github.com/ocaml/ocaml/issues/13207): Be sure to reload th=
e register caching the exception handler in=20
caml_c_call and caml_c_call_stack_args, as its value may have been changed=
=20
if the OCaml stack is expanded during a callback.=20
(Miod Vallat, report by Vesa Karvonen, review by Gabriel Scherer and=20
Xavier Leroy)=20

- #13252(https://github.com/ocaml/ocaml/issues/13252): Rework register assi=
gnment in the interpreter code on m68k on Linux,=20
due to the %a5 register being used by Glibc.=20
(Miod Vallat, report by St=E9phane Glondu, review by Gabriel Scherer and=20
Xavier Leroy)=20

- #13268(https://github.com/ocaml/ocaml/issues/13268): Fix a call to test i=
n configure.ac that was causing errors when=20
LDFLAGS contains several words.=20
(St=E9phane Glondu, review by Miod Vallat)=20

- #13234(https://github.com/ocaml/ocaml/issues/13234), [#13267](https://git=
hub.com/ocaml/ocaml/issues/13267): Open runtime events file in read-write m=
ode on armel=20
(armv5) systems due to atomic operations limitations on that=20
platform.=20
(St=E9phane Glondu, review by Miod Vallat and Vincent Laviron)=20

- #13188(https://github.com/ocaml/ocaml/issues/13188): fix races in the FFI=
 code coming from the use of Int_val(...)=20
on rooted values inside blocking questions / without the runtime lock.=20
(Calling Int_val(...) on non-rooted immediates is fine, but any=20
access to rooted values must be done outside blocking sections /=20
with the runtime lock.)=20
(Etienne Millon, review by Gabriel Scherer, Jan Midtgaard, Olivier Nicole)=
=20

- #13318(https://github.com/ocaml/ocaml/issues/13318): Fix regression in GC=
 alarms, and fix them for flambda.=20
(Guillaume Munch-Maccagnoni, report by Benjamin Monate, review by=20
Vincent Laviron and Gabriel Scherer)=20

- #13140(https://github.com/ocaml/ocaml/issues/13140): POWER back-end: fix =
issue with call to `caml_call_realloc_stack`=20
from a DLL=20
(Xavier Leroy, review by Miod Vallat)=20

- #13370(https://github.com/ocaml/ocaml/issues/13370): Fix a low-probabilit=
y crash when calling Gc.counters.=20
(Demi Marie Obenour, review by Gabriel Scherer)=20

- #13402(https://github.com/ocaml/ocaml/issues/13402), #13512(https://githu=
b.com/ocaml/ocaml/issues/13512), #13549(https://github.com/ocaml/ocaml/issu=
es/13549), #13553(https://github.com/ocaml/ocaml/issues/13553): Revise byte=
code implementation of callbacks=20
so that it no longer produces dangling registered bytecode fragments.=20
(Xavier Leroy, report by Jan Midtgaard, analysis by Stephen Dolan,=20
review by Miod Vallat)=20

- #13502(https://github.com/ocaml/ocaml/issues/13502): Fix misindexing rela=
ted to `Gc.finalise_last` that could prevent=20
finalisers from being run.=20
(Nick Roberts, review by Mark Shinwell)=20

- #13520(https://github.com/ocaml/ocaml/issues/13520): Fix compilation of n=
ative-code version of systhreads. Bytecode fields=20
were being included in the thread descriptors.=20
(David Allsopp, review by S=E9bastien Hinderer and Miod Vallat)=20

--=_8645f8e5-32a8-400e-8a5b-35e9b9d88126
Content-Type: text/html; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable

<html><body><div style=3D"font-family: arial, helvetica, sans-serif; font-s=
ize: 12pt; color: #000000"><div>Dear OCaml users,<br data-mce-bogus=3D"1"><=
/div><div><br data-mce-bogus=3D"1"></div><div>The release of OCaml version =
5.2.1 is imminent.<br>OCaml 5.2.1 is a collection of safe but import runtim=
e time bug fixes backported from</div><div>the 5.3 branch of OCaml. The ful=
l list of bug fixes is available below.<br><br>In order to ensure that the =
future release works as expected, we are planning to test</div><div>a relea=
se candidate during the upcoming week.<br><br>If you find any bugs, please =
report them here on GitHub at </div><div><a href=3D"https://github.com/ocam=
l/ocaml/issues">https://github.com/ocaml/ocaml/issues</a> .<br><br>Happy ha=
cking,<br></div><div>Florian Angeletti<br data-mce-bogus=3D"1"></div><div><=
br data-mce-bogus=3D"1"></div><div>Installation Instructions</div><div styl=
e=3D"">-------------------------------<br><br>The base compiler can be inst=
alled as an opam switch with the following commands on opam 2.1:<br><br>&nb=
sp;&nbsp;&nbsp; opam update<br>&nbsp;&nbsp;&nbsp; opam switch create 5.2.1~=
rc1<br><br>The source code for the release candidate is available on<br><br=
>- GitHub: https://github.com/ocaml/ocaml/archive/5.2.1-rc1.tar.gz<br>- Inr=
ia archives: https://caml.inria.fr/pub/distrib/ocaml-5.2/ocaml-5.2.1~rc1.ta=
r.gz<br><br>Fine-Tuned Compiler Configuration<br>--------------------------=
--------------------<br><br>If you want to tweak the configuration of the c=
ompiler, you can switch to the option variant with:<br><br>&nbsp;&nbsp;&nbs=
p;&nbsp; opam update<br>&nbsp;&nbsp;&nbsp;&nbsp; opam switch create &lt;swi=
tch_name&gt; ocaml-variants.5.2.1~rc1+options &lt;option_list&gt;<br><br>wh=
ere `&lt;option_list&gt;` is a space-separated list of `ocaml-option-*` pac=
kages. For instance, for a `flambda` and `no-flat-float-array` switch:<br><=
br>&nbsp;&nbsp;&nbsp;&nbsp; opam switch create 5.2.1~rc1+flambda+nffa ocaml=
-variants.5.2.1~rc1+options ocaml-option-flambda ocaml-option-no-flat-float=
-array<br><br>All available options can be listed with `opam search ocaml-o=
ption`.<br><br>----------------------------------<br><br>Changes Since OCam=
l 5.2.0<br></div><div style=3D""><br data-mce-bogus=3D"1"></div><div style=
=3D"">&nbsp; - #13207(https://github.com/ocaml/ocaml/issues/13207): Be sure=
 to reload the register caching the exception handler in<br>&nbsp;&nbsp;&nb=
sp; caml_c_call and caml_c_call_stack_args, as its value may have been chan=
ged<br>&nbsp;&nbsp;&nbsp; if the OCaml stack is expanded during a callback.=
<br>&nbsp;&nbsp;&nbsp; (Miod Vallat, report by Vesa Karvonen, review by Gab=
riel Scherer and<br>&nbsp;&nbsp;&nbsp;&nbsp; Xavier Leroy)<br>&nbsp; <br>&n=
bsp; - #13252(https://github.com/ocaml/ocaml/issues/13252): Rework register=
 assignment in the interpreter code on m68k on Linux,<br>&nbsp;&nbsp;&nbsp;=
 due to the %a5 register being used by Glibc.<br>&nbsp;&nbsp;&nbsp; (Miod V=
allat, report by St=E9phane Glondu, review by Gabriel Scherer and<br>&nbsp;=
&nbsp;&nbsp;&nbsp; Xavier Leroy)<br>&nbsp; <br>&nbsp; - #13268(https://gith=
ub.com/ocaml/ocaml/issues/13268): Fix a call to test in configure.ac that w=
as causing errors when<br>&nbsp;&nbsp;&nbsp; LDFLAGS contains several words=
.<br>&nbsp;&nbsp;&nbsp; (St=E9phane Glondu, review by Miod Vallat)<br>&nbsp=
; <br>&nbsp; - #13234(https://github.com/ocaml/ocaml/issues/13234), [#13267=
](https://github.com/ocaml/ocaml/issues/13267): Open runtime events file in=
 read-write mode on armel<br>&nbsp;&nbsp;&nbsp; (armv5) systems due to atom=
ic operations limitations on that<br>&nbsp;&nbsp;&nbsp; platform.<br>&nbsp;=
&nbsp;&nbsp; (St=E9phane Glondu, review by Miod Vallat and Vincent Laviron)=
<br>&nbsp; <br>&nbsp; - #13188(https://github.com/ocaml/ocaml/issues/13188)=
: fix races in the FFI code coming from the use of Int_val(...)<br>&nbsp;&n=
bsp;&nbsp; on rooted values inside blocking questions / without the runtime=
 lock.<br>&nbsp;&nbsp;&nbsp; (Calling Int_val(...) on non-rooted immediates=
 is fine, but any<br>&nbsp;&nbsp;&nbsp;&nbsp; access to rooted values must =
be done outside blocking sections /<br>&nbsp;&nbsp;&nbsp;&nbsp; with the ru=
ntime lock.)<br>&nbsp;&nbsp;&nbsp; (Etienne Millon, review by Gabriel Scher=
er, Jan Midtgaard, Olivier Nicole)<br>&nbsp; <br>&nbsp; - #13318(https://gi=
thub.com/ocaml/ocaml/issues/13318): Fix regression in GC alarms, and fix th=
em for flambda.<br>&nbsp;&nbsp;&nbsp; (Guillaume Munch-Maccagnoni, report b=
y Benjamin Monate, review by<br>&nbsp;&nbsp;&nbsp;&nbsp; Vincent Laviron an=
d Gabriel Scherer)<br>&nbsp; <br>&nbsp; - #13140(https://github.com/ocaml/o=
caml/issues/13140): POWER back-end: fix issue with call to `caml_call_reall=
oc_stack`<br>&nbsp;&nbsp;&nbsp; from a DLL<br>&nbsp;&nbsp;&nbsp; (Xavier Le=
roy, review by Miod Vallat)<br>&nbsp; <br>&nbsp; - #13370(https://github.co=
m/ocaml/ocaml/issues/13370): Fix a low-probability crash when calling Gc.co=
unters.<br>&nbsp;&nbsp;&nbsp; (Demi Marie Obenour, review by Gabriel Schere=
r)<br>&nbsp; <br>&nbsp; - #13402(https://github.com/ocaml/ocaml/issues/1340=
2), #13512(https://github.com/ocaml/ocaml/issues/13512), #13549(https://git=
hub.com/ocaml/ocaml/issues/13549), #13553(https://github.com/ocaml/ocaml/is=
sues/13553): Revise bytecode implementation of callbacks<br>&nbsp;&nbsp;&nb=
sp; so that it no longer produces dangling registered bytecode fragments.<b=
r>&nbsp;&nbsp;&nbsp; (Xavier Leroy, report by Jan Midtgaard, analysis by St=
ephen Dolan,<br>&nbsp;&nbsp;&nbsp;&nbsp; review by Miod Vallat)<br>&nbsp; <=
br>&nbsp; - #13502(https://github.com/ocaml/ocaml/issues/13502): Fix misind=
exing related to `Gc.finalise_last` that could prevent<br>&nbsp;&nbsp;&nbsp=
; finalisers from being run.<br>&nbsp;&nbsp;&nbsp; (Nick Roberts, review by=
 Mark Shinwell)<br>&nbsp; <br>&nbsp; - #13520(https://github.com/ocaml/ocam=
l/issues/13520): Fix compilation of native-code version of systhreads. Byte=
code fields<br>&nbsp;&nbsp;&nbsp; were being included in the thread descrip=
tors.<br>&nbsp;&nbsp;&nbsp; (David Allsopp, review by S=E9bastien Hinderer =
and Miod Vallat)<br data-mce-bogus=3D"1"></div></div></body></html>
--=_8645f8e5-32a8-400e-8a5b-35e9b9d88126--
