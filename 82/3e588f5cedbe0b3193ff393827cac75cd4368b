Received: from Hermes.metastack.local (172.16.0.8) by Hermes.metastack.local
 (172.16.0.8) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.23 via Mailbox
 Transport; Thu, 16 Mar 2023 10:13:03 +0000
Received: from Hermes.metastack.local (172.16.0.8) by Hermes.metastack.local
 (172.16.0.8) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.23; Thu, 16 Mar
 2023 10:13:03 +0000
Received: from exchange.romulus.metastack.com (172.16.0.21) by
 Hermes.metastack.local (172.16.0.8) with Microsoft SMTP Server
 (version=TLS1_0, cipher=TLS_RSA_WITH_AES_256_CBC_SHA) id 15.1.2507.23 via
 Frontend Transport; Thu, 16 Mar 2023 10:13:03 +0000
Received: from romulus.metastack.com ([172.16.0.20])
	by exchange.romulus.metastack.com (8.14.2/8.14.2) with ESMTP id 32GACG07006069
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <dra@metastack.local>; Thu, 16 Mar 2023 10:12:16 GMT
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by romulus.metastack.com (8.14.2/8.14.2) with ESMTP id 32GAC9wb006043
	for <dra-news@metastack.com>; Thu, 16 Mar 2023 10:12:09 GMT
Received: from prod-listesu18.inria.fr (HELO sympa.inria.fr) ([128.93.162.160])
  by mail2-relais-roc.national.inria.fr with ESMTP; 16 Mar 2023 11:12:08 +0100
Received: by sympa.inria.fr (Postfix, from userid 20132)
	id 6CD09E0C97; Thu, 16 Mar 2023 11:12:08 +0100 (CET)
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id DF496E0010
	for <caml-list@sympa.inria.fr>; Thu, 16 Mar 2023 11:12:05 +0100 (CET)
Received: from deinprogramm.de ([168.119.170.211])
  by mail3-smtp-sop.national.inria.fr with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 16 Mar 2023 11:12:05 +0100
Received: from surfer-172-29-54-113-hotspot.internet-for-guests.com (pd95cc274.dip0.t-ipconnect.de [217.92.194.116])
	(using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
	 key-exchange ECDHE (P-256) server-signature RSA-PSS (2048 bits) server-digest SHA256)
	(No client certificate requested)
	by deinprogramm.de (Postfix) with ESMTPSA id 56E21842B0C
	for <caml-list@inria.fr>; Thu, 16 Mar 2023 11:12:03 +0100 (CET)
From: Michael Sperber <sperber@deinprogramm.de>
To: "caml-list@inria.fr" <caml-list@inria.fr>
Subject: [Caml-list] Call for Papers: ACM Workshop on Functional Art, Music,
 Modelling and Design (Deadline June 1)
Thread-Topic: [Caml-list] Call for Papers: ACM Workshop on Functional Art,
 Music, Modelling and Design (Deadline June 1)
Thread-Index: AQHZV+/kCv9qdM8h0kagg6TiNCftug==
Sender: "caml-list-request@inria.fr" <caml-list-request@inria.fr>
X-MS-Exchange-MessageSentRepresentingType: 2
Date: Thu, 16 Mar 2023 10:12:03 +0000
Message-ID:
	<y9lr0tpgg3w.fsf@surfer-172-29-54-113-hotspot.internet-for-guests.com>
Keywords: Sent to dra-news@metastack.com,Marked bulk,MetaStack -
 Lists,MetaStack
List-Help: <mailto:sympa_inria@inria.fr?subject=help>
List-Subscribe: <mailto:sympa_inria@inria.fr?subject=subscribe%20caml-list>
List-Unsubscribe:
	<mailto:sympa_inria@inria.fr?subject=unsubscribe%20caml-list>
Reply-To: Michael Sperber <sperber@deinprogramm.de>
Content-Language: en-GB
X-MS-Exchange-Organization-AuthAs: Anonymous
X-MS-Exchange-Organization-AuthSource: Hermes.metastack.local
X-MS-Has-Attach:
X-Auto-Response-Suppress: All
X-MS-Exchange-Organization-Network-Message-Id:
	e6b5110f-ae15-4c10-985c-08db26070735
X-MS-TNEF-Correlator:
X-MS-Exchange-Organization-RecordReviewCfmType: 0
x-scanned-by: MIMEDefang 2.65 on 62.31.23.242
received-spf: None (mail2-relais-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@sympa.inria.fr) identity=helo;  client-ip=128.93.162.160;
  receiver=mail2-relais-roc.national.inria.fr;
  envelope-from="caml-list-owner@inria.fr";
  x-sender="postmaster@sympa.inria.fr"; x-conformance=spf_only
x-ironport-av: E=Sophos;i="5.98,265,1673910000";    d="scan'208";a="50358912"
x-ironport-anti-spam-filtered: true
x-loop: caml-list@inria.fr
x-no-archive: yes
Content-Type: text/plain; charset="utf-8"
Content-ID: <F75922D324559147898FC441FCA11697@metastack.local>
Content-Transfer-Encoding: base64
MIME-Version: 1.0

DQpEZWFyIGFsbCwNCg0KV2UncmUgZGVsaWdodGVkIHRvIGFubm91bmNlIHRoYXQgdGhlIGZpcnN0
IEFDTSBTSUdQTEFOIFdvcmtzaG9wIG9uDQoiRnVuY3Rpb25hbCBTb2Z0d2FyZSBBcmNoaXRlY3R1
cmUgLSBGUCBpbiB0aGUgTGFyZ2UiIHdpbGwgYmUgaGVsZA0KaW4gU2VhdHRsZSwgVVNBIGluIFNl
cHRlbWJlciAyMDIzLCBjby1sb2NhdGVkIHdpdGggdGhlIElDRlAgY29uZmVyZW5jZS4NCg0KUGxl
YXNlIHNoYXJlLCBhbmQgc3VibWl0IHlvdXIgYmVzdCBwYXBlcnMsIGV4cGVyaWVuY2UgcmVwb3J0
cywgYW5kDQphcmNoaXRlY3R1cmFsIHBlYXJscyBvbiBsYXJnZS1zY2FsZSBmdW5jdGlvbmFsIHBy
b2dyYW1taW5nIQ0KDQpCZXN0IHdpc2hlcywNCg0KTWlrZSBTcGVyYmVyIGFuZCBHcmFoYW0gSHV0
dG9uDQpQcm9ncmFtIENoYWlycywgRlVOQVJDSCAyMDIzDQoNCg0KPT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0KDQog
ICAgICAgICAgICAgICAqKiogRlVOQVJDSCAyMDIzIC0tIENBTEwgRk9SIFBBUEVSUyAqKioNCg0K
ICAgICAgICAgICAgICAgICAgVGhlIEZpcnN0IEFDTSBTSUdQTEFOIFdvcmtzaG9wIG9uDQogICAg
ICAgICBGdW5jdGlvbmFsIFNvZnR3YXJlIEFyY2hpdGVjdHVyZSAtIEZQIGluIHRoZSBMYXJnZQ0K
DQogICAgICAgICAgICA4dGggU2VwdGVtYmVyIDIwMjMsIFNlYXR0bGUsIFdhc2hpbmd0b24sIFVT
QQ0KICAgICAgICAgICAgICAgICAgICAgIENvLWxvY2F0ZWQgd2l0aCBJQ0ZQIDIwMjMNCg0KICAg
ICAgICAgICAgICAgICAgICBodHRwczovL3Rpbnl1cmwuY29tL0ZVTkFSQ0gyMw0KDQo9PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09DQoNClRJTUVMSU5FOg0KDQpQYXBlciBzdWJtaXNzaW9uCTFzdCBKdW5lIDIwMjMNCkF1
dGhvciBub3RpZmljYXRpb24JMjh0aCBKdW5lIDIwMjMNCkNhbWVyYSByZWFkeSBjb3B5CTE4dGgg
SnVseSAyMDIzDQpXb3Jrc2hvcAkJOHRoIFNlcHQgMjAyMyAoZGF0ZSB0byBiZSBjb25maXJtZWQp
DQoNCkJBQ0tHUk9VTkQ6DQoNCiJGdW5jdGlvbmFsIFNvZnR3YXJlIEFyY2hpdGVjdHVyZSIgcmVm
ZXJzIHRvIG1ldGhvZHMgb2YgY29uc3RydWN0aW9uDQphbmQgc3RydWN0dXJlIG9mIGxhcmdlIGFu
ZCBsb25nLWxpdmVkIHNvZnR3YXJlIHByb2plY3RzIHRoYXQgYXJlDQppbXBsZW1lbnRlZCBpbiBm
dW5jdGlvbmFsIGxhbmd1YWdlcyBhbmQgcmVsZWFzZWQgdG8gcmVhbCB1c2VycywNCnR5cGljYWxs
eSBpbiBpbmR1c3RyeS4gIFRoZSBnb2FscyBmb3IgdGhlIHdvcmtzaG9wIGFyZToNCg0KLSBUbyBh
c3NlbWJsZSBhIGNvbW11bml0eSBpbnRlcmVzdGVkIGluIHNvZnR3YXJlIGFyY2hpdGVjdHVyZQ0K
ICB0ZWNobmlxdWVzIGFuZCB0ZWNobm9sb2dpZXMgc3BlY2lmaWMgdG8gZnVuY3Rpb25hbCBwcm9n
cmFtbWluZzsNCg0KLSBUbyBpZGVudGlmeSwgY2F0ZWdvcml6ZSwgYW5kIGRvY3VtZW50IHRvcGlj
cyByZWxldmFudCB0bw0KICB0aGUgZmllbGQgb2YgZnVuY3Rpb25hbCBzb2Z0d2FyZSBhcmNoaXRl
Y3R1cmU7DQoNCi0gVG8gY29ubmVjdCB0aGUgZnVuY3Rpb25hbCBwcm9ncmFtbWluZyBjb21tdW5p
dHkgdG8gdGhlIHNvZnR3YXJlDQogIGFyY2hpdGVjdHVyZSBjb21tdW5pdHkgdG8gY3Jvc3MtcG9s
bGluYXRlIGJldHdlZW4gdGhlIHR3by4NCg0KVGhlIHdvcmtzaG9wIGZvbGxvd3Mgb24gZnJvbSB0
aGUgRnVuY3Rpb25hbCBTb2Z0d2FyZSBBcmNoaXRlY3R1cmUNCm9wZW4gc3BhY2UgdGhhdCB3YXMg
aGVsZCBhdCBJQ0ZQIDIwMjIgaW4gU2xvdmVuaWEuDQoNClNDT1BFOg0KDQpUaGUgd29ya3Nob3Ag
c2Vla3Mgc3VibWlzc2lvbnMgaW4gYSByYW5nZSBvZiBjYXRlZ29yaWVzOg0KDQotIFlvdSdyZSBh
IG1lbWJlciBvZiB0aGUgRlAgY29tbXVuaXR5IGFuZCBoYXZlIHRob3VnaHQgYWJvdXQgaG93DQog
IHRvIHN1cHBvcnQgcHJvZ3JhbW1pbmcgaW4gdGhlIGxhcmdlLCBmb3IgZXhhbXBsZSBieSBmcmFt
aW5nDQogIGZ1bmN0aW9uYWwgaWRlYXMgaW4gYXJjaGl0ZWN0dXJhbCB0ZXJtcyBvciB2aWNlIHZl
cnNlLCBjb21wYXJpbmcNCiAgZGlmZmVyZW50IGxhbmd1YWdlcyBpbiB0ZXJtcyBvZiB0aGVpciBh
cmNoaXRlY3R1cmFsIGNhcGFiaWxpdGllcywNCiAgY2xhcmlmeWluZyBhcmNoaXRlY3R1cmFsIHJv
bGVzIHBsYXllZCBieSBmb3JtYWwgbWV0aG9kcywgcHJvb2YNCiAgYXNzaXN0YW50cyBhbmQgRFNM
cywgb3Igb2JzZXJ2aW5nIGhvdyBmdW5jdGlvbmFsIGNvbmNlcHRzIGFyZQ0KICB1c2VkIGluIG90
aGVyIGxhbmd1YWdlIGFuZCBhcmNoaXRlY3R1cmUgY29tbXVuaXRpZXMuDQoNCiAgR3JlYXQsIHN1
Ym1pdCBhIHJlc2VhcmNoIHBhcGVyIQ0KDQotIFlvdSdyZSBhIG1lbWJlciBvZiB0aGUgYXJjaGl0
ZWN0dXJlIGNvbW11bml0eSwgYW5kIGhhdmUgdGhvdWdodA0KICBhYm91dCBob3cgeW91ciBkaXNj
aXBsaW5lIG1pZ2h0IGhlbHAgZnVuY3Rpb25hbCBwcm9ncmFtbWVycywgZm9yDQogIGV4YW1wbGUg
YnkgYXBwbHlpbmcgZG9tYWluLWRyaXZlbiBkZXNpZ24sIGltcGxlbWVudGluZyBoZXhhZ29uYWwN
CiAgYXJjaGl0ZWN0dXJlLCBvciBkZXNpZ25pbmcgc2VsZi1jb250YWluZWQgc3lzdGVtcy4NCg0K
ICBFeGNlbGxlbnQsIHN1Ym1pdCBhIHJlc2VhcmNoIHBhcGVyIQ0KDQotIFlvdSd2ZSB3b3JrZWQg
b24gYSBsYXJnZSBwcm9qZWN0IHVzaW5nIGZ1bmN0aW9uYWwgcHJvZ3JhbW1pbmcsDQogIGFuZCBp
dCdzIHdvcmtlZCBvdXQgd2VsbCwgb3IgdGVycmlibHksIG9yIGEgbWl4IG9mIGJvdGg7IGJvbnVz
DQogIHBvaW50cyBmb3IgZGVyaXZpbmcgYXJjaGl0ZWN0dXJhbCBwcmluY2lwbGVzIGZyb20geW91
ciBleHBlcmllbmNlLg0KDQogIFdvbmRlcmZ1bCwgc3VibWl0IGFuIGV4cGVyaWVuY2UgcmVwb3J0
IQ0KDQotIFlvdSBrbm93IGEgbmVhdCBhcmNoaXRlY3R1cmFsIGlkaW9tIG9yIHBhdHRlcm4gdGhh
dCBtYXkgYmUgdXNlZnVsDQogIHRvIG90aGVycyBkZXZlbG9waW5nIGxhcmdlIGZ1bmN0aW9uYWwg
c29mdHdhcmUgc3lzdGVtcy4NCg0KICBGYWJ1bG91cywgc3VibWl0IGFuIGFyY2hpdGVjdHVyYWwg
cGVhcmwhDQoNCi0gWW91IGhhdmUgc29tZXRoaW5nIHRoYXQgZG9lc24ndCBmaXQgdGhlIGFib3Zl
IGNhdGVnb3JpZXMsIGJ1dA0KICB0aGF0IHN0aWxsIHJlbGF0ZXMgdG8gZnVuY3Rpb25hbCBzb2Z0
d2FyZSBhcmNoaXRlY3R1cmUsIHN1Y2ggDQogIGFzIHNvbWV0aGluZyB0aGF0IGNhbiBiZSB3cml0
dGVuIHVwLCBvciB0aGF0IGNvdWxkIGJlIHBhcnQgb2YNCiAgdGhlIHdvcmtzaG9wIGZvcm1hdCBs
aWtlIGEgcGFuZWwgZGViYXRlIG9yIGEgZmlzaGJvd2wuDQoNCiAgU3VwZXJiLCBzdWJtaXQgdG8g
dGhlIG9wZW4gY2F0ZWdvcnkhDQoNClJlc2VhcmNoIHBhcGVycyBzaG91bGQgZXhwbGFpbiB0aGVp
ciByZXNlYXJjaCBjb250cmlidXRpb25zIGluIGJvdGgNCmdlbmVyYWwgYW5kIHRlY2huaWNhbCB0
ZXJtcywgaWRlbnRpZnlpbmcgd2hhdCBoYXMgYmVlbiBhY2NvbXBsaXNoZWQsDQpleHBsYWluaW5n
IHdoeSBpdCBpcyBzaWduaWZpY2FudCwgYW5kIHJlbGF0aW5nIGl0IHRvIHByZXZpb3VzIHdvcmss
DQphbmQgdG8gb3RoZXIgbGFuZ3VhZ2VzIHdoZXJlIGFwcHJvcHJpYXRlLg0KDQpFeHBlcmllbmNl
IHJlcG9ydHMgYW5kIGFyY2hpdGVjdHVyYWwgcGVhcmxzIG5lZWQgbm90IG5lY2Vzc2FyaWx5DQpy
ZXBvcnQgb3JpZ2luYWwgcmVzZWFyY2ggcmVzdWx0cy4gIFRoZSBrZXkgY3JpdGVyaW9uIGZvciBz
dWNoIHBhcGVycw0KaXMgdGhhdCB0aGV5IG1ha2UgYSBjb250cmlidXRpb24gZnJvbSB3aGljaCBv
dGhlcnMgY2FuIGJlbmVmaXQuDQpJdCBpcyBub3QgZW5vdWdoIHNpbXBseSB0byBkZXNjcmliZSBh
IGxhcmdlIHNvZnR3YXJlIHN5c3RlbSwgb3INCnRvIHByZXNlbnQgaWRlYXMgdGhhdCBhcmUgc3Bl
Y2lmaWMgdG8gYSBwYXJ0aWN1bGFyIHN5c3RlbS4NCg0KT3BlbiBjYXRlZ29yeSBzdWJtaXNzaW9u
cyB0aGF0IGFyZSBub3QgaW50ZW5kZWQgZm9yIHB1YmxpY2F0aW9uIA0KYXJlIG5vdCByZXF1aXJl
ZCB0byBmb2xsb3cgdGhlIGZvcm1hdHRpbmcgZ3VpZGVsaW5lcywgYW5kIGNhbiANCnN1Ym1pdCBp
biBQREYsIHdvcmQgb3IgcGxhaW4gdGV4dCBmb3JtYXQgYXMgcHJlZmVycmVkLg0KDQpJZiB5b3Ug
YXJlIHVuc3VyZSB3aGV0aGVyIHlvdXIgY29udHJpYnV0aW9uIGlzIHN1aXRhYmxlLCBvciBpZg0K
eW91IG5lZWQgYW55IGtpbmQgb2YgaGVscCB3aXRoIHlvdXIgc3VibWlzc2lvbiwgcGxlYXNlIGVt
YWlsDQp0aGUgcHJvZ3JhbSBjaGFpcnMgYXQgPGZ1bmFyY2gyMDIzQGVhc3ljaGFpci5vcmc+Lg0K
DQpTVUJNSVNTSU9OOg0KDQpQYXBlcnMgbXVzdCBiZSBzdWJtaXR0ZWQgYnkgMXN0IEp1bmUgMjAy
MyB1c2luZyBFYXN5Q2hhaXIsIHZpYSB0aGUNCmZvbGxvd2luZyBsaW5rOiBodHRwczovL3Rpbnl1
cmwuY29tL0ZVTkFSQ0gyMy1zdWJtaXQNCg0KRm9ybWF0dGluZzogc3VibWlzc2lvbnMgaW50ZW5k
ZWQgZm9yIHB1YmxpY2F0aW9uIG11c3QgYmUgaW4gUERGDQpmb3JtYXQgYW5kIGZvbGxvdyB0aGUg
QUNNIFNJR1BMQU4gc3R5bGUgZ3VpZGVsaW5lcywgdXNpbmcgdGhlDQphY21hcnQgZm9ybWF0IGFu
ZCB0aGUgc2lncGxhbiBzdWItZm9ybWF0LiAgUGxlYXNlIHVzZSB0aGUgcmV2aWV3DQpvcHRpb24s
IGFzIHRoaXMgZW5hYmxlcyBsaW5lIG51bWJlcnMgZm9yIGVhc3kgcmVmZXJlbmNlIGluIHJldmll
d3MuDQpGb3IgZnVydGhlciBkZXRhaWxzLCBzZWU6IGh0dHBzOi8vdGlueXVybC5jb20vc2lncGxh
bi1hY21hcnQNCg0KSWYgeW91ciBzdWJtaXNzaW9uIGlzIG5vdCBhIHJlc2VhcmNoIHBhcGVyLCBw
bGVhc2UgbWFyayB0aGlzIHVzaW5nDQphIHN1YnRpdGxlIChFeHBlcmllbmNlIFJlcG9ydCwgQXJj
aGl0ZWN0dXJhbCBQZWFybCwgT3BlbiBDYXRlZ29yeSkuDQoNCkxlbmd0aDogc3VibWlzc2lvbnMg
bXVzdCBhZGhlcmUgdG8gdGhlIGxpbWl0cyBzcGVjaWZpZWQgYmVsb3cuDQpIb3dldmVyLCB0aGVy
ZSBpcyBubyByZXF1aXJlbWVudCBvciBleHBlY3RhdGlvbiB0aGF0IGFsbCBwYWdlcw0KYXJlIHVz
ZWQsIGFuZCBhdXRob3JzIGFyZSBlbmNvdXJhZ2VkIHRvIHN0cml2ZSBmb3IgYnJldml0eS4NCg0K
UmVzZWFyY2ggcGFwZXJzCQk1IHRvIDEyKyBwYWdlcw0KQXJjaGl0ZWN0dXJhbCBwZWFybHMJNSB0
byAxMiBwYWdlcw0KRXhwZXJpZW5jZSByZXBvcnRzCTMgdG8gNiBwYWdlcw0KT3BlbiBjYXRlZ29y
eQkJMSB0byA2IHBhZ2VzDQoNClB1YmxpY2F0aW9uOiBUaGUgcHJvY2VlZGluZ3Mgb2YgRlVOQVJD
SCAyMDIzIHdpbGwgYmUgcHVibGlzaGVkIGluDQp0aGUgQUNNIERpZ2l0YWwgTGlicmFyeSwgYW5k
IGF1dGhvcnMgb2YgYWNjZXB0ZWQgcGFwZXJzIGFyZSByZXF1aXJlZA0KdG8gYWdyZWUgdG8gb25l
IG9mIHRoZSBzdGFuZGFyZCBBQ00gbGljZW5zaW5nIG9wdGlvbnMuICBBY2NlcHRlZA0KcGFwZXJz
IG11c3QgYmUgcHJlc2VudGVkIGF0IHRoZSB3b3Jrc2hvcCBieSBvbmUgb2YgdGhlIGF1dGhvcnMs
DQpidXQgaW4gc3BlY2lhbCBjYXNlcyB3ZSBtYXkgY29uc2lkZXIgcmVtb3RlIHByZXNlbnRhdGlv
bi4gDQoNClRoZSBvZmZpY2lhbCBwdWJsaWNhdGlvbiBkYXRlIGlzIHRoZSBkYXRlIHRoZSBwcm9j
ZWVkaW5ncyBhcmUNCm1hZGUgYXZhaWxhYmxlIGluIHRoZSBBQ00gRGlnaXRhbCBMaWJyYXJ5LiAg
VGhpcyBkYXRlIG1heSBiZSB1cA0KdG8gdHdvIHdlZWtzIHByaW9yIHRvIHRoZSBmaXJzdCBkYXkg
b2YgdGhlIHdvcmtzaG9wLg0KDQpQUk9HUkFNIENIQUlSUzoNCg0KTWlrZSBTcGVyYmVyIAkJQWN0
aXZlIEdyb3VwLCBHZXJtYW55DQpHcmFoYW0gSHV0dG9uIAkJVW5pdmVyc2l0eSBvZiBOb3R0aW5n
aGFtLCBVSw0KDQpQUk9HUkFNIENPTU1JVFRFRToNCg0KSm9hY2hpbSBCcmVpdG5lcglHZXJtYW55
DQpNYW51ZWwgQ2hha3JhdmFydHkJVHdlYWsgJiBJT0csIFRoZSBOZXRoZXJsYW5kcw0KUm9uIEdh
cmNpYQkJVW5pdmVyc2l0eSBvZiBCcml0aXNoIENvbHVtYmlhLCBDYW5hZGENCkRlYmFzaXNoIEdo
b3NoCQlMZWFkSVEsIEluZGlhDQpMYXJzIEh1cGVsCQlHaWVzZWNrZStEZXZyaWVudCwgR2VybWFu
eQ0KQW5keSBLZWVwCQlNZXRhLCBVU0ENClNocmlyYW0gS3Jpc2huYW11cnRoaQlCcm93biBVbml2
ZXJzaXR5LCBVU0ENCkFuZHJlcyBMw7ZoCQlXZWxsLVR5cGVkLCBHZXJtYW55DQpBbmlsIE1hZGhh
dmFwZWRkeQlVbml2ZXJzaXR5IG9mIENhbWJyaWRnZSwgVUsNCkpvc8OpIFBlZHJvIE1hZ2FsaMOj
ZXMJU3RhbmRhcmQgQ2hhcnRlcmVkLCBVSw0KU2ltb24gTWFybG93CQlNZXRhLCBVSw0KSGFubmVz
IE1laG5lcnQJCVJvYnVyLCBHZXJtYW55DQpFcmlrIE1laWplcgkJVVNBDQpJdmFuIFBlcmV6CQlL
QlIgLyBOQVNBIEFtZXMgUmVzZWFyY2ggQ2VudGVyLCBVU0ENClN0ZWZhbmllIFNjaGlybWVyCUR1
Y2tEdWNrR28sIEdlcm1hbnkNClBlcmRpdGEgU3RldmVucwkJVW5pdmVyc2l0eSBvZiBFZGluYnVy
Z2gsIFVLDQpTdGVmYW4gV2VocgkJSG9jaHNjaHVsZSBPZmZlbmJ1cmcsIEdlcm1hbnkNClNjb3R0
IFdsYXNjaGluCQlGUGJyaWRnZSwgVUsNCg0KV09SS1NIT1AgVkVOVUU6DQoNClRoZSB3b3Jrc2hv
cCB3aWxsIGJlIGNvLWxvY2F0ZWQgd2l0aCB0aGUgSUNGUCAyMDIzIGNvbmZlcmVuY2UgYXQNClRo
ZSBXZXN0aW4gU2VhdHRsZSBIb3RlbCwgU2VhdHRsZSwgV2FzaGluZ3RvbiwgVW5pdGVkIFN0YXRl
cy4NCg0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PQ0KDQo=
