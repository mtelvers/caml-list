Received: from Hermes.metastack.local (172.16.0.8) by Hermes.metastack.local
 (172.16.0.8) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.23 via Mailbox
 Transport; Sat, 18 Mar 2023 16:42:03 +0000
Received: from Hermes.metastack.local (172.16.0.8) by Hermes.metastack.local
 (172.16.0.8) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.23; Sat, 18 Mar
 2023 16:42:03 +0000
Received: from exchange.romulus.metastack.com (172.16.0.21) by
 Hermes.metastack.local (172.16.0.8) with Microsoft SMTP Server
 (version=TLS1_0, cipher=TLS_RSA_WITH_AES_256_CBC_SHA) id 15.1.2507.23 via
 Frontend Transport; Sat, 18 Mar 2023 16:42:03 +0000
Received: from romulus.metastack.com ([172.16.0.20])
	by exchange.romulus.metastack.com (8.14.2/8.14.2) with ESMTP id 32IGfHnc024676
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <dra@metastack.local>; Sat, 18 Mar 2023 16:41:17 GMT
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by romulus.metastack.com (8.14.2/8.14.2) with ESMTP id 32IGf9Cx024658
	for <dra-news@metastack.com>; Sat, 18 Mar 2023 16:41:09 GMT
Received: from prod-listesu18.inria.fr (HELO sympa.inria.fr) ([128.93.162.160])
  by mail2-relais-roc.national.inria.fr with ESMTP; 18 Mar 2023 17:41:08 +0100
Received: by sympa.inria.fr (Postfix, from userid 20132)
	id 751E2E0D2D; Sat, 18 Mar 2023 17:41:08 +0100 (CET)
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id 5CC46E0A9B
	for <caml-list@sympa.inria.fr>; Sat, 18 Mar 2023 17:41:02 +0100 (CET)
Received: from deinprogramm.de ([168.119.170.211])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 18 Mar 2023 17:41:00 +0100
Received: from valmont.local (unknown [46.183.103.17])
	(using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
	 key-exchange ECDHE (P-256) server-signature RSA-PSS (2048 bits) server-digest SHA256)
	(No client certificate requested)
	by deinprogramm.de (Postfix) with ESMTPSA id ADE6D842AE7
	for <caml-list@inria.fr>; Sat, 18 Mar 2023 17:40:58 +0100 (CET)
From: Michael Sperber <sperber@deinprogramm.de>
To: "caml-list@inria.fr" <caml-list@inria.fr>
Subject: [Caml-list] Call for Papers, Functional Software Architecture - FP in
 the Large
Thread-Topic: [Caml-list] Call for Papers, Functional Software Architecture -
 FP in the Large
Thread-Index: AQHZWbiRpmod3MEOhk+23sjU+/dT2w==
Sender: "caml-list-request@inria.fr" <caml-list-request@inria.fr>
X-MS-Exchange-MessageSentRepresentingType: 2
Date: Sat, 18 Mar 2023 16:40:56 +0000
Message-ID: <y9lo7oqdnc7.fsf@deinprogramm.de>
Keywords: Sent to dra-news@metastack.com,Marked bulk,MetaStack -
 Lists,MetaStack
List-Help: <mailto:sympa_inria@inria.fr?subject=help>
List-Subscribe: <mailto:sympa_inria@inria.fr?subject=subscribe%20caml-list>
List-Unsubscribe:
	<mailto:sympa_inria@inria.fr?subject=unsubscribe%20caml-list>
Reply-To: Michael Sperber <sperber@deinprogramm.de>
Content-Language: en-GB
X-MS-Exchange-Organization-AuthAs: Anonymous
X-MS-Exchange-Organization-AuthSource: Hermes.metastack.local
X-MS-Has-Attach:
X-Auto-Response-Suppress: All
X-MS-Exchange-Organization-Network-Message-Id:
	900d2b8e-2f41-4139-4488-08db27cfb3e3
X-MS-TNEF-Correlator:
X-MS-Exchange-Organization-RecordReviewCfmType: 0
x-scanned-by: MIMEDefang 2.65 on 62.31.23.242
received-spf: None (mail2-relais-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@sympa.inria.fr) identity=helo;  client-ip=128.93.162.160;
  receiver=mail2-relais-roc.national.inria.fr;
  envelope-from="caml-list-owner@inria.fr";
  x-sender="postmaster@sympa.inria.fr"; x-conformance=spf_only
x-ironport-av: E=Sophos;i="5.98,271,1673910000";    d="scan'208";a="97889676"
x-ironport-anti-spam-filtered: true
x-loop: caml-list@inria.fr
x-no-archive: yes
Content-Type: text/plain; charset="utf-8"
Content-ID: <6BDED7E3DB14BC4B89894988CA77A36D@metastack.local>
Content-Transfer-Encoding: base64
MIME-Version: 1.0

DQpbSSBhcG9sb2dpemUgZm9yIHRoZSBwcmV2aW91cywgaW5jb3JyZWN0bHkgdGl0bGVkIG1lc3Nh
Z2UuXQ0KDQpEZWFyIGFsbCwNCg0KV2UncmUgZGVsaWdodGVkIHRvIGFubm91bmNlIHRoYXQgdGhl
IGZpcnN0IEFDTSBTSUdQTEFOIFdvcmtzaG9wIG9uDQoiRnVuY3Rpb25hbCBTb2Z0d2FyZSBBcmNo
aXRlY3R1cmUgLSBGUCBpbiB0aGUgTGFyZ2UiIHdpbGwgYmUgaGVsZA0KaW4gU2VhdHRsZSwgVVNB
IGluIFNlcHRlbWJlciAyMDIzLCBjby1sb2NhdGVkIHdpdGggdGhlIElDRlAgY29uZmVyZW5jZS4N
Cg0KUGxlYXNlIHNoYXJlLCBhbmQgc3VibWl0IHlvdXIgYmVzdCBwYXBlcnMsIGV4cGVyaWVuY2Ug
cmVwb3J0cywgYW5kDQphcmNoaXRlY3R1cmFsIHBlYXJscyBvbiBsYXJnZS1zY2FsZSBmdW5jdGlv
bmFsIHByb2dyYW1taW5nIQ0KDQpCZXN0IHdpc2hlcywNCg0KTWlrZSBTcGVyYmVyIGFuZCBHcmFo
YW0gSHV0dG9uDQpQcm9ncmFtIENoYWlycywgRlVOQVJDSCAyMDIzDQoNCj09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0N
Cg0KICAgICAgICAgICAgICAgKioqIENBTEwgRk9SIFBBUEVSUyAtLSBGVU5BUkNIIDIwMjMgKioq
DQoNCiAgICAgICAgICAgICAgICAgICAgRmlyc3QgQUNNIFNJR1BMQU4gV29ya3Nob3Agb24NCiAg
ICAgICAgIEZ1bmN0aW9uYWwgU29mdHdhcmUgQXJjaGl0ZWN0dXJlIC0gRlAgaW4gdGhlIExhcmdl
DQoNCiAgICAgICAgICAgIDh0aCBTZXB0ZW1iZXIgMjAyMywgU2VhdHRsZSwgV2FzaGluZ3Rvbiwg
VVNBDQogICAgICAgICAgICAgICAgICAgICAgQ28tbG9jYXRlZCB3aXRoIElDRlAgMjAyMw0KDQog
ICAgICAgICAgICAgICAgICAgIGh0dHBzOi8vdGlueXVybC5jb20vRlVOQVJDSDIzDQoNCj09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT0NCg0KVElNRUxJTkU6DQoNClBhcGVyIHN1Ym1pc3Npb24JMXN0IEp1bmUgMjAyMw0K
QXV0aG9yIG5vdGlmaWNhdGlvbgkyOHRoIEp1bmUgMjAyMw0KQ2FtZXJhIHJlYWR5IGNvcHkJMTh0
aCBKdWx5IDIwMjMNCldvcmtzaG9wCQk4dGggU2VwdCAyMDIzIChkYXRlIHRvIGJlIGNvbmZpcm1l
ZCkNCg0KQkFDS0dST1VORDoNCg0KRnVuY3Rpb25hbCBTb2Z0d2FyZSBBcmNoaXRlY3R1cmUiIHJl
ZmVycyB0byBtZXRob2RzIG9mIGNvbnN0cnVjdGlvbg0KYW5kIHN0cnVjdHVyZSBvZiBsYXJnZSBh
bmQgbG9uZy1saXZlZCBzb2Z0d2FyZSBwcm9qZWN0cyB0aGF0IGFyZQ0KaW1wbGVtZW50ZWQgaW4g
ZnVuY3Rpb25hbCBsYW5ndWFnZXMgYW5kIHJlbGVhc2VkIHRvIHJlYWwgdXNlcnMsDQp0eXBpY2Fs
bHkgaW4gaW5kdXN0cnkuICBUaGUgZ29hbHMgZm9yIHRoZSB3b3Jrc2hvcCBhcmU6DQoNCi0gVG8g
YXNzZW1ibGUgYSBjb21tdW5pdHkgaW50ZXJlc3RlZCBpbiBzb2Z0d2FyZSBhcmNoaXRlY3R1cmUN
CiAgdGVjaG5pcXVlcyBhbmQgdGVjaG5vbG9naWVzIHNwZWNpZmljIHRvIGZ1bmN0aW9uYWwgcHJv
Z3JhbW1pbmc7DQoNCi0gVG8gaWRlbnRpZnksIGNhdGVnb3JpemUsIGFuZCBkb2N1bWVudCB0b3Bp
Y3MgcmVsZXZhbnQgdG8NCiAgdGhlIGZpZWxkIG9mIGZ1bmN0aW9uYWwgc29mdHdhcmUgYXJjaGl0
ZWN0dXJlOw0KDQotIFRvIGNvbm5lY3QgdGhlIGZ1bmN0aW9uYWwgcHJvZ3JhbW1pbmcgY29tbXVu
aXR5IHRvIHRoZSBzb2Z0d2FyZQ0KICBhcmNoaXRlY3R1cmUgY29tbXVuaXR5IHRvIGNyb3NzLXBv
bGxpbmF0ZSBiZXR3ZWVuIHRoZSB0d28uDQoNClRoZSB3b3Jrc2hvcCBmb2xsb3dzIG9uIGZyb20g
dGhlIEZ1bmN0aW9uYWwgU29mdHdhcmUgQXJjaGl0ZWN0dXJlDQpvcGVuIHNwYWNlIHRoYXQgd2Fz
IGhlbGQgYXQgSUNGUCAyMDIyIGluIFNsb3ZlbmlhLg0KDQpTQ09QRToNCg0KVGhlIHdvcmtzaG9w
IHNlZWtzIHN1Ym1pc3Npb25zIGluIGEgcmFuZ2Ugb2YgY2F0ZWdvcmllczoNCg0KLSBZb3UncmUg
YSBtZW1iZXIgb2YgdGhlIEZQIGNvbW11bml0eSBhbmQgaGF2ZSB0aG91Z2h0IGFib3V0IGhvdw0K
ICB0byBzdXBwb3J0IHByb2dyYW1taW5nIGluIHRoZSBsYXJnZSwgZm9yIGV4YW1wbGUgYnkgZnJh
bWluZw0KICBmdW5jdGlvbmFsIGlkZWFzIGluIGFyY2hpdGVjdHVyYWwgdGVybXMgb3IgdmljZSB2
ZXJzZSwgY29tcGFyaW5nDQogIGRpZmZlcmVudCBsYW5ndWFnZXMgaW4gdGVybXMgb2YgdGhlaXIg
YXJjaGl0ZWN0dXJhbCBjYXBhYmlsaXRpZXMsDQogIGNsYXJpZnlpbmcgYXJjaGl0ZWN0dXJhbCBy
b2xlcyBwbGF5ZWQgYnkgZm9ybWFsIG1ldGhvZHMsIHByb29mcw0KICBhc3Npc3RhbnRzIGFuZCBE
U0xzLCBvciBvYnNlcnZpbmcgaG93IGZ1bmN0aW9uYWwgY29uY2VwdHMgYXJlDQogIHVzZWQgaW4g
b3RoZXIgbGFuZ3VhZ2UgYW5kIGFyY2hpdGVjdHVyZSBjb21tdW5pdGllcy4NCg0KICBHcmVhdCwg
c3VibWl0IGEgcmVzZWFyY2ggcGFwZXIhDQoNCi0gWW91J3JlIGEgbWVtYmVyIG9mIHRoZSBhcmNo
aXRlY3R1cmUgY29tbXVuaXR5LCBhbmQgaGF2ZSB0aG91Z2h0DQogIGFib3V0IGhvdyB5b3VyIGRp
c2NpcGxpbmUgbWlnaHQgaGVscCBmdW5jdGlvbmFsIHByb2dyYW1tZXJzLCBmb3INCiAgZXhhbXBs
ZSBieSBhcHBseWluZyBkb21haW4tZHJpdmVuIGRlc2lnbiwgaW1wbGVtZW50aW5nIGhleGFnb25h
bA0KICBhcmNoaXRlY3R1cmUsIG9yIGRlc2lnbmluZyBzZWxmLWNvbnRhaW5lZCBzeXN0ZW1zLg0K
DQogIEV4Y2VsbGVudCwgc3VibWl0IGEgcmVzZWFyY2ggcGFwZXIhDQoNCi0gWW91J3ZlIHdvcmtl
ZCBvbiBhIGxhcmdlIHByb2plY3QgdXNpbmcgZnVuY3Rpb25hbCBwcm9ncmFtbWluZywNCiAgYW5k
IGl0J3Mgd29ya2VkIG91dCB3ZWxsLCBvciB0ZXJyaWJseSwgb3IgYSBtaXggb2YgYm90aDsgYm9u
dXMNCiAgcG9pbnRzIGZvciBkZXJpdmluZyBhcmNoaXRlY3R1cmFsIHByaW5jaXBsZXMgZnJvbSB5
b3VyIGV4cGVyaWVuY2UuDQoNCiAgV29uZGVyZnVsLCBzdWJtaXQgYW4gZXhwZXJpZW5jZSByZXBv
cnQhDQoNCi0gWW91IGtub3cgYSBuZWF0IGFyY2hpdGVjdHVyYWwgaWRpb20gb3IgcGF0dGVybiB0
aGF0IG1heSBiZSB1c2VmdWwNCiAgdG8gb3RoZXJzIGRldmVsb3BpbmcgbGFyZ2UgZnVuY3Rpb25h
bCBzb2Z0d2FyZSBzeXN0ZW1zLg0KDQogIEZhYnVsb3VzLCBzdWJtaXQgYW4gYXJjaGl0ZWN0dXJh
bCBwZWFybCENCg0KLSBZb3UgaGF2ZSBzb21ldGhpbmcgdGhhdCBkb2Vzbid0IGZpdCB0aGUgYWJv
dmUgY2F0ZWdvcmllcywgYnV0DQogIHRoYXQgc3RpbGwgcmVsYXRlcyB0byBmdW5jdGlvbmFsIHNv
ZnR3YXJlIGFyY2hpdGVjdHVyZSwgc3VjaCANCiAgYXMgc29tZXRoaW5nIHRoYXQgY2FuIGJlIHdy
aXR0ZW4gdXAsIG9yIHRoYXQgY291bGQgYmUgcGFydCBvZg0KICB0aGUgd29ya3Nob3AgZm9ybWF0
IGxpa2UgYSBwYW5lbCBkZWJhdGUgb3IgYSBmaXNoYm93bC4NCg0KICBTdXBlcmIsIHN1Ym1pdCB0
byB0aGUgb3BlbiBjYXRlZ29yeSENCg0KUmVzZWFyY2ggcGFwZXJzIHNob3VsZCBleHBsYWluIHRo
ZWlyIHJlc2VhcmNoIGNvbnRyaWJ1dGlvbnMgaW4gYm90aA0KZ2VuZXJhbCBhbmQgdGVjaG5pY2Fs
IHRlcm1zLCBpZGVudGlmeWluZyB3aGF0IGhhcyBiZWVuIGFjY29tcGxpc2hlZCwNCmV4cGxhaW5p
bmcgd2h5IGl0IGlzIHNpZ25pZmljYW50LCBhbmQgcmVsYXRpbmcgaXQgdG8gcHJldmlvdXMgd29y
aywNCmFuZCB0byBvdGhlciBsYW5ndWFnZXMgd2hlcmUgYXBwcm9wcmlhdGUuDQoNCkV4cGVyaWVu
Y2UgcmVwb3J0cyBhbmQgYXJjaGl0ZWN0dXJhbCBwZWFybHMgbmVlZCBub3QgbmVjZXNzYXJpbHkN
CnJlcG9ydCBvcmlnaW5hbCByZXNlYXJjaCByZXN1bHRzLiAgVGhlIGtleSBjcml0ZXJpb24gZm9y
IHN1Y2ggcGFwZXJzDQppcyB0aGF0IHRoZXkgbWFrZSBhIGNvbnRyaWJ1dGlvbiBmcm9tIHdoaWNo
IG90aGVycyBjYW4gYmVuZWZpdC4NCkl0IGlzIG5vdCBlbm91Z2ggc2ltcGx5IHRvIGRlc2NyaWJl
IGEgbGFyZ2Ugc29mdHdhcmUgc3lzdGVtLCBvcg0KdG8gcHJlc2VudCBpZGVhcyB0aGF0IGFyZSBz
cGVjaWZpYyB0byBhIHBhcnRpY3VsYXIgc3lzdGVtLg0KDQpPcGVuIGNhdGVnb3J5IHN1Ym1pc3Np
b25zIHRoYXQgYXJlIG5vdCBpbnRlbmRlZCBmb3IgcHVibGljYXRpb24gDQphcmUgbm90IHJlcXVp
cmVkIHRvIGZvbGxvdyB0aGUgZm9ybWF0dGluZyBndWlkZWxpbmVzLCBhbmQgY2FuIA0Kc3VibWl0
IGluIFBERiwgd29yZCBvciBwbGFpbiB0ZXh0IGZvcm1hdCBhcyBwcmVmZXJyZWQuDQoNCklmIHlv
dSBhcmUgdW5zdXJlIHdoZXRoZXIgeW91ciBjb250cmlidXRpb24gaXMgc3VpdGFibGUsIG9yIGlm
DQp5b3UgbmVlZCBhbnkga2luZCBvZiBoZWxwIHdpdGggeW91ciBzdWJtaXNzaW9uLCBwbGVhc2Ug
ZW1haWwNCnRoZSBwcm9ncmFtIGNoYWlycyBhdCA8ZnVuYXJjaDIwMjNAZWFzeWNoYWlyLm9yZz4u
DQoNClNVQk1JU1NJT046DQoNClBhcGVycyBtdXN0IGJlIHN1Ym1pdHRlZCBieSAxc3QgSnVuZSAy
MDIzIHVzaW5nIEVhc3lDaGFpciwgdmlhIHRoZQ0KZm9sbG93aW5nIGxpbms6IGh0dHBzOi8vdGlu
eXVybC5jb20vRlVOQVJDSDIzLXN1Ym1pdA0KDQpGb3JtYXR0aW5nOiBzdWJtaXNzaW9ucyBtdXN0
IGJlIGluIFBERiBmb3JtYXQgYW5kIGZvbGxvdyB0aGUgQUNNDQpTSUdQTEFOIHN0eWxlIGd1aWRl
bGluZXMsIHVzaW5nIHRoZSBhY21hcnQgZm9ybWF0IGFuZCB0aGUgc2lncGxhbg0Kc3ViLWZvcm1h
dC4gIFBsZWFzZSB1c2UgdGhlIHJldmlldyBvcHRpb24gd2hlbiBzdWJtaXR0aW5nLCBhcyB0aGlz
DQplbmFibGVzIGxpbmUgbnVtYmVycyBmb3IgZWFzeSByZWZlcmVuY2UgaW4gcmV2aWV3cy4gIEZv
ciBmdXJ0aGVyDQpkZXRhaWxzLCBzZWU6IGh0dHBzOi8vdGlueXVybC5jb20vc2lncGxhbi1hY21h
cnQNCg0KSWYgeW91ciBzdWJtaXNzaW9uIGlzIG5vdCBhIHJlc2VhcmNoIHBhcGVyLCBwbGVhc2Ug
bWFyayB0aGlzIHVzaW5nDQphIHN1YnRpdGxlIChFeHBlcmllbmNlIFJlcG9ydCwgQXJjaGl0ZWN0
dXJhbCBQZWFybCwgT3BlbiBDYXRlZ29yeSkuDQoNCkxlbmd0aDogc3VibWlzc2lvbnMgbXVzdCBh
ZGhlcmUgdG8gdGhlIGxpbWl0cyBzcGVjaWZpZWQgYmVsb3cuDQpIb3dldmVyLCB0aGVyZSBpcyBu
byByZXF1aXJlbWVudCBvciBleHBlY3RhdGlvbiB0aGF0IGFsbCBwYWdlcw0KYXJlIHVzZWQsIGFu
ZCBhdXRob3JzIGFyZSBlbmNvdXJhZ2VkIHRvIHN0cml2ZSBmb3IgYnJldml0eS4NCg0KUmVzZWFy
Y2ggcGFwZXJzCQk1IHRvIDEyKyBwYWdlcw0KQXJjaGl0ZWN0dXJhbCBwZWFybHMJNSB0byAxMiBw
YWdlcw0KRXhwZXJpZW5jZSByZXBvcnRzCTMgdG8gNiBwYWdlcw0KT3BlbiBjYXRlZ29yeQkJMSB0
byA2IHBhZ2VzDQoNClB1YmxpY2F0aW9uOiBUaGUgcHJvY2VlZGluZ3Mgb2YgRlVOQVJDSCAyMDIz
IHdpbGwgYmUgcHVibGlzaGVkIGluDQp0aGUgQUNNIERpZ2l0YWwgTGlicmFyeSwgYW5kIGF1dGhv
cnMgb2YgYWNjZXB0ZWQgcGFwZXJzIGFyZSByZXF1aXJlZA0KdG8gYWdyZWUgdG8gb25lIG9mIHRo
ZSBzdGFuZGFyZCBBQ00gbGljZW5zaW5nIG9wdGlvbnMuICBBY2NlcHRlZA0KcGFwZXJzIG11c3Qg
YmUgcHJlc2VudGVkIGF0IHRoZSB3b3Jrc2hvcCBieSBvbmUgb2YgdGhlIGF1dGhvcnMsDQpidXQg
aW4gc3BlY2lhbCBjYXNlcyB3ZSBtYXkgY29uc2lkZXIgcmVtb3RlIHByZXNlbnRhdGlvbi4gDQoN
ClRoZSBvZmZpY2lhbCBwdWJsaWNhdGlvbiBkYXRlIGlzIHRoZSBkYXRlIHRoZSBwcm9jZWVkaW5n
cyBhcmUNCm1hZGUgYXZhaWxhYmxlIGluIHRoZSBBQ00gRGlnaXRhbCBMaWJyYXJ5LiAgVGhpcyBk
YXRlIG1heSBiZSB1cA0KdG8gdHdvIHdlZWtzIHByaW9yIHRvIHRoZSBmaXJzdCBkYXkgb2YgdGhl
IHdvcmtzaG9wLg0KDQpQUk9HUkFNIENIQUlSUzoNCg0KTWlrZSBTcGVyYmVyIAkJQWN0aXZlIEdy
b3VwLCBHZXJtYW55DQpHcmFoYW0gSHV0dG9uIAkJVW5pdmVyc2l0eSBvZiBOb3R0aW5naGFtLCBV
Sw0KDQpQUk9HUkFNIENPTU1JVFRFRToNCg0KSm9hY2hpbSBCcmVpdG5lcglHZXJtYW55DQpNYW51
ZWwgQ2hha3JhdmFydHkJVHdlYWcgJiBJT0csIFRoZSBOZXRoZXJsYW5kcw0KUm9uIEdhcmNpYQkJ
VW5pdmVyc2l0eSBvZiBCcml0aXNoIENvbHVtYmlhLCBDYW5hZGENCkRlYmFzaXNoIEdob3NoCQlM
ZWFkSVEsIEluZGlhDQpMYXJzIEh1cGVsCQlHaWVzZWNrZStEZXZyaWVudCwgR2VybWFueQ0KQW5k
eSBLZWVwCQlNZXRhLCBVU0ENClNocmlyYW0gS3Jpc2huYW11cnRoaQlCcm93biBVbml2ZXJzaXR5
LCBVU0ENCkFuZHJlcyBMw7ZoCQlXZWxsLVR5cGVkLCBHZXJtYW55DQpBbmlsIE1hZGhhdmFwZWRk
eQlVbml2ZXJzaXR5IG9mIENhbWJyaWRnZSwgVUsNCkpvc8OpIFBlZHJvIE1hZ2FsaMOjZXMJU3Rh
bmRhcmQgQ2hhcnRlcmVkLCBVSw0KU2ltb24gTWFybG93CQlNZXRhLCBVSw0KSGFubmVzIE1laG5l
cnQJCVJvYnVyLCBHZXJtYW55DQpFcmlrIE1laWplcgkJVVNBDQpJdmFuIFBlcmV6CQlLQlIgLyBO
QVNBIEFtZXMgUmVzZWFyY2ggQ2VudGVyLCBVU0ENClN0ZWZhbmllIFNjaGlybWVyCUR1Y2tEdWNr
R28sIEdlcm1hbnkNClBlcmRpdGEgU3RldmVucwkJVW5pdmVyc2l0eSBvZiBFZGluYnVyZ2gsIFVL
DQpTdGVmYW4gV2VocgkJSG9jaHNjaHVsZSBPZmZlbmJ1cmcsIEdlcm1hbnkNClNjb3R0IFdsYXNj
aGluCQlGUGJyaWRnZSwgVUsNCg0KV09SS1NIT1AgVkVOVUU6DQoNClRoZSB3b3Jrc2hvcCB3aWxs
IGJlIGNvLWxvY2F0ZWQgd2l0aCB0aGUgSUNGUCAyMDIzIGNvbmZlcmVuY2UgYXQNClRoZSBXZXN0
aW4gU2VhdHRsZSBIb3RlbCwgU2VhdHRsZSwgV2FzaGluZ3RvbiwgVW5pdGVkIFN0YXRlcy4NCg0K
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PQ0KDQoNCg==
