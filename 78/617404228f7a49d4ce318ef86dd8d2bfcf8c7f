Return-Path: <caml-list-owner@inria.fr>
Received-SPF: Pass (mailfrom) identity=mailfrom; client-ip=192.134.164.83; helo=mail2-relais-roc.national.inria.fr; envelope-from=caml-list-owner@inria.fr; receiver=<UNKNOWN> 
Authentication-Results: plum; dmarc=fail (p=none dis=none) header.from=polytechnique.org
Authentication-Results: plum.tunbury.org;
	dkim=pass (1024-bit key; unprotected) header.d=inria.fr header.i=@inria.fr header.a=rsa-sha256 header.s=dc header.b=HYpH1KfF;
	dkim-atps=neutral
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	(using TLSv1.2 with cipher ECDHE-RSA-AES256-GCM-SHA384 (256/256 bits))
	(No client certificate requested)
	by plum.tunbury.org (Postfix) with ESMTPS id 4F7F6B80123
	for <caml-list@tunbury.org>; Tue, 25 Jun 2024 14:58:49 +0100 (BST)
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed;
  d=inria.fr; s=dc;
  h=from:to:date:message-id:mime-version:subject:reply-to:
   sender:list-id:list-help:list-subscribe:list-unsubscribe:
   list-post:list-owner:list-archive;
  bh=2hh29c5P8WChdJnedPSwh8cmcQTy8QxU0OpmxVDCGBk=;
  b=HYpH1KfFRZykwoa3pE+MHNM2g0r928R2smF0uKS3ICIYgSp98r4k7kyS
   CpuAvE6O593r91HZMZrMJAATyxB4YlFvMVzBgmZlIgGCs+sWZ7C/B5gfe
   buGl45YoyI/QcUQKF/lsyaoHhngZNKUIMFCPZtoFjS5crZprsqiSHirzW
   k=;
Authentication-Results: mail2-relais-roc.national.inria.fr; dkim=none (message not signed) header.i=none; spf=Pass smtp.mailfrom=caml-list-owner@inria.fr; spf=None smtp.helo=postmaster@sympa.inria.fr
Received-SPF: Pass (mail2-relais-roc.national.inria.fr: domain of
  caml-list-owner@inria.fr designates 128.93.162.160 as
  permitted sender) identity=mailfrom;
  client-ip=128.93.162.160;
  receiver=mail2-relais-roc.national.inria.fr;
  envelope-from="caml-list-owner@inria.fr";
  x-sender="caml-list-owner@inria.fr"; x-conformance=spf_only;
  x-record-type="v=spf1"; x-record-text="v=spf1
  include:mailout.safebrands.com a:basic-mail.safebrands.com
  a:basic-mail01.safebrands.com a:basic-mail02.safebrands.com
  ip4:128.93.142.0/24 ip4:192.134.164.0/24 ip4:128.93.162.160
  ip4:89.107.174.7 mx ~all"
Received-SPF: None (mail2-relais-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@sympa.inria.fr) identity=helo;
  client-ip=128.93.162.160;
  receiver=mail2-relais-roc.national.inria.fr;
  envelope-from="caml-list-owner@inria.fr";
  x-sender="postmaster@sympa.inria.fr"; x-conformance=spf_only
X-IronPort-AV: E=Sophos;i="6.08,264,1712613600"; 
   d="scan'208,217";a="172406672"
Received: from prod-listesu18.inria.fr (HELO sympa.inria.fr) ([128.93.162.160])
  by mail2-relais-roc.national.inria.fr with ESMTP; 25 Jun 2024 15:58:48 +0200
Received: by sympa.inria.fr (Postfix, from userid 20132)
	id 26856E01A8; Tue, 25 Jun 2024 15:58:48 +0200 (CEST)
Received: from mail3-relais-sop.national.inria.fr (mail3-relais-sop.national.inria.fr [192.134.164.104])
	by sympa.inria.fr (Postfix) with ESMTPS id D9D38E00B6
	for <caml-list@sympa.inria.fr>; Tue, 25 Jun 2024 15:58:43 +0200 (CEST)
X-IronPort-AV: E=Sophos;i="6.08,264,1712613600"; 
   d="scan'208,217";a="90593030"
Received: from mac-03220211.irisa.fr ([131.254.21.249])
  by mail3-relais-sop.national.inria.fr with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 25 Jun 2024 15:58:44 +0200
From: Alan Schmitt <alan.schmitt@polytechnique.org>
To: "lwn" <lwn@lwn.net>, caml-list@inria.fr
Date: Tue, 25 Jun 2024 15:58:43 +0200
Message-ID: <m2bk3pceek.fsf@mac-03220211.irisa.fr>
MIME-Version: 1.0
Content-Type: multipart/alternative; boundary="=-=-="
Subject: [Caml-list] Attn: Development Editor, Latest OCaml Weekly News
Reply-To: Alan Schmitt <alan.schmitt@polytechnique.org>
X-Loop: caml-list@inria.fr
X-Sequence: 19149
Errors-To: caml-list-owner@inria.fr
Precedence: list
Precedence: bulk
Sender: caml-list-request@inria.fr
X-no-archive: yes
List-Id: <caml-list.inria.fr>
List-Help: <mailto:sympa_inria@inria.fr?subject=help>
List-Subscribe: <mailto:sympa_inria@inria.fr?subject=subscribe%20caml-list>
List-Unsubscribe: <mailto:sympa_inria@inria.fr?subject=unsubscribe%20caml-list>
List-Post: <mailto:caml-list@inria.fr>
List-Owner: <mailto:caml-list-request@inria.fr>
List-Archive: <https://sympa.inria.fr/sympa/arc/caml-list>
Archived-At: <https://sympa.inria.fr/sympa/arcsearch_id/caml-list/2024-06/m2bk3pceek.fsf%40mac-03220211.irisa.fr>

--=-=-=
Content-Type: text/plain; charset=utf-8
Content-Transfer-Encoding: quoted-printable

Hello

Here is the latest OCaml Weekly News, for the week of June 18 to 25,
2024.

Table of Contents
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80

First public editor tooling dev-meeting
First release of oma
Ppxlib dev meetings
CAISAR release 2.0, a platform for characterizing AI safety and robustness
First release of baby
Preview of Stripe client and mock server - DkStdRestApis
opam 2.2.0 rc1 release
Project wide occurrences
Other OCaml News
Old CWN


First public editor tooling dev-meeting
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/ann-first-public-editor-tooling-dev-meeting/=
14824/1>


vds announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  We are organizing the first public dev-meeting about Merlin, OCaml-LSP
  and more generally editor support for OCaml. This meeting will take
  place on *Thursday, June 27th*, at 05:00 pm CEST. We plan to have
  these happen every last Thursday of the month.

  The goal of these meetings is to provide a place for all contributors
  of these projects to discuss their work together. Whether you are a
  long time maintainer, an occasional contributor, a new comer, or
  simply a curious passer-by, please feel free to join and participate!

  We also plan to have some short technical presentations to help
  contributors learn more about the projects involved. These won't be
  systematic, and if you are interested in a particular subject feel
  free to ask about it or to propose a presentation.

  The agenda for this first meeting, which will be focused on the
  burning topic of project-wide occurrences, is the following:

  =E2=80=A2 A tour-de-table to allow the participants that wish to do so to
    present themselves and mention issues / prs they are interested in.
  =E2=80=A2 A presentation of current on-going projects.
  =E2=80=A2 A focus on project-wide occurrences: how does it work, what are=
 the
    tools that need to interact together and what are its current
    limitations and possible future improvements.
  =E2=80=A2 Discuss issues and pull requests that were tagged in advance or
    mentioned during the tour-de-table.
  =E2=80=A2 Informal discussion

  We looking forward to meeting you!

  Meeting link: <https://meet.google.com/imo-mkxi-hpt>


First release of oma
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/ann-first-release-of-oma/13845/2>


Fran=C3=A7ois Pottier announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80

  I have just published a new release of `oma' with the following fixes
  and changes:

  =E2=80=A2 New functions `invalidate_open_interval' and
    `invalidate_semi_open_interval'.
  =E2=80=A2 Fix a serious bug in `Unsafe.first' and `Unsafe.last', which wo=
uld
    incorrectly return `None' when the region contains only one point.
  =E2=80=A2 Fix a serious bug in `Unsafe.iter', which would systematically =
omit
    the last point of the region.


Ppxlib dev meetings
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90

  Archive: <https://discuss.ocaml.org/t/ppxlib-dev-meetings/12441/25>


Nathan Rebours announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  Meeting notes are available here:
  <https://github.com/ocaml-ppx/ppxlib/wiki/Dev-Meeting-2024-06-18>.

  Thanks to everyone who attended!

  Our next meeting is scheduled for Tuesday July 16th, 6:00PM CET!


CAISAR release 2.0, a platform for characterizing AI safety and robustness
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/ann-caisar-release-2-0-a-platform-for-charac=
terizing-ai-safety-and-robustness/14831/1>


Julien Girard announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  On the occasion of the 34th birthday of the [abolition of the
  apartheid laws], we are honoured to release CAISAR version 2.0.

  The release source is available at our [public forge]. As our last
  releases, CAISAR will soon be available on [opam] and on [Dockerhub].

  A nix flake is available for building CAISAR directly in the
  repository. Try CAISAR with `nix build
  git+https://git.frama-c.com/pub/caisar'!

  Here are the prominent features for this 2.0 release:


[abolition of the apartheid laws]
<https://www.dw.com/fr/il-y-a-25-ans-la-fin-de-lapartheid/a-18523920>

[public forge] <https://git.frama-c.com/pub/caisar/-/releases/2.0>

[opam] <https://opam.ocaml.org/packages/caisar/>

[Dockerhub] <https://hub.docker.com/r/laiser/caisar>

Specification and verification of several neural networks at once
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  CAISAR specification language already allowed to write specifications
  that involved several neural networks at once. However, translating
  such specifications to actual prover queries was not possible. We
  added automated graph editing techniques to allow such verification to
  take place. Within particular patterns, CAISAR will generate an ONNX
  file that preserve the semantic of the different neural networks while
  encapsulating parts of the specification directly in the control flow
  of the new neural network. This feature allow the verification of
  properties with multiple neural networks, including their composition.

  This is quite a step forward, as it enables machine-learning dedicated
  verifiers to tackle a much wider range of properties.


SVM as first-class citizens for interpretation
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  CAISAR now fully integrate SVMs into the interpretation engine. Users
  can expect vector computations and applications on SVMs to be computed
  similarly as what exists already for neural networks.

  We also unified the theory of machine learning models. Now, SVMs and
  neural networks can be specified with only the `model' type. In the
  near future, SVMs will be parsed directly into CAISAR=E2=80=99s Neural
  Intermediate Representations, which will simplify the verification of
  systems with heterogeneous AI components.


First release of baby
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/ann-first-release-of-baby/14840/1>


Fran=C3=A7ois Pottier announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=
=E2=94=80

  It is my pleasure to announce the first release of `baby'.

  `baby' is an OCaml library that offers several implementations of
  balanced binary search trees. At this time, `baby' offers a
  replacement for OCaml's `Set' module; it does not yet have a
  replacement for OCaml's `Map' module.

  Height-balanced and weight-balanced binary search trees are offered
  out of the box. Furthermore, to advanced users, the library offers a
  lightweight way of implementing other balancing strategies.

  The following points offer a comparison between `baby' and OCaml's
  `Set' library.


Better Performance
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C

  At the time of writing, `baby' offers generally better performance
  than OCaml's `Set' library. Its operations are generally faster
  (sometimes much faster; sometimes slightly faster; sometimes slightly
  slower) than those of the `Set' library, and its memory allocation
  rate is slightly lower.


Constant-Time Cardinal
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  In contrast with the `Set' library, `baby''s weight-balanced trees
  offer a `cardinal' function whose time complexity is *O(1)*. They also
  offer a family of random access functions (`get', `index', etc.) whose
  time complexity is *O(log n)*. Furthermore, by exploiting cardinality
  information, the functions `subset' and `equal' are sometimes able to
  return `false' in constant time.


Better Sharing
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  `baby''s binary operations (`union', `inter', `diff') take advantage
  of (and preserve) physical equality in a more aggressive way. This
  allows them to (sometimes) be faster and allocate less memory.


Adaptive Conversions To Sets
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=
=E2=95=8C=E2=95=8C=E2=95=8C

  `baby''s conversion functions `of_list', `of_array', and `of_seq' have
  adaptive complexity. If the input data is sorted, their complexity is
  *O(n)*; otherwise, their complexity gracefully degrades down to
  *O(n.log n)*.


More Operations
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  `baby' offers a few operations that do not exist in OCaml's `Set'
  library:

  =E2=81=83 The symmetric difference, `xor';
  =E2=81=83 The conversion functions `of_array' and `to_array';
  =E2=81=83 The extremum-removal functions `remove_min_elt' and
    `remove_max_elt';
  =E2=81=83 The enumeration API in the submodule `Enum'. Enumerations shoul=
d be
    slightly faster than standard sequences, and are able to efficiently
    seek ahead, via the function `from'.


Documented Complexity
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  In `baby', the time complexity of every operation is documented.


Compatibility
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  `baby' is perfectly compatible with OCaml's Set library. In other
  words, using `Baby.W.Set' instead of `Set' is safe.

  As a word of warning, though, if the equivalence relation on elements
  is coarser than equality (that is, if `compare x y =3D 0' does not imply
  `x =3D y'), then `Baby.W.Set' and `Set' might behave differently when a
  choice must be made between two equivalent elements. This can occur in
  `union', `of_list', `of_array', `of_seq', `add_seq', `map'.


Preview of Stripe client and mock server - DkStdRestApis
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/ann-preview-of-stripe-client-and-mock-server=
-dkstdrestapis/14841/1>


jbeckford announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80

  I am pleased to announce that Stripe is the first REST API available
  in the DkStdRestApis project:

  <https://github.com/diskuv/DkStdRestApis?tab=3Dreadme-ov-file>

  That README has a 10-minute quick start; you can do it with or without
  a Stripe account.

  The Stripe client and mock server have Apache 2.0 licensing and were
  generated using a new OpenAPI code generator. The code generator is
  not part of this preview announcement (wait until DkCoder 0.4
  announcement) but since there have been a couple generators released
  in the past month perhaps it is best to say what is different:

  1. Both client and server source code are generated. The client
     examples include direct web requests by cohttp-lwt-curl
     (`src/DkStdRestApis_NotStripe/Curl2.ml') and also indirectly by
     printing the `curl -d name=3Dvalue https://api.stripe.com/...'
     command (`src/DkStdRestApis_NotStripe/CurlCmd.ml'). The mock server
     example (`src/DkStdRestApis_NotStripe/ServerTiny.ml') uses @c-cube
     's [excellent tiny_httpd daemon].
  2. Very small dependency cone that works on Windows/macOS/Linux
     (including the REST server). And the minimum OCaml version will be
     4.14 for the foreseeable future.
  3. My focus is not on the code generator but having working,
     maintainable REST clients for the major cloud/SaaS services that
     can be included in DkCoder's liberally licensed standard
     library. The server feature was a pleasant but very unplanned
     accident. If I do take time to develop fancier server features
     (ex. replaying mocks from a corpus, etc.) those additions will not
     be open source.
  4. It is intended to have high coverage of OpenAPI features. Today
     that includes form URL encoding, sum types, server-side
     polymorphism and style/explode support. The only major feature that
     is intentionally unsupported is the `not' composition operator
     (have no idea how to express negation in OCaml's type system!).

  Now for the problems:

  1. Stripe only compiles in bytecode mode. Why? The generated modules
     are huge (8+ MB in total) because Stripe's specification is
     6MB. Native compilation [can't handle that today].
  2. I'm not releasing to opam until I'm sure that native compilation
     won't denial-of-service developer and opam machines. I'm also
     waiting for some Windows patches to dependencies to be released.

  Thanks to @vlaviron for helping solve some of the compilation scaling
  problems. And thanks to Nomadic Labs (and OCamlPro?) for developing
  [Json_encoding] and @anuragsoni for developing [Routes]; they are both
  bidirectional + lightweight + foundational.

  Report bugs / add stars [in the DkCoder project].


[excellent tiny_httpd daemon] <https://v3.ocaml.org/p/tiny_httpd/latest>

[can't handle that today] <https://github.com/ocaml/ocaml/issues/13250>

[Json_encoding] <https://v3.ocaml.org/p/json-data-encoding/latest>

[Routes] <https://v3.ocaml.org/p/routes/latest/doc/index.html>

[in the DkCoder project] <https://github.com/diskuv/dkcoder>


opam 2.2.0 rc1 release
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/ann-opam-2-2-0-rc1-release/14842/1>


R. Boujbel announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80

  We=E2=80=99re once again very excited to announce this first release cand=
idate
  (and hopefully only) for opam 2.2.0.


What=E2=80=99s new in this rc?
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  =E2=80=A2 Fix `opam upgrade' wanting to keep rebuilding the compiler (as =
now
    it contains an `x-env-path-rewrite' field)
  =E2=80=A2 Provide defaults so `opam init -y' no longer asks questions on
    Windows
  =E2=80=A2 Fix `OpamConsole.menu' when there are more than 9 options (can
    happen on Windows)
  =E2=80=A2 A couple more fixes and general improvements

  :open_book: You can read our [blog post ] for more information about
  these changes and more, and for even more details you can take a look
  at the [release note ] or the [changelog].


[blog post ] <https://opam.ocaml.org/blog/opam-2-2-0-rc1/>

[release note ] <https://github.com/ocaml/opam/releases/tag/2.2.0-rc1>

[changelog] <https://github.com/ocaml/opam/blob/2.2.0-rc1/CHANGES>


Windows issues
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  Configuration of Windows is tricky, so please don=E2=80=99t be too
  disheartened if things don=E2=80=99t work instantly. If something doesn=
=E2=80=99t work
  first time, [please do report it ], even if you manage to find a way
  to workaround it. If opam didn=E2=80=99t elegantly tell you what was wron=
g,
  then it=E2=80=99s a bug and we=E2=80=99d love to hear about it, rather th=
an ending up
  with a series of workarounds flying around. It=E2=80=99s no problem at al=
l for
  us to receive a bug report which turns out to be user error - we=E2=80=99=
d far
  rather that than not hear bugs which are opam=E2=80=99s error! :scream_ca=
t:


[please do report it ] <https://github.com/ocaml/opam/issues>


How to upgrade
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  For Unix systems

  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 bash -c "sh <(curl -fsSL https://raw.githubusercontent.com/ocam=
l/opam/master/shell/install.sh) --version 2.2.0~rc1"
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  or from PowerShell for Windows systems

  =E2=94=8C=E2=94=80=E2=94=80=E2=94=80=E2=94=80
  =E2=94=82 Invoke-Expression "& { $(Invoke-RestMethod https://raw.githubus=
ercontent.com/ocaml/opam/master/shell/install.ps1) }"
  =E2=94=94=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  We=E2=80=99re planning for a final opam 2.2.0 release next week, so pleas=
e do
  report any issue you encounter on our [bug-tracker ].


[bug-tracker ] <https://github.com/ocaml/opam/issues>


Project wide occurrences
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=
=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  Archive:
  <https://discuss.ocaml.org/t/ann-project-wide-occurrences/14847/1>


vds announced
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  I am very excited to announce the first release of Merlin and
  Ocaml-LSP with support for project-wide occurrences =F0=9F=A5=B3. More
  precisely, it is now possible to query for every _usage_ of any value
  (and type, modules, etc.) anywhere in a project built with Dune. This
  is a very handy tool for code navigation !


Requirements
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  =E2=80=A2 OCaml 5.2
  =E2=80=A2 Latest Dune (>=3D `3.16.0')
  =E2=80=A2 Latest Merlin (>=3D `5.1-502')
  =E2=80=A2 Latest OCaml-LSP preview (`1.18.0~5.2preview')


Usage
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  =E2=80=A2 Build the new `@ocaml-index' alias.
  > We recommend running the indexation in watch mode along with your
    usual targets: `dune build @ocaml-index --watch' so that the index
    is always up to date.
  =E2=80=A2 Use the `Find/Peek all references' feature of LSP-based plugins
    =E2=80=A2 or `merlin-project-occurrences' in emacs
    =E2=80=A2 or `OccurrencesProjectWide' in vim.
  =E2=80=A2 Enjoy jumping around =F0=9F=A6=98

  <https://global.discourse-cdn.com/business7/uploads/ocaml/original/2X/c/c=
282815986f60d12069d33bc13f22fcdb70f0022.gif>


More information and bug reports
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=
=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=
=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=
=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C=E2=95=8C

  Bug reports and feature requests should be submitted to the Merlin
  [issue tracker]. There are already some known issues like the absence
  of declarations in the results and the impossibility to query from a
  declaration. Progress on occurrences can be tracked in a [pinned
  meta-issue]. If you are interested in contributing and learning more
  about the feature do not hesitate to join the [first public
  dev-meeting] on Thursday !


[issue tracker] <https://github.com/ocaml/merlin/issues>

[pinned meta-issue] <https://github.com/ocaml/merlin/issues/1780>

[first public dev-meeting]
<https://discuss.ocaml.org/t/ann-first-public-editor-tooling-dev-meeting/14=
824/1>


Other OCaml News
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=
=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

From the ocaml.org blog
=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=
=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=
=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80=E2=94=80

  Here are links from many OCaml blogs aggregated at [the ocaml.org
  blog].

  =E2=80=A2 [Keeping Up With the Compiler: How we Help Maintain the OCaml
    Language]


[the ocaml.org blog] <https://ocaml.org/blog/>

[Keeping Up With the Compiler: How we Help Maintain the OCaml Language]
<https://tarides.com/blog/2024-06-19-keeping-up-with-the-compiler-how-we-he=
lp-maintain-the-ocaml-language>


Old CWN
=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90=E2=95=90

  If you happen to miss a CWN, you can [send me a message] and I'll mail
  it to you, or go take a look at [the archive] or the [RSS feed of the
  archives].

  If you also wish to receive it every week by mail, you may subscribe
  to the [caml-list].

  [Alan Schmitt]


[send me a message] <mailto:alan.schmitt@polytechnique.org>

[the archive] <https://alan.petitepomme.net/cwn/>

[RSS feed of the archives] <https://alan.petitepomme.net/cwn/cwn.rss>

[caml-list] <https://sympa.inria.fr/sympa/info/caml-list>

[Alan Schmitt] <https://alan.petitepomme.net/>


--=-=-=
Content-Type: text/html; charset=utf-8
Content-Disposition: inline
Content-Transfer-Encoding: quoted-printable

<?xml version=3D"1.0" encoding=3D"utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns=3D"http://www.w3.org/1999/xhtml" lang=3D"en" xml:lang=3D"en">
<head>
<!-- 2024-06-25 Tue 15:57 -->
<meta http-equiv=3D"Content-Type" content=3D"text/html;charset=3Dutf-8" />
<meta name=3D"viewport" content=3D"width=3Ddevice-width, initial-scale=3D1"=
 />
<title>OCaml Weekly News</title>
<meta name=3D"generator" content=3D"Org Mode" />
<style>
  #content { max-width: 60em; margin: auto; }
  .title  { text-align: center;
             margin-bottom: .2em; }
  .subtitle { text-align: center;
              font-size: medium;
              font-weight: bold;
              margin-top:0; }
  .todo   { font-family: monospace; color: red; }
  .done   { font-family: monospace; color: green; }
  .priority { font-family: monospace; color: orange; }
  .tag    { background-color: #eee; font-family: monospace;
            padding: 2px; font-size: 80%; font-weight: normal; }
  .timestamp { color: #bebebe; }
  .timestamp-kwd { color: #5f9ea0; }
  .org-right  { margin-left: auto; margin-right: 0px;  text-align: right; }
  .org-left   { margin-left: 0px;  margin-right: auto; text-align: left; }
  .org-center { margin-left: auto; margin-right: auto; text-align: center; }
  .underline { text-decoration: underline; }
  #postamble p, #preamble p { font-size: 90%; margin: .2em; }
  p.verse { margin-left: 3%; }
  pre {
    border: 1px solid #e6e6e6;
    border-radius: 3px;
    background-color: #f2f2f2;
    padding: 8pt;
    font-family: monospace;
    overflow: auto;
    margin: 1.2em;
  }
  pre.src {
    position: relative;
    overflow: auto;
  }
  pre.src:before {
    display: none;
    position: absolute;
    top: -8px;
    right: 12px;
    padding: 3px;
    color: #555;
    background-color: #f2f2f299;
  }
  pre.src:hover:before { display: inline; margin-top: 14px;}
  /* Languages per Org manual */
  pre.src-asymptote:before { content: 'Asymptote'; }
  pre.src-awk:before { content: 'Awk'; }
  pre.src-authinfo::before { content: 'Authinfo'; }
  pre.src-C:before { content: 'C'; }
  /* pre.src-C++ doesn't work in CSS */
  pre.src-clojure:before { content: 'Clojure'; }
  pre.src-css:before { content: 'CSS'; }
  pre.src-D:before { content: 'D'; }
  pre.src-ditaa:before { content: 'ditaa'; }
  pre.src-dot:before { content: 'Graphviz'; }
  pre.src-calc:before { content: 'Emacs Calc'; }
  pre.src-emacs-lisp:before { content: 'Emacs Lisp'; }
  pre.src-fortran:before { content: 'Fortran'; }
  pre.src-gnuplot:before { content: 'gnuplot'; }
  pre.src-haskell:before { content: 'Haskell'; }
  pre.src-hledger:before { content: 'hledger'; }
  pre.src-java:before { content: 'Java'; }
  pre.src-js:before { content: 'Javascript'; }
  pre.src-latex:before { content: 'LaTeX'; }
  pre.src-ledger:before { content: 'Ledger'; }
  pre.src-lisp:before { content: 'Lisp'; }
  pre.src-lilypond:before { content: 'Lilypond'; }
  pre.src-lua:before { content: 'Lua'; }
  pre.src-matlab:before { content: 'MATLAB'; }
  pre.src-mscgen:before { content: 'Mscgen'; }
  pre.src-ocaml:before { content: 'Objective Caml'; }
  pre.src-octave:before { content: 'Octave'; }
  pre.src-org:before { content: 'Org mode'; }
  pre.src-oz:before { content: 'OZ'; }
  pre.src-plantuml:before { content: 'Plantuml'; }
  pre.src-processing:before { content: 'Processing.js'; }
  pre.src-python:before { content: 'Python'; }
  pre.src-R:before { content: 'R'; }
  pre.src-ruby:before { content: 'Ruby'; }
  pre.src-sass:before { content: 'Sass'; }
  pre.src-scheme:before { content: 'Scheme'; }
  pre.src-screen:before { content: 'Gnu Screen'; }
  pre.src-sed:before { content: 'Sed'; }
  pre.src-sh:before { content: 'shell'; }
  pre.src-sql:before { content: 'SQL'; }
  pre.src-sqlite:before { content: 'SQLite'; }
  /* additional languages in org.el's org-babel-load-languages alist */
  pre.src-forth:before { content: 'Forth'; }
  pre.src-io:before { content: 'IO'; }
  pre.src-J:before { content: 'J'; }
  pre.src-makefile:before { content: 'Makefile'; }
  pre.src-maxima:before { content: 'Maxima'; }
  pre.src-perl:before { content: 'Perl'; }
  pre.src-picolisp:before { content: 'Pico Lisp'; }
  pre.src-scala:before { content: 'Scala'; }
  pre.src-shell:before { content: 'Shell Script'; }
  pre.src-ebnf2ps:before { content: 'ebfn2ps'; }
  /* additional language identifiers per "defun org-babel-execute"
       in ob-*.el */
  pre.src-cpp:before  { content: 'C++'; }
  pre.src-abc:before  { content: 'ABC'; }
  pre.src-coq:before  { content: 'Coq'; }
  pre.src-groovy:before  { content: 'Groovy'; }
  /* additional language identifiers from org-babel-shell-names in
     ob-shell.el: ob-shell is the only babel language using a lambda to put
     the execution function name together. */
  pre.src-bash:before  { content: 'bash'; }
  pre.src-csh:before  { content: 'csh'; }
  pre.src-ash:before  { content: 'ash'; }
  pre.src-dash:before  { content: 'dash'; }
  pre.src-ksh:before  { content: 'ksh'; }
  pre.src-mksh:before  { content: 'mksh'; }
  pre.src-posh:before  { content: 'posh'; }
  /* Additional Emacs modes also supported by the LaTeX listings package */
  pre.src-ada:before { content: 'Ada'; }
  pre.src-asm:before { content: 'Assembler'; }
  pre.src-caml:before { content: 'Caml'; }
  pre.src-delphi:before { content: 'Delphi'; }
  pre.src-html:before { content: 'HTML'; }
  pre.src-idl:before { content: 'IDL'; }
  pre.src-mercury:before { content: 'Mercury'; }
  pre.src-metapost:before { content: 'MetaPost'; }
  pre.src-modula-2:before { content: 'Modula-2'; }
  pre.src-pascal:before { content: 'Pascal'; }
  pre.src-ps:before { content: 'PostScript'; }
  pre.src-prolog:before { content: 'Prolog'; }
  pre.src-simula:before { content: 'Simula'; }
  pre.src-tcl:before { content: 'tcl'; }
  pre.src-tex:before { content: 'TeX'; }
  pre.src-plain-tex:before { content: 'Plain TeX'; }
  pre.src-verilog:before { content: 'Verilog'; }
  pre.src-vhdl:before { content: 'VHDL'; }
  pre.src-xml:before { content: 'XML'; }
  pre.src-nxml:before { content: 'XML'; }
  /* add a generic configuration mode; LaTeX export needs an additional
     (add-to-list 'org-latex-listings-langs '(conf " ")) in .emacs */
  pre.src-conf:before { content: 'Configuration File'; }

  table { border-collapse:collapse; }
  caption.t-above { caption-side: top; }
  caption.t-bottom { caption-side: bottom; }
  td, th { vertical-align:top;  }
  th.org-right  { text-align: center;  }
  th.org-left   { text-align: center;   }
  th.org-center { text-align: center; }
  td.org-right  { text-align: right;  }
  td.org-left   { text-align: left;   }
  td.org-center { text-align: center; }
  dt { font-weight: bold; }
  .footpara { display: inline; }
  .footdef  { margin-bottom: 1em; }
  .figure { padding: 1em; }
  .figure p { text-align: center; }
  .equation-container {
    display: table;
    text-align: center;
    width: 100%;
  }
  .equation {
    vertical-align: middle;
  }
  .equation-label {
    display: table-cell;
    text-align: right;
    vertical-align: middle;
  }
  .inlinetask {
    padding: 10px;
    border: 2px solid gray;
    margin: 10px;
    background: #ffffcc;
  }
  #org-div-home-and-up
   { text-align: right; font-size: 70%; white-space: nowrap; }
  textarea { overflow-x: auto; }
  .linenr { font-size: smaller }
  .code-highlighted { background-color: #ffff00; }
  .org-info-js_info-navigation { border-style: none; }
  #org-info-js_console-label
    { font-size: 10px; font-weight: bold; white-space: nowrap; }
  .org-info-js_search-highlight
    { background-color: #ffff00; color: #000000; font-weight: bold; }
  .org-svg { }
</style>
<style type=3D"text/css">#table-of-contents h2 { display: none } .title { d=
isplay: none } .authorname { text-align: right }</style>
<style type=3D"text/css">.outline-2 {border-top: 1px solid black;}</style>
</head>
<body>
<div id=3D"content" class=3D"content">
<h1 class=3D"title">OCaml Weekly News</h1>
<p>
<a href=3D"https://alan.petitepomme.net/cwn/2024.06.18.html">Previous Week<=
/a> <a href=3D"https://alan.petitepomme.net/cwn/index.html">Up</a> <a href=
=3D"https://alan.petitepomme.net/cwn/2024.07.02.html">Next Week</a>
</p>

<p>
Hello
</p>

<p>
Here is the latest OCaml Weekly News, for the week of June 18 to 25, 2024.
</p>

<div id=3D"table-of-contents" role=3D"doc-toc">
<h2>Table of Contents</h2>
<div id=3D"text-table-of-contents" role=3D"doc-toc">
<ul>
<li><a href=3D"#1">First public editor tooling dev-meeting</a></li>
<li><a href=3D"#2">First release of oma</a></li>
<li><a href=3D"#3">Ppxlib dev meetings</a></li>
<li><a href=3D"#4">CAISAR release 2.0, a platform for characterizing AI saf=
ety and robustness</a></li>
<li><a href=3D"#5">First release of baby</a></li>
<li><a href=3D"#6">Preview of Stripe client and mock server - DkStdRestApis=
</a></li>
<li><a href=3D"#7">opam 2.2.0 rc1 release</a></li>
<li><a href=3D"#8">Project wide occurrences</a></li>
<li><a href=3D"#9">Other OCaml News</a></li>
<li><a href=3D"#org4880d13">Old CWN</a></li>
</ul>
</div>
</div>


<div id=3D"outline-container-1" class=3D"outline-2">
<h2 id=3D"1">First public editor tooling dev-meeting</h2>
<div class=3D"outline-text-2" id=3D"text-1">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-first-public-editor-too=
ling-dev-meeting/14824/1">https://discuss.ocaml.org/t/ann-first-public-edit=
or-tooling-dev-meeting/14824/1</a>
</p>
</div>

<div id=3D"outline-container-org6e7c2a3" class=3D"outline-3">
<h3 id=3D"org6e7c2a3">vds announced</h3>
<div class=3D"outline-text-3" id=3D"text-org6e7c2a3">
<p>
We are organizing the first public dev-meeting about Merlin, OCaml-LSP and =
more
generally editor support for OCaml. This meeting will take place on <b>Thur=
sday, June 27th</b>,
at 05:00 pm CEST. We plan to have these happen every last Thursday of the m=
onth.
</p>

<p>
The goal of these meetings is to provide a place for all contributors of th=
ese
projects to discuss their work together. Whether you are a long time mainta=
iner,
an occasional contributor, a new comer, or simply a curious passer-by, plea=
se
feel free to join and participate!=20
</p>

<p>
We also plan to have some short technical presentations to help contributors
learn more about the projects involved. These won't be systematic, and
if you are interested in a particular subject feel free to ask about it or =
to
propose a presentation.
</p>

<p>
The agenda for this first meeting, which will be focused on the burning top=
ic of
project-wide occurrences, is the following:
</p>

<ul class=3D"org-ul">
<li>A tour-de-table to allow the participants that wish to do so to present=
 themselves and mention issues / prs they are interested in.</li>
<li>A presentation of current on-going projects.</li>
<li>A focus on project-wide occurrences: how does it work, what are the too=
ls that need to interact together and what are its current limitations and =
possible future improvements.</li>
<li>Discuss issues and pull requests that were tagged in advance or mention=
ed during the tour-de-table.</li>
<li>Informal discussion</li>
</ul>

<p>
We looking forward to meeting you!
</p>

<p>
Meeting link: <a href=3D"https://meet.google.com/imo-mkxi-hpt">https://meet=
.google.com/imo-mkxi-hpt</a>
</p>
</div>
</div>
</div>




<div id=3D"outline-container-2" class=3D"outline-2">
<h2 id=3D"2">First release of oma</h2>
<div class=3D"outline-text-2" id=3D"text-2">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-first-release-of-oma/13=
845/2">https://discuss.ocaml.org/t/ann-first-release-of-oma/13845/2</a>
</p>
</div>

<div id=3D"outline-container-org4f62f53" class=3D"outline-3">
<h3 id=3D"org4f62f53">Fran=C3=A7ois Pottier announced</h3>
<div class=3D"outline-text-3" id=3D"text-org4f62f53">
<p>
I have just published a new release of <code>oma</code> with the following =
fixes and changes:
</p>

<ul class=3D"org-ul">
<li>New functions <code>invalidate_open_interval</code> and <code>invalidat=
e_semi_open_interval</code>.</li>
<li>Fix a serious bug in <code>Unsafe.first</code> and <code>Unsafe.last</c=
ode>, which would incorrectly return <code>None</code> when the region cont=
ains only one point.</li>
<li>Fix a serious bug in <code>Unsafe.iter</code>, which would systematical=
ly omit the last point of the region.</li>
</ul>
</div>
</div>
</div>




<div id=3D"outline-container-3" class=3D"outline-2">
<h2 id=3D"3">Ppxlib dev meetings</h2>
<div class=3D"outline-text-2" id=3D"text-3">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ppxlib-dev-meetings/12441/2=
5">https://discuss.ocaml.org/t/ppxlib-dev-meetings/12441/25</a>
</p>
</div>

<div id=3D"outline-container-org98e20f9" class=3D"outline-3">
<h3 id=3D"org98e20f9">Nathan Rebours announced</h3>
<div class=3D"outline-text-3" id=3D"text-org98e20f9">
<p>
Meeting notes are available here: <a href=3D"https://github.com/ocaml-ppx/p=
pxlib/wiki/Dev-Meeting-2024-06-18">https://github.com/ocaml-ppx/ppxlib/wiki=
/Dev-Meeting-2024-06-18</a>.
</p>

<p>
Thanks to everyone who attended!
</p>

<p>
Our next meeting is scheduled for Tuesday July 16th, 6:00PM CET!
</p>
</div>
</div>
</div>




<div id=3D"outline-container-4" class=3D"outline-2">
<h2 id=3D"4">CAISAR release 2.0, a platform for characterizing AI safety an=
d robustness</h2>
<div class=3D"outline-text-2" id=3D"text-4">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-caisar-release-2-0-a-pl=
atform-for-characterizing-ai-safety-and-robustness/14831/1">https://discuss=
.ocaml.org/t/ann-caisar-release-2-0-a-platform-for-characterizing-ai-safety=
-and-robustness/14831/1</a>
</p>
</div>

<div id=3D"outline-container-orgbdec8dd" class=3D"outline-3">
<h3 id=3D"orgbdec8dd">Julien Girard announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgbdec8dd">
<p>
On the occasion of the 34th birthday of the <a href=3D"https://www.dw.com/f=
r/il-y-a-25-ans-la-fin-de-lapartheid/a-18523920">abolition of the apartheid=
 laws</a>, we are honoured to release CAISAR version 2.0.
</p>

<p>
The release source is available at our <a href=3D"https://git.frama-c.com/p=
ub/caisar/-/releases/2.0">public forge</a>. As our last releases, CAISAR wi=
ll soon be available on <a href=3D"https://opam.ocaml.org/packages/caisar/"=
>opam</a> and on <a href=3D"https://hub.docker.com/r/laiser/caisar">Dockerh=
ub</a>.
</p>

<p>
A nix flake is available for building CAISAR directly in the repository. Tr=
y CAISAR with <code>nix build git+https://git.frama-c.com/pub/caisar</code>!
</p>

<p>
Here are the prominent features for this 2.0 release:
</p>
</div>

<div id=3D"outline-container-orgf3fba00" class=3D"outline-4">
<h4 id=3D"orgf3fba00">Specification and verification of several neural netw=
orks at once</h4>
<div class=3D"outline-text-4" id=3D"text-orgf3fba00">
<p>
CAISAR specification language already allowed to write specifications that =
involved several neural networks at once. However, translating such specifi=
cations to actual prover queries was not possible. We added automated graph=
 editing techniques to allow such verification to take place. Within partic=
ular patterns, CAISAR will generate an ONNX file that preserve the semantic=
 of the different neural networks while encapsulating parts of the specific=
ation directly in the control flow of the new neural network. This feature =
allow the verification of properties with multiple neural networks, includi=
ng their composition.
</p>

<p>
This is quite a step forward, as it enables machine-learning dedicated veri=
fiers to tackle a much wider range of properties.
</p>
</div>
</div>

<div id=3D"outline-container-org6203ba6" class=3D"outline-4">
<h4 id=3D"org6203ba6">SVM as first-class citizens for interpretation</h4>
<div class=3D"outline-text-4" id=3D"text-org6203ba6">
<p>
CAISAR now fully integrate SVMs into the interpretation engine. Users can e=
xpect vector computations and applications on SVMs to be computed similarly=
 as what exists already for neural networks.
</p>

<p>
We also unified the theory of machine learning models. Now, SVMs and neural=
 networks can be specified with only the <code>model</code> type. In the ne=
ar future, SVMs will be parsed directly into CAISAR=E2=80=99s Neural Interm=
ediate Representations, which will simplify the verification of systems wit=
h heterogeneous AI components.
</p>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-5" class=3D"outline-2">
<h2 id=3D"5">First release of baby</h2>
<div class=3D"outline-text-2" id=3D"text-5">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-first-release-of-baby/1=
4840/1">https://discuss.ocaml.org/t/ann-first-release-of-baby/14840/1</a>
</p>
</div>

<div id=3D"outline-container-orgce55660" class=3D"outline-3">
<h3 id=3D"orgce55660">Fran=C3=A7ois Pottier announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgce55660">
<p>
It is my pleasure to announce the first release of <code>baby</code>.
</p>

<p>
<code>baby</code> is an OCaml library that offers several implementations o=
f balanced binary search trees. At this time, <code>baby</code> offers a re=
placement for OCaml's <code>Set</code> module; it does not yet have a repla=
cement for OCaml's <code>Map</code> module.
</p>

<p>
Height-balanced and weight-balanced binary search trees are offered out of =
the box. Furthermore, to advanced users, the library offers a lightweight w=
ay of implementing other balancing strategies.
</p>

<p>
The following points offer a comparison between <code>baby</code> and OCaml=
's <code>Set</code> library.
</p>
</div>

<div id=3D"outline-container-org1fe4f2a" class=3D"outline-4">
<h4 id=3D"org1fe4f2a">Better Performance</h4>
<div class=3D"outline-text-4" id=3D"text-org1fe4f2a">
<p>
At the time of writing, <code>baby</code> offers generally better performan=
ce than OCaml's <code>Set</code> library. Its operations are generally fast=
er (sometimes much faster; sometimes slightly faster; sometimes slightly sl=
ower) than those of the <code>Set</code> library, and its memory allocation=
 rate is slightly lower.
</p>
</div>
</div>

<div id=3D"outline-container-org13afeb3" class=3D"outline-4">
<h4 id=3D"org13afeb3">Constant-Time Cardinal</h4>
<div class=3D"outline-text-4" id=3D"text-org13afeb3">
<p>
In contrast with the <code>Set</code> library, <code>baby</code>'s weight-b=
alanced trees offer a <code>cardinal</code> function whose time complexity =
is <b>O(1)</b>. They also offer a family of random access functions (<code>=
get</code>, <code>index</code>, etc.) whose time complexity is <b>O(log n)<=
/b>. Furthermore, by exploiting cardinality information, the functions <cod=
e>subset</code> and <code>equal</code> are sometimes able to return <code>f=
alse</code> in constant time.
</p>
</div>
</div>

<div id=3D"outline-container-org652588c" class=3D"outline-4">
<h4 id=3D"org652588c">Better Sharing</h4>
<div class=3D"outline-text-4" id=3D"text-org652588c">
<p>
<code>baby</code>'s binary operations (<code>union</code>, <code>inter</cod=
e>, <code>diff</code>) take advantage of (and preserve) physical equality i=
n a more aggressive way. This allows them to (sometimes) be faster and allo=
cate less memory.
</p>
</div>
</div>

<div id=3D"outline-container-org5621117" class=3D"outline-4">
<h4 id=3D"org5621117">Adaptive Conversions To Sets</h4>
<div class=3D"outline-text-4" id=3D"text-org5621117">
<p>
<code>baby</code>'s conversion functions <code>of_list</code>, <code>of_arr=
ay</code>, and <code>of_seq</code> have adaptive complexity. If the input d=
ata is sorted, their complexity is <b>O(n)</b>; otherwise, their complexity=
 gracefully degrades down to <b>O(n.log n)</b>.
</p>
</div>
</div>

<div id=3D"outline-container-orgc38a45d" class=3D"outline-4">
<h4 id=3D"orgc38a45d">More Operations</h4>
<div class=3D"outline-text-4" id=3D"text-orgc38a45d">
<p>
<code>baby</code> offers a few operations that do not exist in OCaml's <cod=
e>Set</code> library:
</p>

<ul class=3D"org-ul">
<li>The symmetric difference, <code>xor</code>;</li>
<li>The conversion functions <code>of_array</code> and <code>to_array</code=
>;</li>
<li>The extremum-removal functions <code>remove_min_elt</code> and <code>re=
move_max_elt</code>;</li>
<li>The enumeration API in the submodule <code>Enum</code>. Enumerations sh=
ould be slightly faster than standard sequences, and are able to efficientl=
y seek ahead, via the function <code>from</code>.</li>
</ul>
</div>
</div>

<div id=3D"outline-container-orgc234188" class=3D"outline-4">
<h4 id=3D"orgc234188">Documented Complexity</h4>
<div class=3D"outline-text-4" id=3D"text-orgc234188">
<p>
In <code>baby</code>, the time complexity of every operation is documented.
</p>
</div>
</div>

<div id=3D"outline-container-orgf3b1532" class=3D"outline-4">
<h4 id=3D"orgf3b1532">Compatibility</h4>
<div class=3D"outline-text-4" id=3D"text-orgf3b1532">
<p>
<code>baby</code> is perfectly compatible with OCaml's Set library. In othe=
r words, using <code>Baby.W.Set</code> instead of <code>Set</code> is safe.
</p>

<p>
As a word of warning, though, if the equivalence relation on elements is co=
arser than equality (that is, if <code>compare x y =3D 0</code> does not im=
ply <code>x =3D y</code>), then <code>Baby.W.Set</code> and <code>Set</code=
> might behave differently when a choice must be made between two equivalen=
t elements. This can occur in <code>union</code>, <code>of_list</code>, <co=
de>of_array</code>, <code>of_seq</code>, <code>add_seq</code>, <code>map</c=
ode>.
</p>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-6" class=3D"outline-2">
<h2 id=3D"6">Preview of Stripe client and mock server - DkStdRestApis</h2>
<div class=3D"outline-text-2" id=3D"text-6">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-preview-of-stripe-clien=
t-and-mock-server-dkstdrestapis/14841/1">https://discuss.ocaml.org/t/ann-pr=
eview-of-stripe-client-and-mock-server-dkstdrestapis/14841/1</a>
</p>
</div>

<div id=3D"outline-container-org793cbeb" class=3D"outline-3">
<h3 id=3D"org793cbeb">jbeckford announced</h3>
<div class=3D"outline-text-3" id=3D"text-org793cbeb">
<p>
I am pleased to announce that Stripe is the first REST API available in the=
 DkStdRestApis project:
</p>

<p>
<a href=3D"https://github.com/diskuv/DkStdRestApis?tab=3Dreadme-ov-file">ht=
tps://github.com/diskuv/DkStdRestApis?tab=3Dreadme-ov-file</a>
</p>

<p>
That README has a 10-minute quick start; you can do it with or without a St=
ripe account.
</p>

<p>
The Stripe client and mock server have Apache 2.0 licensing and were genera=
ted using a new OpenAPI code generator. The code generator is not part of t=
his preview announcement (wait until DkCoder 0.4 announcement) but since th=
ere have been a couple generators released in the past month perhaps it is =
best to say what is different:
</p>

<ol class=3D"org-ol">
<li>Both client and server source code are generated. The client examples i=
nclude direct web requests by cohttp-lwt-curl (<code>src/DkStdRestApis_NotS=
tripe/Curl2.ml</code>) and also indirectly by printing the <code>curl -d na=
me=3Dvalue https://api.stripe.com/...</code> command (<code>src/DkStdRestAp=
is_NotStripe/CurlCmd.ml</code>). The mock server example (<code>src/DkStdRe=
stApis_NotStripe/ServerTiny.ml</code>) uses @c-cube 's <a href=3D"https://v=
3.ocaml.org/p/tiny_httpd/latest">excellent tiny_httpd daemon</a>.</li>
<li>Very small dependency cone that works on Windows/macOS/Linux (including=
 the REST server). And the minimum OCaml version will be 4.14 for the fores=
eeable future.</li>
<li>My focus is not on the code generator but having working, maintainable =
REST clients for the major cloud/SaaS services that can be included in DkCo=
der's liberally licensed standard library. The server feature was a pleasan=
t but very unplanned accident. If I do take time to develop fancier server =
features (ex. replaying mocks from a corpus, etc.) those additions will not=
 be open source.</li>
<li>It is intended to have high coverage of OpenAPI features. Today that in=
cludes form URL encoding, sum types, server-side polymorphism and style/exp=
lode support. The only major feature that is intentionally unsupported is t=
he <code>not</code> composition operator (have no idea how to express negat=
ion in OCaml's type system!).</li>
</ol>

<p>
Now for the problems:
</p>

<ol class=3D"org-ol">
<li>Stripe only compiles in bytecode mode. Why? The generated modules are h=
uge (8+ MB in total) because Stripe's specification is 6MB. Native compilat=
ion <a href=3D"https://github.com/ocaml/ocaml/issues/13250">can't handle th=
at today</a>.</li>
<li>I'm not releasing to opam until I'm sure that native compilation won't =
denial-of-service developer and opam machines. I'm also waiting for some Wi=
ndows patches to dependencies to be released.</li>
</ol>

<p>
Thanks to @vlaviron for helping solve some of the compilation scaling probl=
ems. And thanks to Nomadic Labs (and OCamlPro?) for developing <a href=3D"h=
ttps://v3.ocaml.org/p/json-data-encoding/latest">Json_encoding</a> and @anu=
ragsoni for developing <a href=3D"https://v3.ocaml.org/p/routes/latest/doc/=
index.html">Routes</a>; they are both bidirectional + lightweight + foundat=
ional.
</p>

<p>
Report bugs / add stars <a href=3D"https://github.com/diskuv/dkcoder">in th=
e DkCoder project</a>.
</p>
</div>
</div>
</div>




<div id=3D"outline-container-7" class=3D"outline-2">
<h2 id=3D"7">opam 2.2.0 rc1 release</h2>
<div class=3D"outline-text-2" id=3D"text-7">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-opam-2-2-0-rc1-release/=
14842/1">https://discuss.ocaml.org/t/ann-opam-2-2-0-rc1-release/14842/1</a>
</p>
</div>

<div id=3D"outline-container-orgaa68448" class=3D"outline-3">
<h3 id=3D"orgaa68448">R. Boujbel announced</h3>
<div class=3D"outline-text-3" id=3D"text-orgaa68448">
<p>
We=E2=80=99re once again very excited to announce this first release candid=
ate (and hopefully only) for opam 2.2.0.
</p>
</div>

<div id=3D"outline-container-orge98e725" class=3D"outline-4">
<h4 id=3D"orge98e725">What=E2=80=99s new in this rc?</h4>
<div class=3D"outline-text-4" id=3D"text-orge98e725">
<ul class=3D"org-ul">
<li>Fix <code>opam upgrade</code> wanting to keep rebuilding the compiler (=
as now it contains an <code>x-env-path-rewrite</code> field)</li>
<li>Provide defaults so <code>opam init -y</code> no longer asks questions =
on Windows</li>
<li>Fix <code>OpamConsole.menu</code> when there are more than 9 options (c=
an happen on Windows)</li>
<li>A couple more fixes and general improvements</li>
</ul>

<p>
:open_book: You can read our <a href=3D"https://opam.ocaml.org/blog/opam-2-=
2-0-rc1/">blog post </a> for more information about these changes and more,=
 and for even more details you can take a look at the <a href=3D"https://gi=
thub.com/ocaml/opam/releases/tag/2.2.0-rc1">release note </a> or the <a hre=
f=3D"https://github.com/ocaml/opam/blob/2.2.0-rc1/CHANGES">changelog</a>.
</p>
</div>
</div>

<div id=3D"outline-container-orgcb27ba9" class=3D"outline-4">
<h4 id=3D"orgcb27ba9">Windows issues</h4>
<div class=3D"outline-text-4" id=3D"text-orgcb27ba9">
<p>
Configuration of Windows is tricky, so please don=E2=80=99t be too disheart=
ened if things don=E2=80=99t work instantly. If something doesn=E2=80=99t w=
ork first time, <a href=3D"https://github.com/ocaml/opam/issues">please do =
report it </a>, even if you manage to find a way to workaround it. If opam =
didn=E2=80=99t elegantly tell you what was wrong, then it=E2=80=99s a bug a=
nd we=E2=80=99d love to hear about it, rather than ending up with a series =
of workarounds flying around. It=E2=80=99s no problem at all for us to rece=
ive a bug report which turns out to be user error - we=E2=80=99d far rather=
 that than not hear bugs which are opam=E2=80=99s error! :scream_cat:
</p>
</div>
</div>

<div id=3D"outline-container-orgb626b11" class=3D"outline-4">
<h4 id=3D"orgb626b11">How to upgrade</h4>
<div class=3D"outline-text-4" id=3D"text-orgb626b11">
<p>
For Unix systems
</p>

<pre class=3D"example" id=3D"orgd1345cb">
bash -c "sh &lt;(curl -fsSL https://raw.githubusercontent.com/ocaml/opam/ma=
ster/shell/install.sh) --version 2.2.0~rc1"
</pre>

<p>
or from PowerShell for Windows systems
</p>

<pre class=3D"example" id=3D"orga0a0561">
Invoke-Expression "&amp; { $(Invoke-RestMethod https://raw.githubuserconten=
t.com/ocaml/opam/master/shell/install.ps1) }"
</pre>

<p>
We=E2=80=99re planning for a final opam 2.2.0 release next week, so please =
do report any issue you encounter on our <a href=3D"https://github.com/ocam=
l/opam/issues">bug-tracker </a>.
</p>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-8" class=3D"outline-2">
<h2 id=3D"8">Project wide occurrences</h2>
<div class=3D"outline-text-2" id=3D"text-8">
<p>
Archive: <a href=3D"https://discuss.ocaml.org/t/ann-project-wide-occurrence=
s/14847/1">https://discuss.ocaml.org/t/ann-project-wide-occurrences/14847/1=
</a>
</p>
</div>

<div id=3D"outline-container-org5a65f26" class=3D"outline-3">
<h3 id=3D"org5a65f26">vds announced</h3>
<div class=3D"outline-text-3" id=3D"text-org5a65f26">
<p>
I am very excited to announce the first release of Merlin and Ocaml-LSP wit=
h support for project-wide occurrences =F0=9F=A5=B3. More precisely, it is =
now possible to query for every <span class=3D"underline">usage</span> of a=
ny value (and type, modules, etc.) anywhere in a project built with Dune. T=
his is a very handy tool for code navigation !
</p>
</div>

<div id=3D"outline-container-orgbe6f9b7" class=3D"outline-4">
<h4 id=3D"orgbe6f9b7">Requirements</h4>
<div class=3D"outline-text-4" id=3D"text-orgbe6f9b7">
<ul class=3D"org-ul">
<li>OCaml 5.2</li>
<li>Latest Dune (&gt;=3D <code>3.16.0</code>)</li>
<li>Latest Merlin (&gt;=3D <code>5.1-502</code>)</li>
<li>Latest OCaml-LSP preview (<code>1.18.0~5.2preview</code>)</li>
</ul>
</div>
</div>

<div id=3D"outline-container-orgee5873b" class=3D"outline-4">
<h4 id=3D"orgee5873b">Usage</h4>
<div class=3D"outline-text-4" id=3D"text-orgee5873b">
<ul class=3D"org-ul">
<li>Build the new <code>@ocaml-index</code> alias.</li>
</ul>
<p>
&gt; We recommend running the indexation in watch mode along with your usua=
l targets: <code>dune build @ocaml-index --watch</code> so that the index i=
s always up to date.
</p>
<ul class=3D"org-ul">
<li>Use the <code>Find/Peek  all references</code> feature of LSP-based plu=
gins=20
<ul class=3D"org-ul">
<li>or <code>merlin-project-occurrences</code> in emacs</li>
<li>or <code>OccurrencesProjectWide</code> in vim.</li>
</ul></li>
<li>Enjoy jumping around =F0=9F=A6=98</li>
</ul>


<div id=3D"org4c9ed65" class=3D"figure">
<p><img src=3D"https://global.discourse-cdn.com/business7/uploads/ocaml/ori=
ginal/2X/c/c282815986f60d12069d33bc13f22fcdb70f0022.gif" alt=3D"c282815986f=
60d12069d33bc13f22fcdb70f0022.gif" />
</p>
</div>
</div>
</div>

<div id=3D"outline-container-orga639097" class=3D"outline-4">
<h4 id=3D"orga639097">More information and bug reports</h4>
<div class=3D"outline-text-4" id=3D"text-orga639097">
<p>
Bug reports and feature requests should be submitted to the Merlin <a href=
=3D"https://github.com/ocaml/merlin/issues">issue tracker</a>. There are al=
ready some known issues like the absence of declarations in the results and=
 the impossibility to query from a declaration. Progress on occurrences can=
 be tracked in a <a href=3D"https://github.com/ocaml/merlin/issues/1780">pi=
nned meta-issue</a>. If you are interested in contributing and learning mor=
e about the feature  do not hesitate to join the <a href=3D"https://discuss=
.ocaml.org/t/ann-first-public-editor-tooling-dev-meeting/14824/1">first pub=
lic dev-meeting</a> on Thursday !
</p>
</div>
</div>
</div>
</div>




<div id=3D"outline-container-9" class=3D"outline-2">
<h2 id=3D"9">Other OCaml News</h2>
<div class=3D"outline-text-2" id=3D"text-9">
</div>
<div id=3D"outline-container-orgc45cac3" class=3D"outline-3">
<h3 id=3D"orgc45cac3">From the ocaml.org blog</h3>
<div class=3D"outline-text-3" id=3D"text-orgc45cac3">
<p>
Here are links from many OCaml blogs aggregated at <a href=3D"https://ocaml=
.org/blog/">the ocaml.org blog</a>.
</p>

<ul class=3D"org-ul">
<li><a href=3D"https://tarides.com/blog/2024-06-19-keeping-up-with-the-comp=
iler-how-we-help-maintain-the-ocaml-language">Keeping Up With the Compiler:=
 How we Help Maintain the OCaml Language</a></li>
</ul>
</div>
</div>
</div>




<div id=3D"outline-container-org4880d13" class=3D"outline-2">
<h2 id=3D"org4880d13">Old CWN</h2>
<div class=3D"outline-text-2" id=3D"text-org4880d13">
<p>
If you happen to miss a CWN, you can <a href=3D"mailto:alan.schmitt@polytec=
hnique.org">send me a message</a> and I'll mail it to you, or go take a loo=
k at <a href=3D"https://alan.petitepomme.net/cwn/">the archive</a> or the <=
a href=3D"https://alan.petitepomme.net/cwn/cwn.rss">RSS feed of the archive=
s</a>.
</p>

<p>
If you also wish to receive it every week by mail, you may subscribe to the=
 <a href=3D"https://sympa.inria.fr/sympa/info/caml-list">caml-list</a>.
</p>

<div class=3D"authorname" id=3D"orgf3458ff">
<p>
<a href=3D"https://alan.petitepomme.net/">Alan Schmitt</a>
</p>

</div>
</div>
</div>
</div>
</body>
</html>


--=-=-=--
