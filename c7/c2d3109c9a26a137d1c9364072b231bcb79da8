Received: from Hermes.metastack.local (172.16.0.8) by Hermes.metastack.local
 (172.16.0.8) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.23 via Mailbox
 Transport; Mon, 17 Apr 2023 16:28:43 +0100
Received: from Hermes.metastack.local (172.16.0.8) by Hermes.metastack.local
 (172.16.0.8) with Microsoft SMTP Server (version=TLS1_2,
 cipher=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256) id 15.1.2507.23; Mon, 17 Apr
 2023 16:28:43 +0100
Received: from exchange.romulus.metastack.com (172.16.0.21) by
 Hermes.metastack.local (172.16.0.8) with Microsoft SMTP Server
 (version=TLS1_0, cipher=TLS_RSA_WITH_AES_256_CBC_SHA) id 15.1.2507.23 via
 Frontend Transport; Mon, 17 Apr 2023 16:28:43 +0100
Received: from romulus.metastack.com ([172.16.0.20])
	by exchange.romulus.metastack.com (8.14.2/8.14.2) with ESMTP id 33HFRuZq012338
	(version=TLSv1/SSLv3 cipher=DHE-RSA-AES256-SHA bits=256 verify=NO)
	for <dra@metastack.local>; Mon, 17 Apr 2023 16:27:56 +0100
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by romulus.metastack.com (8.14.2/8.14.2) with ESMTP id 33HFRnmi012324
	for <dra-news@metastack.com>; Mon, 17 Apr 2023 16:27:49 +0100
Received: from prod-listesu18.inria.fr (HELO sympa.inria.fr) ([128.93.162.160])
  by mail2-relais-roc.national.inria.fr with ESMTP; 17 Apr 2023 17:27:48 +0200
Received: by sympa.inria.fr (Postfix, from userid 20132)
	id 3690BE7318; Mon, 17 Apr 2023 17:27:48 +0200 (CEST)
Received: from mail2-relais-roc.national.inria.fr (mail2-relais-roc.national.inria.fr [192.134.164.83])
	by sympa.inria.fr (Postfix) with ESMTPS id C7973E00A8
	for <caml-list@sympa.inria.fr>; Mon, 17 Apr 2023 17:27:43 +0200 (CEST)
Received: from deinprogramm.de ([168.119.170.211])
  by mail2-smtp-roc.national.inria.fr with ESMTP/TLS/ECDHE-RSA-AES256-GCM-SHA384; 17 Apr 2023 17:27:42 +0200
Received: from valmont.fritz.box (p5ded45d1.dip0.t-ipconnect.de [93.237.69.209])
	(using TLSv1.3 with cipher TLS_AES_256_GCM_SHA384 (256/256 bits)
	 key-exchange ECDHE (P-256) server-signature RSA-PSS (2048 bits) server-digest SHA256)
	(No client certificate requested)
	by deinprogramm.de (Postfix) with ESMTPSA id 9A67B842AE4
	for <caml-list@inria.fr>; Mon, 17 Apr 2023 17:27:41 +0200 (CEST)
From: Michael Sperber <sperber@deinprogramm.de>
To: "caml-list@inria.fr" <caml-list@inria.fr>
Subject: [Caml-list] CfP: Functional Software Architecture - FP in the Large
 (deadline June 1)
Thread-Topic: [Caml-list] CfP: Functional Software Architecture - FP in the
 Large (deadline June 1)
Thread-Index: AQHZcUFL5pV+rLQW20G8hWT8aOKNGA==
Sender: "caml-list-request@inria.fr" <caml-list-request@inria.fr>
X-MS-Exchange-MessageSentRepresentingType: 2
Date: Mon, 17 Apr 2023 16:27:41 +0100
Message-ID: <y9ljzyattoy.fsf@valmont.fritz.box>
Keywords: Sent to dra-news@metastack.com,Marked bulk,MetaStack -
 Lists,MetaStack
List-Help: <mailto:sympa_inria@inria.fr?subject=help>
List-Subscribe: <mailto:sympa_inria@inria.fr?subject=subscribe%20caml-list>
List-Unsubscribe:
	<mailto:sympa_inria@inria.fr?subject=unsubscribe%20caml-list>
Reply-To: Michael Sperber <sperber@deinprogramm.de>
Content-Language: en-GB
X-MS-Exchange-Organization-AuthAs: Anonymous
X-MS-Exchange-Organization-AuthSource: Hermes.metastack.local
X-MS-Has-Attach:
X-Auto-Response-Suppress: All
X-MS-Exchange-Organization-Network-Message-Id:
	4601e1e9-e125-405d-f373-08db3f586d8c
X-MS-TNEF-Correlator:
X-MS-Exchange-Organization-RecordReviewCfmType: 0
x-scanned-by: MIMEDefang 2.65 on 62.31.23.242
received-spf: None (mail2-relais-roc.national.inria.fr: no sender
  authenticity information available from domain of
  postmaster@sympa.inria.fr) identity=helo;  client-ip=128.93.162.160;
  receiver=mail2-relais-roc.national.inria.fr;
  envelope-from="caml-list-owner@inria.fr";
  x-sender="postmaster@sympa.inria.fr"; x-conformance=spf_only
x-ironport-av: E=Sophos;i="5.99,204,1677538800";    d="scan'208";a="103461947"
x-ironport-anti-spam-filtered: true
x-loop: caml-list@inria.fr
x-no-archive: yes
Content-Type: text/plain; charset="utf-8"
Content-ID: <2F32C3C3B11FED408021876622221813@metastack.local>
Content-Transfer-Encoding: base64
MIME-Version: 1.0

DQpPQ2FtbC1yZWxhdGVkIGNvbnRlbnQgdmVyeSB3ZWxjb21lIQ0KDQo9PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09DQoN
CiAgICAgICAgICAgICAgICoqKiBGVU5BUkNIIDIwMjMgLS0gQ0FMTCBGT1IgUEFQRVJTICoqKg0K
DQogICAgICAgICAgICAgICAgICBUaGUgRmlyc3QgQUNNIFNJR1BMQU4gV29ya3Nob3Agb24NCiAg
ICAgICAgIEZ1bmN0aW9uYWwgU29mdHdhcmUgQXJjaGl0ZWN0dXJlIC0gRlAgaW4gdGhlIExhcmdl
DQoNCiAgICAgICAgICAgIDh0aCBTZXB0ZW1iZXIgMjAyMywgU2VhdHRsZSwgV2FzaGluZ3Rvbiwg
VVNBDQogICAgICAgICAgICAgICAgICAgICAgQ28tbG9jYXRlZCB3aXRoIElDRlAgMjAyMw0KDQog
ICAgICAgICAgICAgICAgICAgIGh0dHBzOi8vdGlueXVybC5jb20vRlVOQVJDSC0yMw0KDQo9PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09DQoNClRJTUVMSU5FOg0KDQpQYXBlciBzdWJtaXNzaW9uCTFzdCBKdW5lIDIwMjMN
CkF1dGhvciBub3RpZmljYXRpb24JMjh0aCBKdW5lIDIwMjMNCkNhbWVyYSByZWFkeSBjb3B5CTE4
dGggSnVseSAyMDIzDQpXb3Jrc2hvcAkJOHRoIFNlcHQgMjAyMw0KDQpCQUNLR1JPVU5EOg0KDQoi
RnVuY3Rpb25hbCBTb2Z0d2FyZSBBcmNoaXRlY3R1cmUiIHJlZmVycyB0byBtZXRob2RzIG9mIGNv
bnN0cnVjdGlvbg0KYW5kIHN0cnVjdHVyZSBvZiBsYXJnZSBhbmQgbG9uZy1saXZlZCBzb2Z0d2Fy
ZSBwcm9qZWN0cyB0aGF0IGFyZQ0KaW1wbGVtZW50ZWQgaW4gZnVuY3Rpb25hbCBsYW5ndWFnZXMg
YW5kIHJlbGVhc2VkIHRvIHJlYWwgdXNlcnMsDQp0eXBpY2FsbHkgaW4gaW5kdXN0cnkuICBUaGUg
Z29hbHMgZm9yIHRoZSB3b3Jrc2hvcCBhcmU6DQoNCi0gVG8gYXNzZW1ibGUgYSBjb21tdW5pdHkg
aW50ZXJlc3RlZCBpbiBzb2Z0d2FyZSBhcmNoaXRlY3R1cmUNCiAgdGVjaG5pcXVlcyBhbmQgdGVj
aG5vbG9naWVzIHNwZWNpZmljIHRvIGZ1bmN0aW9uYWwgcHJvZ3JhbW1pbmc7DQoNCi0gVG8gaWRl
bnRpZnksIGNhdGVnb3JpemUsIGFuZCBkb2N1bWVudCB0b3BpY3MgcmVsZXZhbnQgdG8NCiAgdGhl
IGZpZWxkIG9mIGZ1bmN0aW9uYWwgc29mdHdhcmUgYXJjaGl0ZWN0dXJlOw0KDQotIFRvIGNvbm5l
Y3QgdGhlIGZ1bmN0aW9uYWwgcHJvZ3JhbW1pbmcgY29tbXVuaXR5IHRvIHRoZSBzb2Z0d2FyZQ0K
ICBhcmNoaXRlY3R1cmUgY29tbXVuaXR5IHRvIGNyb3NzLXBvbGxpbmF0ZSBiZXR3ZWVuIHRoZSB0
d28uDQoNClRoZSB3b3Jrc2hvcCBmb2xsb3dzIG9uIGZyb20gdGhlIEZ1bmN0aW9uYWwgU29mdHdh
cmUgQXJjaGl0ZWN0dXJlDQpvcGVuIHNwYWNlIHRoYXQgd2FzIGhlbGQgYXQgSUNGUCAyMDIyIGlu
IFNsb3ZlbmlhLg0KDQpTQ09QRToNCg0KVGhlIHdvcmtzaG9wIHNlZWtzIHN1Ym1pc3Npb25zIGlu
IGEgcmFuZ2Ugb2YgY2F0ZWdvcmllczoNCg0KLSBZb3UncmUgYSBtZW1iZXIgb2YgdGhlIEZQIGNv
bW11bml0eSBhbmQgaGF2ZSB0aG91Z2h0IGFib3V0IGhvdw0KICB0byBzdXBwb3J0IHByb2dyYW1t
aW5nIGluIHRoZSBsYXJnZSwgZm9yIGV4YW1wbGUgYnkgZnJhbWluZw0KICBmdW5jdGlvbmFsIGlk
ZWFzIGluIGFyY2hpdGVjdHVyYWwgdGVybXMgb3IgdmljZSB2ZXJzZSwgY29tcGFyaW5nDQogIGRp
ZmZlcmVudCBsYW5ndWFnZXMgaW4gdGVybXMgb2YgdGhlaXIgYXJjaGl0ZWN0dXJhbCBjYXBhYmls
aXRpZXMsDQogIGNsYXJpZnlpbmcgYXJjaGl0ZWN0dXJhbCByb2xlcyBwbGF5ZWQgYnkgZm9ybWFs
IG1ldGhvZHMsIHByb29mDQogIGFzc2lzdGFudHMgYW5kIERTTHMsIG9yIG9ic2VydmluZyBob3cg
ZnVuY3Rpb25hbCBjb25jZXB0cyBhcmUNCiAgdXNlZCBpbiBvdGhlciBsYW5ndWFnZSBhbmQgYXJj
aGl0ZWN0dXJlIGNvbW11bml0aWVzLg0KDQogIEdyZWF0LCBzdWJtaXQgYSByZXNlYXJjaCBwYXBl
ciENCg0KLSBZb3UncmUgYSBtZW1iZXIgb2YgdGhlIGFyY2hpdGVjdHVyZSBjb21tdW5pdHksIGFu
ZCBoYXZlIHRob3VnaHQNCiAgYWJvdXQgaG93IHlvdXIgZGlzY2lwbGluZSBtaWdodCBoZWxwIGZ1
bmN0aW9uYWwgcHJvZ3JhbW1lcnMsIGZvcg0KICBleGFtcGxlIGJ5IGFwcGx5aW5nIGRvbWFpbi1k
cml2ZW4gZGVzaWduLCBpbXBsZW1lbnRpbmcgaGV4YWdvbmFsDQogIGFyY2hpdGVjdHVyZSwgb3Ig
ZGVzaWduaW5nIHNlbGYtY29udGFpbmVkIHN5c3RlbXMuDQoNCiAgRXhjZWxsZW50LCBzdWJtaXQg
YSByZXNlYXJjaCBwYXBlciENCg0KLSBZb3UndmUgd29ya2VkIG9uIGEgbGFyZ2UgcHJvamVjdCB1
c2luZyBmdW5jdGlvbmFsIHByb2dyYW1taW5nLA0KICBhbmQgaXQncyB3b3JrZWQgb3V0IHdlbGws
IG9yIHRlcnJpYmx5LCBvciBhIG1peCBvZiBib3RoOyBib251cw0KICBwb2ludHMgZm9yIGRlcml2
aW5nIGFyY2hpdGVjdHVyYWwgcHJpbmNpcGxlcyBmcm9tIHlvdXIgZXhwZXJpZW5jZS4NCg0KICBX
b25kZXJmdWwsIHN1Ym1pdCBhbiBleHBlcmllbmNlIHJlcG9ydCENCg0KLSBZb3Uga25vdyBhIG5l
YXQgYXJjaGl0ZWN0dXJhbCBpZGlvbSBvciBwYXR0ZXJuIHRoYXQgbWF5IGJlIHVzZWZ1bA0KICB0
byBvdGhlcnMgZGV2ZWxvcGluZyBsYXJnZSBmdW5jdGlvbmFsIHNvZnR3YXJlIHN5c3RlbXMuDQoN
CiAgRmFidWxvdXMsIHN1Ym1pdCBhbiBhcmNoaXRlY3R1cmFsIHBlYXJsIQ0KDQotIFlvdSBoYXZl
IHNvbWV0aGluZyB0aGF0IGRvZXNuJ3QgZml0IHRoZSBhYm92ZSBjYXRlZ29yaWVzLCBidXQNCiAg
dGhhdCBzdGlsbCByZWxhdGVzIHRvIGZ1bmN0aW9uYWwgc29mdHdhcmUgYXJjaGl0ZWN0dXJlLCBz
dWNoIA0KICBhcyBzb21ldGhpbmcgdGhhdCBjYW4gYmUgd3JpdHRlbiB1cCwgb3IgdGhhdCBjb3Vs
ZCBiZSBwYXJ0IG9mDQogIHRoZSB3b3Jrc2hvcCBmb3JtYXQgbGlrZSBhIHBhbmVsIGRlYmF0ZSBv
ciBhIGZpc2hib3dsLg0KDQogIFN1cGVyYiwgc3VibWl0IHRvIHRoZSBvcGVuIGNhdGVnb3J5IQ0K
DQpSZXNlYXJjaCBwYXBlcnMgc2hvdWxkIGV4cGxhaW4gdGhlaXIgcmVzZWFyY2ggY29udHJpYnV0
aW9ucyBpbiBib3RoDQpnZW5lcmFsIGFuZCB0ZWNobmljYWwgdGVybXMsIGlkZW50aWZ5aW5nIHdo
YXQgaGFzIGJlZW4gYWNjb21wbGlzaGVkLA0KZXhwbGFpbmluZyB3aHkgaXQgaXMgc2lnbmlmaWNh
bnQsIGFuZCByZWxhdGluZyBpdCB0byBwcmV2aW91cyB3b3JrLA0KYW5kIHRvIG90aGVyIGxhbmd1
YWdlcyB3aGVyZSBhcHByb3ByaWF0ZS4NCg0KRXhwZXJpZW5jZSByZXBvcnRzIGFuZCBhcmNoaXRl
Y3R1cmFsIHBlYXJscyBuZWVkIG5vdCBuZWNlc3NhcmlseQ0KcmVwb3J0IG9yaWdpbmFsIHJlc2Vh
cmNoIHJlc3VsdHMuICBUaGUga2V5IGNyaXRlcmlvbiBmb3Igc3VjaCBwYXBlcnMNCmlzIHRoYXQg
dGhleSBtYWtlIGEgY29udHJpYnV0aW9uIGZyb20gd2hpY2ggb3RoZXJzIGNhbiBiZW5lZml0Lg0K
SXQgaXMgbm90IGVub3VnaCBzaW1wbHkgdG8gZGVzY3JpYmUgYSBsYXJnZSBzb2Z0d2FyZSBzeXN0
ZW0sIG9yDQp0byBwcmVzZW50IGlkZWFzIHRoYXQgYXJlIHNwZWNpZmljIHRvIGEgcGFydGljdWxh
ciBzeXN0ZW0uDQoNCk9wZW4gY2F0ZWdvcnkgc3VibWlzc2lvbnMgdGhhdCBhcmUgbm90IGludGVu
ZGVkIGZvciBwdWJsaWNhdGlvbiANCmFyZSBub3QgcmVxdWlyZWQgdG8gZm9sbG93IHRoZSBmb3Jt
YXR0aW5nIGd1aWRlbGluZXMsIGFuZCBjYW4gDQpzdWJtaXQgaW4gUERGLCB3b3JkIG9yIHBsYWlu
IHRleHQgZm9ybWF0IGFzIHByZWZlcnJlZC4NCg0KSWYgeW91IGFyZSB1bnN1cmUgd2hldGhlciB5
b3VyIGNvbnRyaWJ1dGlvbiBpcyBzdWl0YWJsZSwgb3IgaWYNCnlvdSBuZWVkIGFueSBraW5kIG9m
IGhlbHAgd2l0aCB5b3VyIHN1Ym1pc3Npb24sIHBsZWFzZSBlbWFpbA0KdGhlIHByb2dyYW0gY2hh
aXJzIGF0IDxmdW5hcmNoMjAyM0BlYXN5Y2hhaXIub3JnPi4NCg0KU1VCTUlTU0lPTjoNCg0KUGFw
ZXJzIG11c3QgYmUgc3VibWl0dGVkIGJ5IDFzdCBKdW5lIDIwMjMgdXNpbmcgRWFzeUNoYWlyLCB2
aWEgdGhlDQpmb2xsb3dpbmcgbGluazogaHR0cHM6Ly90aW55dXJsLmNvbS9GVU5BUkNIMjMtc3Vi
bWl0DQoNCkZvcm1hdHRpbmc6IHN1Ym1pc3Npb25zIGludGVuZGVkIGZvciBwdWJsaWNhdGlvbiBt
dXN0IGJlIGluIFBERg0KZm9ybWF0IGFuZCBmb2xsb3cgdGhlIEFDTSBTSUdQTEFOIHN0eWxlIGd1
aWRlbGluZXMsIHVzaW5nIHRoZQ0KYWNtYXJ0IGZvcm1hdCBhbmQgdGhlIHNpZ3BsYW4gc3ViLWZv
cm1hdC4gIFBsZWFzZSB1c2UgdGhlIHJldmlldw0Kb3B0aW9uLCBhcyB0aGlzIGVuYWJsZXMgbGlu
ZSBudW1iZXJzIGZvciBlYXN5IHJlZmVyZW5jZSBpbiByZXZpZXdzLg0KRm9yIGZ1cnRoZXIgZGV0
YWlscywgc2VlOiBodHRwczovL3Rpbnl1cmwuY29tL3NpZ3BsYW4tYWNtYXJ0DQoNCklmIHlvdXIg
c3VibWlzc2lvbiBpcyBub3QgYSByZXNlYXJjaCBwYXBlciwgcGxlYXNlIG1hcmsgdGhpcyB1c2lu
Zw0KYSBzdWJ0aXRsZSAoRXhwZXJpZW5jZSBSZXBvcnQsIEFyY2hpdGVjdHVyYWwgUGVhcmwsIE9w
ZW4gQ2F0ZWdvcnkpLg0KDQpMZW5ndGg6IHN1Ym1pc3Npb25zIG11c3QgYWRoZXJlIHRvIHRoZSBs
aW1pdHMgc3BlY2lmaWVkIGJlbG93Lg0KSG93ZXZlciwgdGhlcmUgaXMgbm8gcmVxdWlyZW1lbnQg
b3IgZXhwZWN0YXRpb24gdGhhdCBhbGwgcGFnZXMNCmFyZSB1c2VkLCBhbmQgYXV0aG9ycyBhcmUg
ZW5jb3VyYWdlZCB0byBzdHJpdmUgZm9yIGJyZXZpdHkuDQoNClJlc2VhcmNoIHBhcGVycwkJNSB0
byAxMisgcGFnZXMNCkFyY2hpdGVjdHVyYWwgcGVhcmxzCTUgdG8gMTIgcGFnZXMNCkV4cGVyaWVu
Y2UgcmVwb3J0cwkzIHRvIDYgcGFnZXMNCk9wZW4gY2F0ZWdvcnkJCTEgdG8gNiBwYWdlcw0KDQpQ
dWJsaWNhdGlvbjogVGhlIHByb2NlZWRpbmdzIG9mIEZVTkFSQ0ggMjAyMyB3aWxsIGJlIHB1Ymxp
c2hlZCBpbg0KdGhlIEFDTSBEaWdpdGFsIExpYnJhcnksIGFuZCBhdXRob3JzIG9mIGFjY2VwdGVk
IHBhcGVycyBhcmUgcmVxdWlyZWQNCnRvIGFncmVlIHRvIG9uZSBvZiB0aGUgc3RhbmRhcmQgQUNN
IGxpY2Vuc2luZyBvcHRpb25zLiAgQWNjZXB0ZWQNCnBhcGVycyBtdXN0IGJlIHByZXNlbnRlZCBh
dCB0aGUgd29ya3Nob3AgYnkgb25lIG9mIHRoZSBhdXRob3JzLCBidXQNCmluIHNwZWNpYWwgY2Fz
ZXMgd2UgbWF5IGNvbnNpZGVyIHJlbW90ZSBwcmVzZW50YXRpb24uIA0KDQpUaGUgb2ZmaWNpYWwg
cHVibGljYXRpb24gZGF0ZSBpcyB0aGUgZGF0ZSB0aGUgcGFwZXJzIGFyZSBtYWRlIGF2YWlsYWJs
ZQ0KaW4gdGhlIEFDTSBEaWdpdGFsIExpYnJhcnkuIFRoaXMgZGF0ZSBtYXkgYmUgdXAgdG8gdHdv
IHdlZWtzIHByaW9yIHRvDQp0aGUgZmlyc3QgZGF5IG9mIHRoZSBjb25mZXJlbmNlLiBUaGUgb2Zm
aWNpYWwgcHVibGljYXRpb24gZGF0ZSBhZmZlY3RzDQp0aGUgZGVhZGxpbmUgZm9yIGFueSBwYXRl
bnQgZmlsaW5ncyByZWxhdGVkIHRvIHB1Ymxpc2hlZCB3b3JrLg0KDQpQUk9HUkFNIENIQUlSUzoN
Cg0KTWlrZSBTcGVyYmVyIAkJQWN0aXZlIEdyb3VwLCBHZXJtYW55DQpHcmFoYW0gSHV0dG9uIAkJ
VW5pdmVyc2l0eSBvZiBOb3R0aW5naGFtLCBVSw0KDQpQUk9HUkFNIENPTU1JVFRFRToNCg0KSm9h
Y2hpbSBCcmVpdG5lcglHZXJtYW55DQpNYW51ZWwgQ2hha3JhdmFydHkJVHdlYWcgJiBJT0csIFRo
ZSBOZXRoZXJsYW5kcw0KUm9uIEdhcmNpYQkJVW5pdmVyc2l0eSBvZiBCcml0aXNoIENvbHVtYmlh
LCBDYW5hZGENCkRlYmFzaXNoIEdob3NoCQlMZWFkSVEsIEluZGlhDQpMYXJzIEh1cGVsCQlHaWVz
ZWNrZStEZXZyaWVudCwgR2VybWFueQ0KQW5keSBLZWVwCQlNZXRhLCBVU0ENClNocmlyYW0gS3Jp
c2huYW11cnRoaQlCcm93biBVbml2ZXJzaXR5LCBVU0ENCkFuZHJlcyBMw7ZoCQlXZWxsLVR5cGVk
LCBHZXJtYW55DQpBbmlsIE1hZGhhdmFwZWRkeQlVbml2ZXJzaXR5IG9mIENhbWJyaWRnZSwgVUsN
Ckpvc8OpIFBlZHJvIE1hZ2FsaMOjZXMJU3RhbmRhcmQgQ2hhcnRlcmVkLCBVSw0KU2ltb24gTWFy
bG93CQlNZXRhLCBVSw0KSGFubmVzIE1laG5lcnQJCVJvYnVyLCBHZXJtYW55DQpFcmlrIE1laWpl
cgkJVVNBDQpJdmFuIFBlcmV6CQlLQlIgLyBOQVNBIEFtZXMgUmVzZWFyY2ggQ2VudGVyLCBVU0EN
ClN0ZWZhbmllIFNjaGlybWVyCUR1Y2tEdWNrR28sIEdlcm1hbnkNClBlcmRpdGEgU3RldmVucwkJ
VW5pdmVyc2l0eSBvZiBFZGluYnVyZ2gsIFVLDQpTdGVmYW4gV2VocgkJSG9jaHNjaHVsZSBPZmZl
bmJ1cmcsIEdlcm1hbnkNClNjb3R0IFdsYXNjaGluCQlGUGJyaWRnZSwgVUsNCg0KV09SS1NIT1Ag
VkVOVUU6DQoNClRoZSB3b3Jrc2hvcCB3aWxsIGJlIGNvLWxvY2F0ZWQgd2l0aCB0aGUgSUNGUCAy
MDIzIGNvbmZlcmVuY2UgYXQNClRoZSBXZXN0aW4gU2VhdHRsZSBIb3RlbCwgU2VhdHRsZSwgV2Fz
aGluZ3RvbiwgVW5pdGVkIFN0YXRlcy4NCg0KPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09
PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PQ0K
